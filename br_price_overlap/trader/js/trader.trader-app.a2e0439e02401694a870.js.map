{"version":3,"file":"trader/js/trader.trader-app.a2e0439e02401694a870.js","mappings":"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","sources":["webpack://@deriv/trader/../api/src/APIContext.ts","webpack://@deriv/trader/../api/src/useAPI.ts","webpack://@deriv/trader/../api/src/APIProvider.tsx","webpack://@deriv/trader/../api/src/useSubscription.ts","webpack://@deriv/trader/../stores/src/storeContext.ts","webpack://@deriv/trader/../stores/src/useStore.ts","webpack://@deriv/trader/../stores/src/providers/ExchangeRatesProvider.tsx","webpack://@deriv/trader/../stores/src/stores/BaseStore.ts","webpack://@deriv/trader/../stores/src/stores/ExchangeRatesStore.ts","webpack://@deriv/trader/../stores/src/stores/FeatureFlagsStore.ts","webpack://@deriv/trader/../stores/src/storeProvider.tsx","webpack://@deriv/trader/./src/App/Components/Animations/bounce.jsx","webpack://@deriv/trader/./src/App/Components/Animations/slide-in.jsx","webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/positions-card.jsx","webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/trade-params.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/helpers/positions-helper.ts","webpack://@deriv/trader/./src/_common/components/loading.tsx","webpack://@deriv/trader/./src/App/Components/Elements/chart-loader.tsx","webpack://@deriv/trader/./src/App/Components/Routes/helpers.js","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/empty-portfolio-message.tsx","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/index.ts","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-drawer.tsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/index.ts","webpack://@deriv/trader/./src/App/Components/Elements/market-countdown-timer.tsx","webpack://@deriv/trader/./src/App/Components/Elements/market-is-closed-overlay.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/test.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Helpers/symbol.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/chart-widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/form-layout.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-text.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-tooltip.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-chart-elements.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/toolbar-widgets.jsx","webpack://@deriv/trader/./src/Modules/SmartChartBeta/Components/toolbar-widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade.jsx","webpack://@deriv/trader/./src/Modules/Trading/index.js","webpack://@deriv/trader/./src/App/Constants/routes-config.js","webpack://@deriv/trader/./src/App/Components/Routes/binary-link.jsx","webpack://@deriv/trader/./src/App/Components/Routes/route-with-sub-routes.jsx","webpack://@deriv/trader/./src/App/Components/Routes/binary-routes.jsx","webpack://@deriv/trader/./src/App/Components/Routes/index.js","webpack://@deriv/trader/./src/App/Containers/Routes/routes.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-result-mobile.tsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-modal-card.tsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions.tsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions-mobile.tsx","webpack://@deriv/trader/./src/App/Containers/populate-header.tsx","webpack://@deriv/trader/./src/trader-providers.tsx","webpack://@deriv/trader/./src/App/Containers/trade-header-extensions.tsx","webpack://@deriv/trader/./src/App/Containers/trade-footer-extensions.tsx","webpack://@deriv/trader/./src/App/Containers/trade-settings-extensions.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/symbol.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Constants/validation-rules.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/purchase.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/accumulator.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/contract-type.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/duration.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/start-date.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/process.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/barrier-utils.ts","webpack://@deriv/trader/./src/Utils/Validator/validator.ts","webpack://@deriv/trader/./src/Utils/Validator/index.ts","webpack://@deriv/trader/./src/Stores/base-store.ts","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/Helpers/barriers.ts","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/chart-barrier-store.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/limit-orders.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/chart.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/trade-store.ts","webpack://@deriv/trader/./src/Stores/Modules/index.js","webpack://@deriv/trader/./src/Stores/index.ts","webpack://@deriv/trader/./src/App/init-store.js","webpack://@deriv/trader/./src/App/app.tsx","webpack://@deriv/trader/./src/App/index.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/ticks-history-counter.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/expanded-ticks-history.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats-manual-modal.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/index.js","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-spot.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-stat.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-display.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/digits.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/index.ts","webpack://@deriv/trader/./src/Modules/Page404/Components/Page404.tsx","webpack://@deriv/trader/./src/Modules/Page404/index.ts","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/marker.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/icons.js","webpack://@deriv/trader/./src/Modules/SmartChart/Components/all-markers.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/bottom-widgets.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/buy-toast-notification.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/top-widgets.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/index.js","webpack://@deriv/trader/./src/Modules/SmartChartBeta/Components/Markers/marker.jsx","webpack://@deriv/trader/./src/Modules/SmartChartBeta/index.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/smart-chart-switcher.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/toast-popup.tsx","webpack://@deriv/trader/./src/Modules/Trading/Helpers/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Helpers/digits.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/contract-type.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/proposal.ts","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/start-date.ts","webpack://@deriv/trader/./src/Stores/useTraderStores.tsx","webpack://@deriv/trader/./src/Utils/Helpers/market-underlying.ts","webpack://@deriv/trader/./src/_common/base/server_time.js","webpack://@deriv/trader/./src/_common/utility.js"],"sourcesContent":["import { createContext } from 'react';\n\n// Don't need to type `deriv_api` here, We will be using these methods inside\n// the `useQuery`, `useMutation` and `useSubscription` hook to make it type-safe.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst APIContext = createContext<Record<string, any> | null>(null);\n\nexport default APIContext;\n","import { useCallback, useContext } from 'react';\n\nimport type {\n    TSocketEndpointNames,\n    TSocketPaginateableEndpointNames,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nimport APIContext from './APIContext';\n\nconst useAPI = () => {\n    const api = useContext(APIContext);\n\n    const send = useCallback(\n        async <T extends TSocketEndpointNames | TSocketPaginateableEndpointNames = TSocketEndpointNames>(\n            name: T,\n            payload?: TSocketRequestPayload<T>\n        ): Promise<TSocketResponseData<T>> => {\n            const response = await api?.send({ [name]: 1, ...(payload || {}) });\n\n            if (response.error) {\n                throw response.error;\n            }\n\n            return response;\n        },\n        [api]\n    );\n\n    const subscribe = useCallback(\n        <T extends TSocketSubscribableEndpointNames>(\n            name: T,\n            payload?: TSocketRequestPayload<T>\n        ): {\n            subscribe: (\n                // The type will be handled by the `useSubscription` hook.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onData: (response: any) => void,\n                // The type will be handled by the `useSubscription` hook.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onError: (response: any) => void\n            ) => { unsubscribe?: VoidFunction };\n        } => api?.subscribe({ [name]: 1, subscribe: 1, ...(payload || {}) }),\n        [api]\n    );\n\n    return {\n        send,\n        subscribe,\n    };\n};\n\nexport default useAPI;\n","import React, { PropsWithChildren } from 'react';\n// @ts-expect-error `@deriv/deriv-api` is not in TypeScript, Hence we ignore the TS error.\nimport DerivAPIBasic from '@deriv/deriv-api/dist/DerivAPIBasic';\nimport { getAppId, getSocketURL, useWS } from '@deriv/shared';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport APIContext from './APIContext';\n\ndeclare global {\n    interface Window {\n        ReactQueryClient?: QueryClient;\n        DerivAPI?: Record<string, DerivAPIBasic>;\n    }\n}\n\n// This is a temporary workaround to share a single `QueryClient` instance between all the packages.\n// Later once we have each package separated we won't need this anymore and can remove this.\nconst getSharedQueryClientContext = (): QueryClient => {\n    if (!window.ReactQueryClient) {\n        window.ReactQueryClient = new QueryClient();\n    }\n\n    return window.ReactQueryClient;\n};\n\n// This is a temporary workaround to share a single `DerivAPIBasic` instance for every unique URL.\n// Later once we have each package separated we won't need this anymore and can remove this.\nconst getDerivAPIInstance = (): DerivAPIBasic => {\n    const endpoint = getSocketURL();\n    const app_id = getAppId();\n    const language = 'EN'; // Need to use the language from the app context.\n    const brand = 'deriv';\n    const wss = `wss://${endpoint}/websockets/v3?app_id=${app_id}&l=${language}&brand=${brand}`;\n\n    if (!window.DerivAPI) {\n        window.DerivAPI = {};\n    }\n\n    if (!window.DerivAPI?.[wss]) {\n        window.DerivAPI[wss] = new DerivAPIBasic({ connection: new WebSocket(wss) });\n    }\n\n    return window.DerivAPI?.[wss];\n};\n\nconst queryClient = getSharedQueryClientContext();\n\ntype TProps = {\n    /** If set to true, the APIProvider will instantiate it's own socket connection. */\n    standalone?: boolean;\n};\n\nconst APIProvider = ({ children, standalone = false }: PropsWithChildren<TProps>) => {\n    const WS = useWS();\n    // Use the new API instance if the `standalone` prop is set to true,\n    // else use the legacy socket connection.\n    const active_connection = standalone ? getDerivAPIInstance() : WS;\n\n    return (\n        <APIContext.Provider value={active_connection}>\n            <QueryClientProvider client={queryClient}>\n                {children}\n                {/* <ReactQueryDevtools /> */}\n            </QueryClientProvider>\n        </APIContext.Provider>\n    );\n};\n\nexport default APIProvider;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport useAPI from './useAPI';\nimport type {\n    TSocketAcceptableProps,\n    TSocketError,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nconst useSubscription = <T extends TSocketSubscribableEndpointNames>(name: T) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSubscribed, setSubscribed] = useState(false);\n    const [error, setError] = useState<TSocketError<T>>();\n    const [data, setData] = useState<TSocketResponseData<T>>();\n    const subscriber = useRef<{ unsubscribe?: VoidFunction }>();\n    const { subscribe: _subscribe } = useAPI();\n\n    const subscribe = useCallback(\n        (...props: TSocketAcceptableProps<T>) => {\n            const prop = props?.[0];\n            const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n            setIsLoading(true);\n            setSubscribed(true);\n\n            try {\n                subscriber.current = _subscribe(name, payload).subscribe(\n                    response => {\n                        setData(response);\n                        setIsLoading(false);\n                    },\n                    response => {\n                        setError(response.error);\n                        setIsLoading(false);\n                    }\n                );\n            } catch (e) {\n                setError(e as TSocketError<T>);\n            }\n        },\n        [_subscribe, name]\n    );\n\n    const unsubscribe = useCallback(() => {\n        subscriber.current?.unsubscribe?.();\n        setSubscribed(false);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            unsubscribe();\n        };\n    }, [unsubscribe]);\n\n    return {\n        subscribe,\n        unsubscribe,\n        isLoading,\n        isSubscribed,\n        error,\n        data,\n    };\n};\n\nexport default useSubscription;\n","import { createContext } from 'react';\nimport type { TStores } from '../types';\n\nconst StoreContext = createContext<TStores | null>(null);\n\nexport default StoreContext;\n","import { useContext } from 'react';\nimport StoreContext from './storeContext';\n\nconst useStore = () => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n        throw new Error('useStore must be used within StoreProvider');\n    }\n\n    return store;\n};\n\nexport default useStore;\n","import React, { useEffect } from 'react';\nimport { useSubscription } from '@deriv/api';\nimport merge from 'lodash.merge';\nimport { observer } from 'mobx-react-lite';\nimport useStore from '../useStore';\n\nconst ExchangeRatesProvider = observer(({ children }: React.PropsWithChildren<unknown>) => {\n    const { data, subscribe } = useSubscription('exchange_rates');\n    const {\n        exchange_rates: { update },\n    } = useStore();\n\n    useEffect(() => {\n        subscribe({ payload: { base_currency: 'USD' } });\n    }, [subscribe]);\n\n    useEffect(() => {\n        if (data) {\n            const { exchange_rates } = data;\n\n            if (exchange_rates) update(prev => merge(prev, exchange_rates));\n        }\n    }, [update, data]);\n\n    return <>{children}</>;\n});\n\nexport default ExchangeRatesProvider;\n","import { action, makeObservable, observable } from 'mobx';\nimport { makePersistable, stopPersisting } from 'mobx-persist-store';\n\nexport default class BaseStore<T> {\n    data: T | undefined = undefined;\n\n    constructor(name: string, onHydrationDone?: VoidFunction) {\n        makeObservable(this, {\n            data: observable,\n            update: action.bound,\n            unmount: action.bound,\n        });\n\n        makePersistable(this, { name, properties: ['data'], storage: window.localStorage }).then(() =>\n            onHydrationDone?.()\n        );\n    }\n\n    update(data: NonNullable<T> | ((previous?: T) => NonNullable<T>)) {\n        this.data = data instanceof Function ? data(this.data) : data;\n    }\n\n    unmount() {\n        stopPersisting(this);\n    }\n}\n","import BaseStore from './BaseStore';\nimport type { ExchangeRatesResponse } from '@deriv/api-types';\n\nexport default class ExchangeRatesStore extends BaseStore<ExchangeRatesResponse['exchange_rates']> {\n    constructor() {\n        super('ExchangeRatesStore');\n    }\n}\n","import BaseStore from './BaseStore';\n\nconst FLAGS = {\n    wallet: false,\n    next_wallet: false,\n    sharkfin: false,\n} satisfies Record<string, boolean>;\n\nexport default class FeatureFlagsStore extends BaseStore<{ [k in keyof typeof FLAGS]: boolean }> {\n    constructor() {\n        super('FeatureFlagsStore', () => {\n            // Set the default values for the first time.\n            if (!this.data) this.update(FLAGS);\n\n            // Update the store data if a new flag was added or removed.\n            if (this.data && Object.keys(this.data).length !== Object.keys(FLAGS).length) {\n                this.update(old => {\n                    const data = FLAGS;\n\n                    Object.keys(FLAGS).forEach(flag => {\n                        // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n                        if (old[flag] !== undefined) data[flag] = old[flag];\n                    });\n\n                    return data;\n                });\n            }\n        });\n\n        this.data = FLAGS;\n    }\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { APIProvider } from '@deriv/api';\nimport { ExchangeRatesProvider } from './providers';\nimport StoreContext from './storeContext';\nimport { ExchangeRatesStore, FeatureFlagsStore } from './stores';\nimport type { TCoreStores, TStores } from '../types';\n\nconst StoreProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    const memoizedValue: TStores = useMemo(() => {\n        // If the store is mocked for testing purposes, then return the mocked value.\n        if ('is_mock' in store && store.is_mock) return store as unknown as TStores;\n\n        // Otherwise, instantiate store and return it.\n        return {\n            ...store,\n            exchange_rates: new ExchangeRatesStore(),\n            feature_flags: new FeatureFlagsStore(),\n        };\n    }, [store]);\n\n    useEffect(() => {\n        return () => {\n            Object.values(memoizedValue).forEach(value => {\n                if (typeof value === 'object' && 'unmount' in value) value.unmount();\n            });\n        };\n    }, [memoizedValue]);\n\n    return (\n        <APIProvider>\n            <StoreContext.Provider value={memoizedValue}>\n                <ExchangeRatesProvider>{children}</ExchangeRatesProvider>\n            </StoreContext.Provider>\n        </APIProvider>\n    );\n};\n\nexport default StoreProvider;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst BounceUp = {\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    initial: {\n        y: 35,\n        opacity: 0,\n    },\n    transition: {\n        type: 'spring',\n        stiffness: 500,\n        damping: 15,\n        duration: 0.3,\n    },\n};\n\nconst Bounce = ({ children, className, is_visible, keyname }) =>\n    is_visible ? (\n        <motion.div\n            initial={BounceUp.initial}\n            animate={BounceUp.animate}\n            transition={BounceUp.transition}\n            className={className}\n            key={keyname}\n        >\n            {children}\n        </motion.div>\n    ) : null;\n\nBounce.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    is_visible: PropTypes.bool,\n    keyname: PropTypes.string,\n};\n\nexport { Bounce };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst SlideInFromTop = {\n    initial: {\n        y: -20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideInFromBottom = {\n    initial: {\n        y: 20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideIn = ({ children, className, keyname, is_visible, type }) => {\n    if (type === 'bottom') {\n        return (\n            <>\n                {is_visible && (\n                    <motion.div\n                        initial={SlideInFromBottom.initial}\n                        animate={SlideInFromBottom.animate}\n                        transition={SlideInFromBottom.transition}\n                        className={className}\n                        key={keyname}\n                    >\n                        {children}\n                    </motion.div>\n                )}\n            </>\n        );\n    }\n    return (\n        <>\n            {is_visible && (\n                <motion.div\n                    initial={SlideInFromTop.initial}\n                    animate={SlideInFromTop.animate}\n                    transition={SlideInFromTop.transition}\n                    className={className}\n                    key={keyname}\n                >\n                    {children}\n                </motion.div>\n            )}\n        </>\n    );\n};\n\nSlideIn.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    is_visible: PropTypes.bool,\n    keyname: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport { SlideIn };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PositionsCardLoader = ({ speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <rect x='43' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='147' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='12' y='50' rx='0' ry='0' width='44' height='8' />\n        <rect x='13' y='68' rx='0' ry='0' width='192' height='8' />\n        <rect x='5' y='89' rx='0' ry='0' width='208' height='1' />\n        <rect x='12' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='9' rx='0' ry='0' width='24' height='24' />\n        <rect x='116' y='11' rx='0' ry='0' width='24' height='24' />\n        <rect x='12' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='12' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='153' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88' height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DesktopWrapper, MobileWrapper } from '@deriv/components';\n\nconst TradeParamsLoader = ({ speed }) => (\n    <>\n        <MobileWrapper>\n            <ContentLoader\n                height={214}\n                width={344}\n                speed={speed}\n                backgroundColor={'var(--general-section-1)'}\n                foregroundColor={'var(--general-hover)'}\n                viewBox='0 0 344 176'\n            >\n                <rect x='148' y='24' rx='3' ry='3' width='40' height='4' />\n                <rect x='8' y='40' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='88' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='136' rx='4' ry='4' width='160' height='70' />\n                <rect x='176' y='136' rx='4' ry='4' width='160' height='70' />\n            </ContentLoader>\n        </MobileWrapper>\n        <DesktopWrapper>\n            <ContentLoader\n                height={548}\n                width={240}\n                speed={speed}\n                backgroundColor={'var(--general-section-1)'}\n                foregroundColor={'var(--general-hover)'}\n            >\n                <rect x='0' y='0' rx='4' ry='4' width='240' height='76' />\n                <rect x='0' y='84' rx='4' ry='4' width='240' height='132' />\n                <rect x='0' y='224' rx='4' ry='4' width='240' height='120' />\n                <rect x='0' y='352' rx='4' ry='4' width='240' height='194' />\n            </ContentLoader>\n        </DesktopWrapper>\n    </>\n);\n\nTradeParamsLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { TradeParamsLoader };\n","import { localize } from '@deriv/translations';\nimport { isHighLow, getContractTypesConfig, isCallPut, isVanillaContract, TContractInfo } from '@deriv/shared';\n\nexport const addCommaToNumber = (\n    num: number | null | undefined,\n    decimal_places?: number | undefined\n): string | number | null | undefined => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(/\\d(?=(?:\\d{3})+(?:\\.|$))/g, (m, i) => (p <= 0 || i < p ? `${m},` : m));\n};\n\nexport const getBarrierLabel = (contract_info: TContractInfo) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    if (isVanillaContract(contract_info.contract_type)) {\n        return localize('Strike');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = (contract_info: TContractInfo) => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type as keyof ReturnType<typeof digitTypeMap>];\n    }\n    return addCommaToNumber(Number(contract_info.barrier));\n};\n\nexport const isDigitType = (contract_type: TContractInfo['contract_type']) =>\n    contract_type && /digit/.test(contract_type.toLowerCase());\n\nconst digitTypeMap = (contract_info: TContractInfo) => ({\n    DIGITDIFF: localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN: localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD: localize('Odd'),\n    DIGITOVER: localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n\nexport const filterByContractType = (\n    { contract_type, shortcode }: { contract_type?: string; shortcode?: string },\n    trade_contract_type: string\n) => {\n    const is_call_put = isCallPut(trade_contract_type as Parameters<typeof isCallPut>[0]);\n    const is_high_low = isHighLow({ shortcode });\n    const is_vanilla = isVanillaContract(contract_type);\n    const trade_types = is_call_put\n        ? ['CALL', 'CALLE', 'PUT', 'PUTE']\n        : getContractTypesConfig()[trade_contract_type]?.trade_types;\n    const match = trade_types?.includes(contract_type ?? '');\n    if (trade_contract_type === 'high_low') return is_high_low;\n    return match && (is_vanilla || !is_high_low);\n};\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype LoadingProps = {\n    className?: string;\n    data_testid?: string;\n    is_invisible?: boolean;\n    theme?: string;\n    id?: string;\n};\n\nconst Loading = ({ className, data_testid, is_invisible, theme, id }: LoadingProps) => (\n    <div\n        id={id}\n        data-testid={data_testid}\n        className={classNames('barspinner', `barspinner--${theme || 'dark'}`, { invisible: is_invisible }, className)}\n    >\n        {Array.from(new Array(5)).map((_x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import React from 'react';\nimport Loading from '_common/components/loading';\n\ntype TChartLoader = {\n    is_dark: boolean;\n    is_visible: boolean;\n};\n\nconst ChartLoader = ({ is_dark, is_visible }: TChartLoader) =>\n    is_visible ? (\n        <div className='chart-container__loader'>\n            <Loading theme={is_dark ? 'dark' : 'light'} data_testid='dt_barspinner' />\n        </div>\n    ) : null;\n\nexport default ChartLoader;\n","import { matchPath } from 'react-router';\nimport { routes } from '@deriv/shared';\n\nexport const normalizePath = path => (/^\\//.test(path) ? path : `/${path || ''}`); // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some(route_info => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) => !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) =>\n    Object.keys(params).reduce((p, name) => p.replace(`:${name}`, params[name]), route_path);\n\nexport const getContractPath = contract_id => getPath(routes.contract, { contract_id });\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TEmptyPortfolioMessage = {\n    error?: string;\n};\n\nconst EmptyPortfolioMessage = ({ error }: TEmptyPortfolioMessage) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            {error ? (\n                <Text color='disabled' size='xs'>\n                    {error}\n                </Text>\n            ) : (\n                <React.Fragment>\n                    <Icon icon='IcPortfolio' className='portfolio-empty__icon' size={96} color='disabled' />\n                    <Text align='center' className='portfolio-empty__text' color='disabled' size='xs'>\n                        {localize(\n                            'You have no open positions for this asset. To view other open positions, click Go to Reports'\n                        )}\n                    </Text>\n                </React.Fragment>\n            )}\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import EmptyPortfolioMessage from './empty-portfolio-message';\n\nexport default EmptyPortfolioMessage;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon, DataList, Text, PositionsDrawerCard } from '@deriv/components';\nimport { routes, useNewRowTransition, TURBOS, VANILLALONG, isTurbosContract, isVanillaContract } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\nimport { filterByContractType } from './helpers';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TUiStore = Pick<\n    ReturnType<typeof useStore>['ui'],\n    | 'addToast'\n    | 'current_focus'\n    | 'is_mobile'\n    | 'removeToast'\n    | 'setCurrentFocus'\n    | 'should_show_cancellation_warning'\n    | 'toggleCancellationWarning'\n    | 'toggleUnsupportedContractModal'\n>;\ntype TPortfolioStore = Pick<\n    ReturnType<typeof useStore>['portfolio'],\n    'onHoverPosition' | 'onClickCancel' | 'onClickSell'\n>;\ntype TPositionDrawerCardItem = TPortfolioStore &\n    TUiStore & {\n        currency: ReturnType<typeof useStore>['client']['currency'];\n        getContractById: ReturnType<typeof useStore>['contract_trade']['getContractById'];\n        is_new_row?: boolean;\n        measure?: () => void;\n        onClickRemove: ReturnType<typeof useStore>['portfolio']['removePositionById'];\n        row?: TPortfolioPosition | { [key: string]: any };\n        server_time: ReturnType<typeof useStore>['common']['server_time'];\n        symbol: ReturnType<typeof useTraderStore>['symbol'];\n    };\ntype TPortfolioPosition = ReturnType<typeof useStore>['portfolio']['active_positions'][0];\n\nconst PositionsDrawerCardItem = ({\n    row: portfolio_position,\n    measure,\n    onHoverPosition,\n    symbol,\n    is_new_row,\n    ...props\n}: TPositionDrawerCardItem) => {\n    const { in_prop } = useNewRowTransition(is_new_row as boolean);\n\n    React.useEffect(() => {\n        measure?.();\n    }, [portfolio_position?.contract_info.is_sold, measure]);\n\n    return (\n        <CSSTransition\n            in={in_prop}\n            timeout={150}\n            classNames={{\n                appear: 'dc-contract-card__wrapper--enter',\n                enter: 'dc-contract-card__wrapper--enter',\n                enterDone: 'dc-contract-card__wrapper--enter-done',\n                exit: 'dc-contract-card__wrapper--exit',\n            }}\n            onEntered={measure}\n            unmountOnExit\n        >\n            <div className='dc-contract-card__wrapper'>\n                <PositionsDrawerCard\n                    {...portfolio_position}\n                    {...props}\n                    onMouseEnter={() => {\n                        onHoverPosition(true, portfolio_position as TPortfolioPosition, symbol);\n                    }}\n                    onMouseLeave={() => {\n                        onHoverPosition(false, portfolio_position as TPortfolioPosition, symbol);\n                    }}\n                    onFooterEntered={measure}\n                    should_show_transition={is_new_row}\n                />\n            </div>\n        </CSSTransition>\n    );\n};\n\nconst PositionsDrawer = observer(({ ...props }) => {\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { client, common, contract_trade, portfolio, ui } = useStore();\n    const { currency } = client;\n    const { server_time } = common;\n    const { getContractById } = contract_trade;\n    const {\n        all_positions,\n        error,\n        onHoverPosition,\n        onMount,\n        onClickCancel,\n        onClickSell,\n        removePositionById: onClickRemove,\n    } = portfolio;\n    const {\n        is_mobile,\n        is_positions_drawer_on,\n        togglePositionsDrawer: toggleDrawer,\n        addToast,\n        current_focus,\n        removeToast,\n        setCurrentFocus,\n        should_show_cancellation_warning,\n        toggleCancellationWarning,\n        toggleUnsupportedContractModal,\n    } = ui;\n    const drawer_ref = React.useRef(null);\n    const list_ref = React.useRef<HTMLDivElement>(null);\n    const scrollbar_ref = React.useRef<HTMLElement>(null);\n\n    React.useEffect(() => {\n        onMount();\n    }, [onMount]);\n\n    React.useEffect(() => {\n        list_ref?.current?.scrollTo({ top: 0 });\n        if (scrollbar_ref.current) scrollbar_ref.current.scrollTop = 0;\n    }, [symbol, trade_contract_type]);\n\n    const positions = all_positions.filter(\n        p =>\n            p.contract_info &&\n            symbol === p.contract_info.underlying &&\n            (isTurbosContract(trade_contract_type) || isVanillaContract(trade_contract_type)\n                ? filterByContractType(\n                      p.contract_info,\n                      isTurbosContract(trade_contract_type) ? TURBOS.SHORT : VANILLALONG.CALL\n                  ) ||\n                  filterByContractType(\n                      p.contract_info,\n                      isTurbosContract(trade_contract_type) ? TURBOS.LONG : VANILLALONG.PUT\n                  )\n                : filterByContractType(p.contract_info, trade_contract_type))\n    );\n    const body_content = (\n        <DataList\n            data_source={positions}\n            rowRenderer={args => (\n                <PositionsDrawerCardItem\n                    onHoverPosition={onHoverPosition}\n                    symbol={symbol}\n                    currency={currency}\n                    addToast={addToast}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    onClickRemove={onClickRemove}\n                    server_time={server_time}\n                    getContractById={getContractById}\n                    is_mobile={is_mobile}\n                    current_focus={current_focus}\n                    removeToast={removeToast}\n                    setCurrentFocus={setCurrentFocus}\n                    should_show_cancellation_warning={should_show_cancellation_warning}\n                    toggleCancellationWarning={toggleCancellationWarning}\n                    toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                    {...args}\n                    {...props}\n                />\n            )}\n            keyMapper={row => row.id}\n            row_gap={8}\n        />\n    );\n\n    return (\n        <React.Fragment>\n            <div\n                className={classNames('positions-drawer__bg', {\n                    'positions-drawer__bg--open': is_positions_drawer_on,\n                })}\n            />\n            <div\n                id='dt_positions_drawer'\n                className={classNames('positions-drawer', {\n                    'positions-drawer--open': is_positions_drawer_on,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <Text color='prominent' weight='bold' size='xs'>\n                        {localize('Recent positions')}\n                    </Text>\n                    <div\n                        id='dt_positions_drawer_close_icon'\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IcMinusBold' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body' ref={drawer_ref}>\n                    {positions.length === 0 || error ? <EmptyPortfolioMessage error={error} /> : body_content}\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink\n                        id='dt_positions_drawer_report_button'\n                        className='dc-btn dc-btn--secondary dc-btn__large'\n                        to={routes.reports}\n                    >\n                        <Text size='xs' weight='bold'>\n                            {localize('Go to Reports')}\n                        </Text>\n                    </NavLink>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default PositionsDrawer;\n","import PositionsDrawer from './positions-drawer';\n\nexport default PositionsDrawer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport moment from 'moment';\nimport { Text } from '@deriv/components';\nimport { useIsMounted, WS, convertTimeFormat, isMarketClosed } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TradingTimesRequest, TradingTimesResponse } from '@deriv/api-types';\n\ntype TMarketCountDownTimer = {\n    is_main_page: boolean;\n    setIsTimerLoading: React.Dispatch<React.SetStateAction<boolean>>;\n    onMarketOpen: ReturnType<typeof useTraderStore>['prepareTradeStore'];\n    symbol: ReturnType<typeof useTraderStore>['symbol'];\n};\n\ntype TWhenMarketOpens = {\n    days_offset: number;\n    opening_time: string;\n    remaining_time_to_open: number;\n};\n\n// check market in coming 7 days\nconst days_to_check_before_exit = 7;\n\nconst getTradingTimes = async (target_time: TradingTimesRequest['trading_times']) => {\n    const data = await WS.tradingTimes(target_time);\n    if (data.error) {\n        return { api_initial_load_error: data.error.message };\n    }\n    return data;\n};\n// eslint-disable-next-line consistent-return\nconst getSymbol = (\n    target_symbol: string,\n    trading_times: NonNullable<DeepRequired<TradingTimesResponse['trading_times']>>\n) => {\n    let symbol;\n    const { markets } = trading_times;\n    for (let i = 0; i < markets.length; i++) {\n        const { submarkets } = markets[i];\n        if (submarkets) {\n            for (let j = 0; j < submarkets.length; j++) {\n                const { symbols } = submarkets[j];\n                symbol = symbols?.find(item => item.symbol === target_symbol);\n                if (symbol !== undefined) return symbol;\n            }\n        }\n    }\n};\n\nconst calculateTimeLeft = (remaining_time_to_open: number) => {\n    const difference = remaining_time_to_open - Date.now();\n    return difference > 0\n        ? {\n              days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n              hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n              minutes: Math.floor((difference / 1000 / 60) % 60),\n              seconds: Math.floor((difference / 1000) % 60),\n          }\n        : {};\n};\n\nconst MarketCountdownTimer = observer(\n    ({ is_main_page, setIsTimerLoading, onMarketOpen, symbol }: TMarketCountDownTimer) => {\n        const { active_symbols } = useTraderStore();\n        const isMounted = useIsMounted();\n        const [when_market_opens, setWhenMarketOpens] = React.useState<TWhenMarketOpens>({} as TWhenMarketOpens);\n        const [time_left, setTimeLeft] = React.useState(calculateTimeLeft(when_market_opens?.remaining_time_to_open));\n        const [is_loading, setLoading] = React.useState(true);\n\n        React.useEffect(() => {\n            if (!is_main_page || (is_main_page && isMarketClosed(active_symbols, symbol))) {\n                setLoading(true);\n                // eslint-disable-next-line consistent-return\n                // @ts-expect-error there is no explict return type because of if statements\n                const whenMarketOpens = async (days_offset: number, target_symbol: string) => {\n                    // days_offset is 0 for today, 1 for tomorrow, etc.\n                    if (days_offset > days_to_check_before_exit) return {};\n                    let remaining_time_to_open;\n                    const target_date = moment(new Date()).add(days_offset, 'days');\n                    const api_response = await getTradingTimes(target_date.format('YYYY-MM-DD'));\n                    if (!api_response.api_initial_load_error) {\n                        const returned_symbol = getSymbol(target_symbol, api_response.trading_times);\n                        const open = returned_symbol?.times.open as string[];\n                        const close = returned_symbol?.times.close as string[];\n                        const is_closed_all_day = open?.length === 1 && open[0] === '--' && close[0] === '--';\n                        if (is_closed_all_day) {\n                            // check tomorrow trading times\n                            return whenMarketOpens(days_offset + 1, target_symbol);\n                        }\n                        const date_str = target_date.toISOString().substring(0, 11);\n                        const getUTCDate = (hour: string) => new Date(`${date_str}${hour}Z`);\n                        for (let i = 0; i < open?.length; i++) {\n                            const diff = +getUTCDate(open[i]) - Date.now();\n                            if (diff > 0) {\n                                remaining_time_to_open = +getUTCDate(open[i]);\n                                if (isMounted() && target_symbol === symbol) {\n                                    return setWhenMarketOpens({\n                                        days_offset,\n                                        opening_time: open[i],\n                                        remaining_time_to_open,\n                                    });\n                                }\n                            }\n                        }\n                        whenMarketOpens(days_offset + 1, target_symbol);\n                    }\n                };\n\n                whenMarketOpens(0, symbol);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [symbol]);\n\n        React.useEffect(() => {\n            let timer: ReturnType<typeof setTimeout>;\n            if (when_market_opens?.remaining_time_to_open) {\n                timer = setTimeout(() => {\n                    setTimeLeft(calculateTimeLeft(when_market_opens.remaining_time_to_open));\n                    if (+new Date(when_market_opens.remaining_time_to_open) - +new Date() < 1000) {\n                        setLoading(true);\n                        if (is_main_page) onMarketOpen(false);\n                    }\n                }, 1000);\n            }\n            return () => {\n                if (timer) {\n                    clearTimeout(timer);\n                }\n            };\n        }, [time_left, when_market_opens, onMarketOpen, is_main_page]);\n\n        React.useEffect(() => {\n            if (!is_loading) setIsTimerLoading(false);\n        }, [is_loading, setIsTimerLoading]);\n\n        let timer_components = '';\n\n        if (Object.keys(time_left).length) {\n            const hours = (Number(time_left.days) * 24 + Number(time_left.hours)).toString().padStart(2, '0');\n            const minutes = Number(time_left.minutes).toString().padStart(2, '0');\n            const seconds = Number(time_left.seconds).toString().padStart(2, '0');\n            timer_components = `${hours}:${minutes}:${seconds}`;\n        }\n\n        if (!(when_market_opens && timer_components)) return null;\n\n        const { opening_time, days_offset } = when_market_opens;\n        let opening_time_banner = null;\n        if (opening_time) {\n            const formatted_opening_time = convertTimeFormat(opening_time);\n            const target_date = moment(new Date()).add(days_offset, 'days');\n            const opening_date = target_date.format('DD MMM YYYY');\n            const opening_day = target_date.format('dddd');\n            opening_time_banner = (\n                <Text\n                    align='center'\n                    as='p'\n                    className='market-is-closed-overlay__open-date'\n                    line_height='m'\n                    color='prominent'\n                    size={is_main_page ? 's' : 'xs'}\n                    weight='bold'\n                >\n                    <Localize\n                        i18n_default_text='{{formatted_opening_time}} (GMT) on {{opening_day}},<0></0> {{opening_date}}.'\n                        components={[<div key={0} />]}\n                        values={{\n                            formatted_opening_time,\n                            opening_day,\n                            opening_date,\n                        }}\n                    />\n                </Text>\n            );\n        }\n\n        if (is_loading) setLoading(false);\n\n        return (\n            <React.Fragment>\n                <Text\n                    as='p'\n                    className={classNames('market-is-closed-overlay__open-at', {\n                        'market-is-closed-overlay__open-at--main-page': is_main_page,\n                    })}\n                    line_height='x'\n                    size={is_main_page ? 'xs' : 'xxs'}\n                >\n                    <Localize i18n_default_text='It will reopen at' />\n                </Text>\n                {opening_time_banner}\n                <Text\n                    align='center'\n                    as='p'\n                    className={classNames('market-is-closed-overlay__come-back', {\n                        'market-is-closed-overlay__come-back--main-page': is_main_page,\n                    })}\n                    line_height='x'\n                    size={is_main_page ? 'xs' : 'xxs'}\n                >\n                    <Localize i18n_default_text='Please come back in' />\n                </Text>\n                <Text\n                    as='p'\n                    className={classNames('market-is-closed-overlay__timer', {\n                        'market-is-closed-overlay__timer--main-page': is_main_page,\n                    })}\n                    line_height='m'\n                    color='prominent'\n                    size={is_main_page ? 's' : 'xs'}\n                    weight='bold'\n                >\n                    {timer_components}\n                </Text>\n                <div className='market-is-closed-overlay__separator' />\n            </React.Fragment>\n        );\n    }\n);\n\nexport default MarketCountdownTimer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport MarketCountdownTimer from './market-countdown-timer';\nimport { useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores.js';\n\ntype TMarketIsClosedOverlay = {\n    is_eu: ReturnType<typeof useStore>['client']['is_eu'];\n    is_synthetics_trading_market_available: ReturnType<typeof useTraderStore>['is_synthetics_trading_market_available'];\n    onClick: () => void;\n    onMarketOpen: React.ComponentProps<typeof MarketCountdownTimer>['onMarketOpen'];\n    symbol: ReturnType<typeof useTraderStore>['symbol'];\n};\n\nconst MarketIsClosedOverlay = ({\n    is_eu,\n    is_synthetics_trading_market_available,\n    onClick,\n    onMarketOpen,\n    symbol,\n}: TMarketIsClosedOverlay) => {\n    const [is_timer_loading, setIsTimerLoading] = React.useState(true);\n\n    let message: JSX.Element | null = (\n        <Localize i18n_default_text='In the meantime, try our synthetic indices. They simulate real-market volatility and are open 24/7.' />\n    );\n    let btn_lbl = localize('Try Synthetic Indices');\n\n    if (!is_synthetics_trading_market_available) {\n        message = null;\n        btn_lbl = localize('See open markets');\n    }\n\n    return (\n        <div\n            className={classNames('market-is-closed-overlay', {\n                'market-is-closed-overlay--loading': is_timer_loading,\n            })}\n        >\n            <Text as='p' className='market-is-closed-overlay__main-heading' color='prominent' weight='bold'>\n                <Localize i18n_default_text='This market is closed' />\n            </Text>\n            <MarketCountdownTimer\n                is_main_page\n                setIsTimerLoading={setIsTimerLoading}\n                onMarketOpen={onMarketOpen}\n                symbol={symbol}\n            />\n            {message && (\n                <Text align='center' as='p' className='market-is-closed-overlay__main-message' size='xs'>\n                    {message}\n                </Text>\n            )}\n            {(!is_eu || (is_eu && is_synthetics_trading_market_available)) && (\n                <Button className='market-is-closed-overlay__button' onClick={onClick} text={btn_lbl} primary />\n            )}\n        </div>\n    );\n};\n\nexport default MarketIsClosedOverlay;\n","import { toJS } from 'mobx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst styles = {\n    container: {\n        fontSize: '10px',\n        lineHeight: '15px',\n        position: 'absolute',\n        zIndex: 1,\n        background: 'rgba(0, 0, 0, 0.8)',\n        color: '#ccc',\n        padding: '10px',\n        marginTop: '-10px',\n        display: 'none',\n        overflowY: 'auto',\n        height: '100%',\n        width: '100%',\n    },\n    prop_name: {\n        color: 'yellowgreen',\n    },\n    tabs: { display: 'flex', textAlign: 'center', marginBottom: '10px' },\n    tab: {\n        fontSize: '18px',\n        border: '1px solid grey',\n        width: '100%',\n        padding: '10px',\n    },\n};\n\nconst Test = observer(() => {\n    const stores = useStore();\n    const trade_store = useTraderStore();\n    const test_stores = {\n        trade: Object.entries(trade_store),\n        client: Object.entries(stores.client),\n        ui: Object.entries(stores.ui),\n        portfolio: Object.entries(stores.portfolio),\n    };\n\n    const [is_visible, setIsVisible] = React.useState(false);\n    const [store, setStore] = React.useState('trade');\n\n    React.useEffect(() => {\n        document.addEventListener('keyup', stateVisibility, false);\n        return () => {\n            document.removeEventListener('keyup', stateVisibility);\n        };\n    });\n\n    const stateVisibility = e => {\n        // Ctrl + s\n        if (e.ctrlKey && e.keyCode === 83) setIsVisible(!is_visible);\n    };\n\n    const renderStoreContent = ([k, v]) => {\n        return (\n            k !== 'root_store' &&\n            typeof v !== 'function' && (\n                <div key={k}>\n                    <span style={styles.prop_name}>{k}:</span>{' '}\n                    {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}\n                </div>\n            )\n        );\n    };\n\n    const { container, tab, tabs } = styles;\n\n    return (\n        <code id='state_info' style={{ ...container, display: is_visible ? 'block' : 'none' }}>\n            <div style={tabs}>\n                {Object.keys(test_stores).map(storage => (\n                    <p\n                        key={storage}\n                        onClick={() => setStore(storage)}\n                        style={{ ...tab, fontWeight: storage === store && 'bold' }}\n                    >\n                        {storage}\n                    </p>\n                ))}\n            </div>\n            {test_stores[store].sort().map(renderStoreContent)}\n        </code>\n    );\n});\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default Test;\n","export const symbolChange = onSymbolChange =>\n    onSymbolChange &&\n    (symbol => {\n        onSymbolChange({\n            target: {\n                name: 'symbol',\n                value: symbol,\n            },\n        });\n    });\n","import React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport Digits from 'Modules/Contract/Components/Digits';\nimport AccumulatorsStats from 'Modules/Contract/Components/AccumulatorsStats';\nimport BottomWidgets from '../../SmartChart/Components/bottom-widgets.jsx';\nimport TopWidgets from '../../SmartChart/Components/top-widgets.jsx';\nimport { symbolChange } from '../../SmartChart/Helpers/symbol';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const DigitsWidget = observer(({ digits, tick }) => {\n    const { contract_trade } = useStore();\n    const {\n        onChange: onDigitChange,\n        symbol: underlying,\n        contract_type: trade_type,\n        last_digit: selected_digit,\n    } = useTraderStore();\n    const { last_contract } = contract_trade;\n    const { contract_info = {}, digits_info = {}, display_status, is_digit_contract, is_ended } = last_contract;\n    return (\n        <Digits\n            contract_info={contract_info}\n            digits_array={digits}\n            digits_info={digits_info}\n            display_status={display_status}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            onDigitChange={onDigitChange}\n            is_trade_page\n            tick={tick}\n            trade_type={trade_type}\n            selected_digit={selected_digit}\n            underlying={underlying}\n        />\n    );\n});\n\n// Chart widgets passed into SmartCharts\nexport const ChartTopWidgets = observer(({ charts_ref, open_market, open }) => {\n    const { client, ui } = useStore();\n    const { is_digits_widget_active, onChange: onSymbolChange } = useTraderStore();\n    const { is_beta_chart } = client;\n    const { is_dark_mode_on } = ui;\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n    let yAxiswidth;\n    if (charts_ref && charts_ref.chart) {\n        yAxiswidth = charts_ref.chart.yAxiswidth;\n    }\n    return (\n        <TopWidgets\n            open_market={open_market}\n            open={open}\n            is_mobile={isMobile()}\n            is_digits_widget_active={is_digits_widget_active}\n            onSymbolChange={symbolChange(onSymbolChange)}\n            theme={theme}\n            y_axis_width={yAxiswidth}\n            is_beta_chart={is_beta_chart}\n        />\n    );\n});\n\nexport const ChartBottomWidgets = ({ digits, tick, show_accumulators_stats }) => (\n    <BottomWidgets\n        Widget={show_accumulators_stats ? <AccumulatorsStats /> : <DigitsWidget digits={digits} tick={tick} />}\n    />\n);\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { isMobile } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores.js';\n\ntype TFormLayout = {\n    is_market_closed: ReturnType<typeof useTraderStore>['is_market_closed'];\n    is_trade_enabled: boolean;\n};\n\nconst Screen = Loadable({\n    loader: () =>\n        isMobile()\n            ? import(/* webpackChunkName: \"screen-small\" */ './screen-small')\n            : import(/* webpackChunkName: \"screen-large\" */ './screen-large'),\n    loading: () => null,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst FormLayout = observer(({ is_market_closed, is_trade_enabled }: TFormLayout) => {\n    const { common } = useStore();\n    const { current_language } = common;\n    return (\n        <React.Fragment key={current_language}>\n            <Screen is_trade_enabled={is_trade_enabled} is_market_closed={isMobile() ? undefined : is_market_closed} />\n        </React.Fragment>\n    );\n});\n\nexport default React.memo(FormLayout);\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { formatMoney, getCurrencyDisplayCode, isMobile } from '@deriv/shared';\nimport { FastMarker } from 'Modules/SmartChart';\nimport { FastMarkerBeta } from 'Modules/SmartChartBeta';\nimport classNames from 'classnames';\nimport { TRef } from './accumulators-profit-loss-tooltip';\nimport { ProposalOpenContract } from '@deriv/api-types';\n\ntype TProposalOpenContractProfit = Required<Pick<ProposalOpenContract, 'profit'>>;\n\ntype TAccumulatorsProfitLossText = Pick<ProposalOpenContract, 'current_spot' | 'current_spot_time' | 'currency'> &\n    TProposalOpenContractProfit & {\n        className?: string;\n        is_beta_chart?: boolean;\n    };\n\nconst ACTIONS = {\n    INC: 'increment',\n    DEC: 'decrement',\n    ADD10: 'add10',\n} as const;\n\nconst AccumulatorsProfitLossText = ({\n    current_spot,\n    current_spot_time,\n    currency,\n    className = 'sc-accumulators-profit-loss-text',\n    profit,\n    is_beta_chart,\n}: TAccumulatorsProfitLossText) => {\n    const [is_fading_in, setIsFadingIn] = React.useState(false);\n    const [is_sliding, setIsSliding] = React.useState(false);\n    const formatted_profit = formatMoney(currency ?? '', profit, true, 0, 0);\n    const prev_profit = React.useRef(formatted_profit);\n    const prev_profit_tenth = +prev_profit.current?.split('.')[1][0];\n    const [current_profit_tenth, setCurrentProfitTenth] = React.useState(prev_profit_tenth);\n    const profit_tenth_ref = React.useRef(0);\n    const interval_id_ref = React.useRef<ReturnType<typeof setInterval>>();\n    const fading_in_timeout_id = React.useRef<ReturnType<typeof setTimeout>>();\n    const sliding_timeout_id = React.useRef<ReturnType<typeof setTimeout>>();\n    const profit_portions_array = formatted_profit.split('.');\n    const profit_whole_number = profit_portions_array[0];\n    const profit_tenth = +profit_portions_array[1][0];\n    const profit_hundredths = +profit_portions_array[1].slice(1);\n    const won = profit >= 0;\n    const sign = profit > 0 ? '+' : '';\n\n    const runThroughTenthDigit = (\n        action: typeof ACTIONS[keyof typeof ACTIONS],\n        interval_ms: number,\n        start: number,\n        end: number\n    ) => {\n        clearInterval(interval_id_ref.current);\n        const interval_id = setInterval(() => {\n            if (action === ACTIONS.INC && profit_tenth_ref.current < end) {\n                profit_tenth_ref.current = (profit_tenth_ref.current + 1) % 10;\n            } else if (action === ACTIONS.DEC && profit_tenth_ref.current > end) {\n                profit_tenth_ref.current = Math.abs(profit_tenth_ref.current - 1) % 10;\n            } else if (action === ACTIONS.ADD10 && profit_tenth_ref.current < start + 10) {\n                profit_tenth_ref.current += 1;\n            } else if (\n                action === ACTIONS.ADD10 ? profit_tenth_ref.current === start + 10 : profit_tenth_ref.current === end\n            ) {\n                clearInterval(interval_id);\n            }\n            setCurrentProfitTenth(profit_tenth_ref.current % 10);\n        }, interval_ms);\n        interval_id_ref.current = interval_id;\n    };\n\n    React.useEffect(() => {\n        if (profit) {\n            setIsFadingIn(true);\n            setIsSliding(true);\n            fading_in_timeout_id.current = setTimeout(() => {\n                setIsFadingIn(false);\n            }, 600);\n            sliding_timeout_id.current = setTimeout(() => {\n                setIsSliding(false);\n            }, 300);\n        }\n        if (profit !== 0) {\n            const updateTenth = (start: number, end: number) => {\n                const delta = Math.abs(end - start);\n                profit_tenth_ref.current = start;\n                if (start < end) {\n                    runThroughTenthDigit(ACTIONS.INC, 300 / delta, start, end);\n                } else if (start > end) {\n                    runThroughTenthDigit(ACTIONS.DEC, 300 / delta, start, end);\n                } else {\n                    runThroughTenthDigit(ACTIONS.ADD10, 30, start, end);\n                }\n            };\n            updateTenth(prev_profit_tenth, profit_tenth);\n        }\n        return () => {\n            clearTimeout(fading_in_timeout_id.current);\n            clearTimeout(sliding_timeout_id.current);\n            clearInterval(interval_id_ref.current);\n        };\n    }, [profit, prev_profit_tenth, profit_tenth]);\n\n    const onRef = (ref: TRef | null): void => {\n        if (ref) {\n            if (!current_spot) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            if (current_spot && current_spot_time) {\n                ref.setPosition({\n                    epoch: +current_spot_time,\n                    price: +current_spot,\n                });\n            }\n        }\n    };\n\n    const FastMarkerComponent = is_beta_chart ? FastMarkerBeta : FastMarker;\n\n    return (\n        <FastMarkerComponent\n            markerRef={onRef}\n            className={classNames(className, won ? 'won' : 'lost')}\n            overlap_y_axis={false}\n        >\n            <Text\n                weight='bold'\n                size={isMobile() ? 's' : 'sm'}\n                color={won ? 'profit-success' : 'loss-danger'}\n                className={classNames(`${className}__profit`, {\n                    [`${className}__profit--fading-in`]: is_fading_in,\n                })}\n                data-testid='dt_accumulator_profit_text'\n            >\n                {`${sign}${profit_whole_number}.`}\n                <div className={is_sliding ? `${className}__sliding-tenth` : ''}>{current_profit_tenth}</div>\n                {`${profit_hundredths}`}\n            </Text>\n            <Text size={isMobile() ? 'xxxs' : 'xxs'} as='div' className={`${className}__currency`}>\n                {getCurrencyDisplayCode(currency)}\n            </Text>\n        </FastMarkerComponent>\n    );\n};\n\nexport default React.memo(AccumulatorsProfitLossText);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { Money, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { FastMarker } from 'Modules/SmartChart';\nimport { FastMarkerBeta } from 'Modules/SmartChartBeta';\nimport AccumulatorsProfitLossText from './accumulators-profit-loss-text';\nimport { ProposalOpenContract } from '@deriv/api-types';\nimport { isMobile } from '@deriv/shared';\n\ntype TPickProposalOpenContract = Pick<\n    ProposalOpenContract,\n    'current_spot' | 'current_spot_time' | 'currency' | 'exit_tick' | 'exit_tick_time' | 'high_barrier' | 'is_sold'\n>;\n\ntype TAccumulatorsProfitLossText = React.ComponentProps<typeof AccumulatorsProfitLossText>;\n\ntype TAccumulatorsProfitLossTooltip = {\n    alignment?: string;\n    should_show_profit_text?: boolean;\n    is_beta_chart?: boolean;\n} & TPickProposalOpenContract &\n    TAccumulatorsProfitLossText;\n\nexport type TRef = {\n    setPosition: (position: { epoch: number | null; price: number | null }) => void;\n};\n\nconst AccumulatorsProfitLossTooltip = ({\n    alignment = 'right',\n    className = 'sc-accumulators-profit-loss-tooltip',\n    current_spot,\n    current_spot_time,\n    currency,\n    exit_tick,\n    exit_tick_time,\n    high_barrier,\n    is_sold,\n    profit,\n    should_show_profit_text,\n    is_beta_chart,\n}: TAccumulatorsProfitLossTooltip) => {\n    const [is_tooltip_open, setIsTooltipOpen] = React.useState(false);\n    const won = profit >= 0;\n    const tooltip_timeout = React.useRef<ReturnType<typeof setTimeout>>();\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(tooltip_timeout.current);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (is_sold) {\n            setIsTooltipOpen(true);\n            tooltip_timeout.current = onCloseDelayed(3000);\n        }\n    }, [is_sold]);\n\n    const onCloseDelayed = (duration: number) =>\n        setTimeout(() => {\n            setIsTooltipOpen(false);\n        }, duration);\n\n    const onHoverOrTapHandler = () => {\n        clearTimeout(tooltip_timeout.current);\n        tooltip_timeout.current = onCloseDelayed(1500);\n    };\n\n    const opposite_arrow_position = React.useMemo(() => {\n        const horizontal = ['left', 'right'];\n        return horizontal.includes(alignment)\n            ? horizontal.find(el => el !== alignment)\n            : ['top', 'bottom'].find(el => el !== alignment);\n    }, [alignment]);\n\n    const onRef = (ref: TRef | null): void => {\n        if (ref) {\n            if (!exit_tick) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            if (exit_tick_time && exit_tick) {\n                ref.setPosition({\n                    epoch: +exit_tick_time,\n                    price: +exit_tick,\n                });\n            }\n        }\n    };\n\n    if (typeof profit !== 'number') return null;\n    if (!is_sold && current_spot_time && high_barrier && should_show_profit_text)\n        return (\n            <AccumulatorsProfitLossText\n                currency={currency}\n                current_spot={current_spot}\n                current_spot_time={current_spot_time}\n                profit={profit}\n                is_beta_chart={is_beta_chart}\n            />\n        );\n\n    const FastMarkerComponent = is_beta_chart ? FastMarkerBeta : FastMarker;\n    return is_sold && exit_tick_time ? (\n        <FastMarkerComponent markerRef={onRef} className={classNames(className, won ? 'won' : 'lost')}>\n            <span\n                className={`${className}__spot-circle`}\n                onMouseEnter={() => setIsTooltipOpen(true)}\n                onMouseLeave={onHoverOrTapHandler}\n                onTouchStart={() => setIsTooltipOpen(true)}\n                onTouchEnd={onHoverOrTapHandler}\n                data-testid='dt_accumulator_tooltip_spot'\n            />\n            <CSSTransition\n                in={is_tooltip_open}\n                timeout={{\n                    exit: 500,\n                }}\n                unmountOnExit\n                classNames={`${className}__content`}\n            >\n                <div className={classNames(`${className}__content`, `arrow-${opposite_arrow_position}`)}>\n                    <Text size={isMobile() ? 'xxxxs' : 'xxs'} className={`${className}__text`}>\n                        {localize('Total profit/loss:')}\n                    </Text>\n                    <Text size={isMobile() ? 'xxxs' : 'xs'} className={`${className}__text`} weight='bold'>\n                        <Money amount={profit} currency={currency} has_sign show_currency />\n                    </Text>\n                </div>\n            </CSSTransition>\n        </FastMarkerComponent>\n    ) : null;\n};\n\nexport default React.memo(AccumulatorsProfitLossTooltip);\n","import { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers/positions-helper';\nimport React from 'react';\nimport AccumulatorsProfitLossTooltip from './accumulators-profit-loss-tooltip';\nimport { ProposalOpenContract } from '@deriv/api-types';\nimport ChartMarkerBeta from 'Modules/SmartChartBeta/Components/Markers/marker.jsx';\nimport ChartMarker from './marker.jsx';\n\ntype TPositions = {\n    contract_info: Omit<\n        React.ComponentProps<typeof AccumulatorsProfitLossTooltip>,\n        'className' | 'alignment' | 'should_show_profit_text'\n    > &\n        Required<Pick<ProposalOpenContract, 'underlying' | 'shortcode' | 'contract_id' | 'contract_type'>>;\n};\n\ntype TAccumulatorsChartElements = {\n    all_positions: TPositions[];\n    current_spot?: number | null;\n    current_spot_time: number;\n    has_crossed_accu_barriers: boolean;\n    should_show_profit_text: React.ComponentProps<typeof AccumulatorsProfitLossTooltip>['should_show_profit_text'];\n    symbol: string;\n    is_beta_chart?: boolean;\n};\n\nconst AccumulatorsChartElements = ({\n    all_positions,\n    current_spot,\n    current_spot_time,\n    has_crossed_accu_barriers,\n    should_show_profit_text,\n    symbol,\n    is_beta_chart,\n}: TAccumulatorsChartElements) => {\n    const accumulators_positions = all_positions.filter(\n        ({ contract_info }) =>\n            contract_info && symbol === contract_info.underlying && filterByContractType(contract_info, 'accumulator')\n    );\n\n    const ChartMarkerComponent = is_beta_chart ? ChartMarkerBeta : ChartMarker;\n\n    return (\n        <React.Fragment>\n            {!!accumulators_positions.length &&\n                accumulators_positions.map(({ contract_info }) => (\n                    <AccumulatorsProfitLossTooltip\n                        key={contract_info.contract_id}\n                        {...contract_info}\n                        should_show_profit_text={should_show_profit_text}\n                        is_beta_chart={is_beta_chart}\n                    />\n                ))}\n            {has_crossed_accu_barriers && !!current_spot_time && (\n                <ChartMarkerComponent\n                    marker_config={{\n                        ContentComponent: 'div',\n                        x: current_spot_time,\n                        y: current_spot,\n                    }}\n                    marker_content_props={{ className: 'sc-current-spot-emphasizer' }}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(AccumulatorsChartElements);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { ChartMode, DrawTools, Share, StudyLegend, Views, ToolbarWidget } from 'Modules/SmartChart';\n\nconst ToolbarWidgets = ({ position, updateChartType, updateGranularity }) => {\n    return (\n        <ToolbarWidget position={position || isMobile() ? 'bottom' : null}>\n            <ChartMode portalNodeId='modal_root' onChartType={updateChartType} onGranularity={updateGranularity} />\n            {isDesktop() && <StudyLegend portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <Views portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <DrawTools portalNodeId='modal_root' />}\n            {isDesktop() && <Share portalNodeId='modal_root' />}\n        </ToolbarWidget>\n    );\n};\n\nToolbarWidgets.propTypes = {\n    position: PropTypes.string,\n    updateChartType: PropTypes.func,\n    updateGranularity: PropTypes.func,\n};\n\nexport default React.memo(ToolbarWidgets);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport {\n    ChartModeBeta,\n    DrawToolsBeta,\n    ShareBeta,\n    StudyLegendBeta,\n    ViewsBeta,\n    ToolbarWidgetBeta,\n} from 'Modules/SmartChartBeta';\n\nconst ToolbarWidgetsBeta = ({ position, updateChartType, updateGranularity }) => {\n    return (\n        <ToolbarWidgetBeta position={position || isMobile() ? 'bottom' : null}>\n            <ChartModeBeta portalNodeId='modal_root' onChartType={updateChartType} onGranularity={updateGranularity} />\n            {isDesktop() && <StudyLegendBeta portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <ViewsBeta portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <DrawToolsBeta portalNodeId='modal_root' />}\n            {isDesktop() && <ShareBeta portalNodeId='modal_root' />}\n        </ToolbarWidgetBeta>\n    );\n};\n\nToolbarWidgetsBeta.propTypes = {\n    position: PropTypes.string,\n    updateChartType: PropTypes.func,\n    updateGranularity: PropTypes.func,\n};\n\nexport default React.memo(ToolbarWidgetsBeta);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, Div100vhContainer, MobileWrapper, SwipeableWrapper } from '@deriv/components';\nimport { getDecimalPlaces, isDesktop, isMobile } from '@deriv/shared';\nimport ChartLoader from 'App/Components/Elements/chart-loader';\nimport PositionsDrawer from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay';\nimport Test from './test.jsx';\nimport { ChartBottomWidgets, ChartTopWidgets, DigitsWidget } from './chart-widgets.jsx';\nimport FormLayout from '../Components/Form/form-layout';\nimport AllMarkers from '../../SmartChart/Components/all-markers.jsx';\nimport AccumulatorsChartElements from '../../SmartChart/Components/Markers/accumulators-chart-elements';\nimport ToolbarWidgets from '../../SmartChart/Components/toolbar-widgets.jsx';\nimport ToolbarWidgetsBeta from '../../SmartChartBeta/Components/toolbar-widgets.jsx';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst BottomWidgetsMobile = ({ tick, digits, setTick, setDigits }) => {\n    React.useEffect(() => {\n        setTick(tick);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tick]);\n\n    React.useEffect(() => {\n        setDigits(digits);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [digits]);\n\n    // render nothing for bottom widgets on chart in mobile\n    return null;\n};\n\nconst Trade = observer(() => {\n    const { client, common, ui } = useStore();\n    const {\n        form_components,\n        getFirstOpenMarket,\n        has_barrier,\n        is_accumulator,\n        is_chart_loading,\n        is_market_closed,\n        is_synthetics_available,\n        is_synthetics_trading_market_available,\n        is_trade_enabled,\n        is_turbos,\n        is_vanilla,\n        onChange,\n        onMount,\n        onUnmount,\n        prepareTradeStore,\n        setContractTypes,\n        setIsDigitsWidgetActive,\n        setMobileDigitView,\n        should_show_active_symbols_loading,\n        show_digits_stats,\n        symbol,\n    } = useTraderStore();\n    const {\n        notification_messages_ui: NotificationMessages,\n        has_only_forward_starting_contracts: is_market_unavailable_visible,\n        should_show_multipliers_onboarding,\n        is_dark_mode_on: is_dark_theme,\n    } = ui;\n    const { is_eu } = client;\n    const { network_status } = common;\n\n    const [digits, setDigits] = React.useState([]);\n    const [tick, setTick] = React.useState({});\n    const [try_synthetic_indices, setTrySyntheticIndices] = React.useState(false);\n    const [try_open_markets, setTryOpenMarkets] = React.useState(false);\n    const [category, setCategory] = React.useState(null);\n    const [subcategory, setSubcategory] = React.useState(null);\n    const [swipe_index, setSwipeIndex] = React.useState(0);\n    const charts_ref = React.useRef();\n\n    const open_market = React.useMemo(() => {\n        if (try_synthetic_indices) {\n            return { category: 'synthetics' };\n        } else if (try_open_markets && category) {\n            return { category, subcategory };\n        }\n        return null;\n    }, [try_synthetic_indices, try_open_markets, category, subcategory]);\n\n    React.useEffect(() => {\n        onMount();\n        if (!is_synthetics_available) {\n            const setMarket = async () => {\n                const markets_to_search = ['forex', 'indices', 'commodities']; // none-synthetic\n                const { category: market_cat, subcategory: market_subcat } =\n                    (await getFirstOpenMarket(markets_to_search)) ?? {};\n                if (market_cat) {\n                    setCategory(market_cat);\n                    setSubcategory(market_subcat);\n                }\n            };\n\n            setMarket();\n        }\n        return () => onUnmount();\n    }, [onMount, onUnmount, getFirstOpenMarket, is_synthetics_available]);\n\n    React.useEffect(() => {\n        if (isMobile()) {\n            setDigits([]);\n        }\n        setTrySyntheticIndices(false);\n        setTryOpenMarkets(false);\n    }, [symbol, setDigits, setTrySyntheticIndices, is_synthetics_available]);\n\n    React.useEffect(() => {\n        const selectMultipliers = async () => {\n            await setContractTypes();\n\n            onChange({ target: { name: 'contract_type', value: 'multiplier' } });\n        };\n        if (should_show_multipliers_onboarding && !is_chart_loading && (is_synthetics_available || !is_market_closed)) {\n            selectMultipliers();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [should_show_multipliers_onboarding, is_chart_loading]);\n\n    const bottomWidgets = React.useCallback(({ digits: d, tick: t }) => {\n        return <BottomWidgetsMobile digits={d} tick={t} setTick={setTick} setDigits={setDigits} />;\n    }, []);\n\n    const onChangeSwipeableIndex = index => {\n        setMobileDigitView(index === 0);\n        setIsDigitsWidgetActive(index === 0);\n        setSwipeIndex(index);\n    };\n\n    const onTryOtherMarkets = async () => {\n        if (!is_synthetics_available) {\n            setTryOpenMarkets(true);\n            setTimeout(() => setTryOpenMarkets(false));\n        } else {\n            setTrySyntheticIndices(true);\n            setTimeout(() => setTrySyntheticIndices(false));\n        }\n    };\n\n    const topWidgets = React.useCallback(\n        ({ ...params }) => (\n            <ChartTopWidgets\n                open_market={open_market}\n                open={try_synthetic_indices || try_open_markets}\n                charts_ref={charts_ref}\n                {...params}\n            />\n        ),\n        [open_market, try_synthetic_indices, try_open_markets]\n    );\n\n    const form_wrapper_class = isMobile() ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n    const chart_height_offset = React.useMemo(() => {\n        if (is_accumulator) return '295px';\n        if (is_turbos) return '300px';\n        return '259px';\n    }, [is_turbos, is_accumulator]);\n\n    return (\n        <div\n            id='trade_container'\n            className={classNames('trade-container', {\n                [`trade-container--${is_accumulator ? 'accumulators' : 'turbos'}`]: is_accumulator || is_turbos,\n            })}\n        >\n            <DesktopWrapper>\n                <PositionsDrawer />\n            </DesktopWrapper>\n            {/* Div100vhContainer is workaround for browsers on devices\n                    with toolbars covering screen height,\n                    using css vh is not returning correct screen height */}\n            <Div100vhContainer\n                id='chart_container'\n                className='chart-container'\n                is_disabled={isDesktop()}\n                height_offset={chart_height_offset}\n            >\n                <NotificationMessages />\n                <React.Suspense\n                    fallback={<ChartLoader is_dark={is_dark_theme} is_visible={!symbol || is_chart_loading} />}\n                >\n                    <DesktopWrapper>\n                        <div className={classNames('chart-container__wrapper', { 'vanilla-trade-chart': is_vanilla })}>\n                            <ChartLoader is_visible={is_chart_loading || should_show_active_symbols_loading} />\n                            <ChartTrade\n                                topWidgets={topWidgets}\n                                charts_ref={charts_ref}\n                                is_accumulator={is_accumulator}\n                            />\n                        </div>\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <ChartLoader is_visible={is_chart_loading || should_show_active_symbols_loading} />\n                        <SwipeableWrapper\n                            onChange={onChangeSwipeableIndex}\n                            is_disabled={\n                                !show_digits_stats ||\n                                !is_trade_enabled ||\n                                form_components.length === 0 ||\n                                is_chart_loading ||\n                                should_show_active_symbols_loading\n                            }\n                            is_swipe_disabled={swipe_index === 1}\n                            className={classNames({ 'vanilla-trade-chart': is_vanilla })}\n                        >\n                            {show_digits_stats && <DigitsWidget digits={digits} tick={tick} />}\n                            <ChartTrade\n                                topWidgets={topWidgets}\n                                charts_ref={charts_ref}\n                                bottomWidgets={show_digits_stats ? bottomWidgets : undefined}\n                                is_accumulator={is_accumulator}\n                                has_barrier={has_barrier}\n                            />\n                        </SwipeableWrapper>\n                    </MobileWrapper>\n                </React.Suspense>\n\n                {/* Remove Test component for debugging below for production release */}\n                <Test />\n            </Div100vhContainer>\n            <div className={form_wrapper_class}>\n                {is_market_closed && !is_market_unavailable_visible && (\n                    <MarketIsClosedOverlay\n                        is_eu={is_eu}\n                        is_synthetics_trading_market_available={is_synthetics_trading_market_available}\n                        {...(is_eu && category)}\n                        onClick={onTryOtherMarkets}\n                        onMarketOpen={prepareTradeStore}\n                        symbol={symbol}\n                    />\n                )}\n                <FormLayout\n                    is_market_closed={is_market_closed}\n                    is_trade_enabled={\n                        is_trade_enabled && form_components.length > 0 && network_status.class === 'online'\n                    }\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default Trade;\n\n// CHART (ChartTrade)--------------------------------------------------------\n\n/* eslint-disable */\nimport SmartChartSwitcher from './smart-chart-switcher.jsx';\n\nconst SmartChartWithRef = React.forwardRef((props, ref) => <SmartChartSwitcher innerRef={ref} {...props} />);\n\n// ChartMarkers --------------------------\nconst ChartMarkers = observer(config => {\n    const { ui, client, contract_trade } = useStore();\n    const { markers_array, granularity } = contract_trade;\n    const { is_dark_mode_on: is_dark_theme } = ui;\n    const { currency } = client;\n    return markers_array.map(marker => {\n        const Marker = AllMarkers[marker.type];\n        return (\n            <Marker\n                key={marker.key}\n                is_dark_theme={is_dark_theme}\n                granularity={granularity}\n                currency={currency}\n                config={config}\n                {...marker}\n            />\n        );\n    });\n});\n\nconst ChartTrade = observer(props => {\n    const { is_accumulator, has_barrier, end_epoch, topWidgets, charts_ref } = props;\n    const { client, ui, common, contract_trade, portfolio } = useStore();\n    const {\n        accumulator_barriers_data,\n        accumulator_contract_barriers_data,\n        chart_type,\n        granularity,\n        markers_array,\n        has_crossed_accu_barriers,\n        updateGranularity,\n        updateChartType,\n    } = contract_trade;\n    const { all_positions } = portfolio;\n    const { is_chart_layout_default, is_chart_countdown_visible, is_dark_mode_on, is_positions_drawer_on } = ui;\n    const { is_socket_opened, current_language } = common;\n    const { currency, is_beta_chart, should_show_eu_content } = client;\n    const {\n        chartStateChange,\n        is_trade_enabled,\n        main_barrier_flattened: main_barrier,\n        barriers_flattened: extra_barriers,\n        show_digits_stats,\n        symbol,\n        exportLayout,\n        setChartStatus,\n        chart_layout,\n        wsForget,\n        wsForgetStream,\n        wsSendRequest,\n        wsSubscribe,\n        active_symbols,\n        has_alternative_source,\n    } = useTraderStore();\n\n    const settings = {\n        assetInformation: false, // ui.is_chart_asset_info_visible,\n        countdown: is_chart_countdown_visible,\n        isHighestLowestMarkerEnabled: false, // TODO: Pending UI,\n        language: current_language.toLowerCase(),\n        position: is_chart_layout_default ? 'bottom' : 'left',\n        theme: is_dark_mode_on ? 'dark' : 'light',\n        ...(is_accumulator ? { whitespace: 190, minimumLeftBars: isMobile() ? 3 : undefined } : {}),\n        ...(has_barrier ? { whitespace: 110 } : {}),\n    };\n\n    const { current_spot, current_spot_time } = accumulator_barriers_data || {};\n\n    const bottomWidgets = React.useCallback(\n        ({ digits, tick }) => (\n            <ChartBottomWidgets digits={digits} tick={tick} show_accumulators_stats={is_accumulator} is_trade_page />\n        ),\n        [is_accumulator]\n    );\n\n    const getMarketsOrder = active_symbols => {\n        const synthetic_index = 'synthetic_index';\n\n        const has_synthetic_index = !!active_symbols.find(s => s.market === synthetic_index);\n        return active_symbols\n            .slice()\n            .sort((a, b) => (a.display_name < b.display_name ? -1 : 1))\n            .map(s => s.market)\n            .reduce(\n                (arr, market) => {\n                    if (arr.indexOf(market) === -1) arr.push(market);\n                    return arr;\n                },\n                has_synthetic_index ? [synthetic_index] : []\n            );\n    };\n\n    const barriers = main_barrier ? [main_barrier, ...extra_barriers] : extra_barriers;\n\n    // max ticks to display for mobile view for tick chart\n    const max_ticks = granularity === 0 ? 8 : 24;\n\n    if (!symbol || active_symbols.length === 0) return null;\n\n    return (\n        <SmartChartWithRef\n            ref={charts_ref}\n            barriers={barriers}\n            contracts_array={markers_array}\n            bottomWidgets={(is_accumulator || show_digits_stats) && isDesktop() ? bottomWidgets : props.bottomWidgets}\n            crosshair={isMobile() ? 0 : undefined}\n            crosshairTooltipLeftAllow={560}\n            showLastDigitStats={isDesktop() ? show_digits_stats : false}\n            chartControlsWidgets={null}\n            chartStatusListener={v => setChartStatus(!v)}\n            chartType={chart_type}\n            initialData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            chartData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            feedCall={{\n                activeSymbols: false,\n            }}\n            enabledNavigationWidget={isDesktop()}\n            enabledChartFooter={false}\n            id='trade'\n            isMobile={isMobile()}\n            maxTick={isMobile() ? max_ticks : undefined}\n            granularity={show_digits_stats || is_accumulator ? 0 : granularity}\n            requestAPI={wsSendRequest}\n            requestForget={wsForget}\n            requestForgetStream={wsForgetStream}\n            requestSubscribe={wsSubscribe}\n            settings={settings}\n            should_show_eu_content={should_show_eu_content}\n            allowTickChartTypeOnly={show_digits_stats || is_accumulator}\n            stateChangeListener={chartStateChange}\n            symbol={symbol}\n            topWidgets={is_trade_enabled ? topWidgets : null}\n            isConnectionOpened={is_socket_opened}\n            clearChart={false}\n            toolbarWidget={() => {\n                if (is_beta_chart) {\n                    return (\n                        <ToolbarWidgetsBeta updateChartType={updateChartType} updateGranularity={updateGranularity} />\n                    );\n                } else\n                    return <ToolbarWidgets updateChartType={updateChartType} updateGranularity={updateGranularity} />;\n            }}\n            importedLayout={chart_layout}\n            onExportLayout={exportLayout}\n            shouldFetchTradingTimes={!end_epoch}\n            hasAlternativeSource={has_alternative_source}\n            getMarketsOrder={getMarketsOrder}\n            should_zoom_out_on_yaxis={is_accumulator}\n            yAxisMargin={{\n                top: isMobile() ? 76 : 106,\n            }}\n            isLive={true}\n            leftMargin={isDesktop() && is_positions_drawer_on ? 328 : 80}\n            is_beta={is_beta_chart}\n        >\n            {!is_beta_chart && <ChartMarkers />}\n            {is_accumulator && (\n                <AccumulatorsChartElements\n                    all_positions={all_positions}\n                    current_spot={current_spot}\n                    current_spot_time={current_spot_time}\n                    has_crossed_accu_barriers={has_crossed_accu_barriers}\n                    should_show_profit_text={\n                        !!accumulator_contract_barriers_data.accumulators_high_barrier &&\n                        getDecimalPlaces(currency) <= 2\n                    }\n                    symbol={symbol}\n                    is_beta_chart={is_beta_chart}\n                />\n            )}\n        </SmartChartWithRef>\n    );\n});\n","import Trade from './Containers/trade.jsx';\n\nexport default Trade;\n","import React from 'react';\nimport { routes, moduleLoader } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"contract\" */ 'Modules/Contract'))\n);\n\n// Error Routes\nconst Page404 = React.lazy(() => moduleLoader(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404')));\n\n// Order matters\nconst initRoutesConfig = () => {\n    return [\n        {\n            path: routes.contract,\n            component: ContractDetails,\n            // Don't use `Localize` component since native html tag like `option` cannot render them\n            getTitle: () => localize('Contract Details'),\n            is_authenticated: true,\n        },\n        { path: routes.trade, component: Trade, getTitle: () => localize('Trader'), exact: true },\n    ];\n};\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default = { component: Page404, getTitle: () => localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { findRouteByPath, normalizePath } from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class = '', to, children, ...props }) => {\n    const path = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return to ? (\n        <NavLink\n            data-testid='dt_binary_link'\n            to={path}\n            activeClassName={active_class || 'active'}\n            exact={route.exact}\n            {...props}\n        >\n            {children}\n        </NavLink>\n    ) : (\n        <a data-testid='dt_binary_link' {...props}>\n            {children}\n        </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n    to: PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n    alternateLinkTagChange,\n    canonicalLinkTagChange,\n    redirectToLogin,\n    removeBranchName,\n    routes,\n    isEmptyObject,\n    default_title,\n} from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport Page404 from 'Modules/Page404';\n\nconst RouteWithSubRoutes = route => {\n    const validateRoute = pathname => {\n        if (pathname === '') return true;\n        if (route.path?.includes(':')) {\n            const static_pathname = pathname.substring(0, pathname.lastIndexOf('/') + 1);\n            return static_pathname === route.path.substring(0, route.path.indexOf(':'));\n        }\n        return route.path === pathname || !!(route.routes && route.routes.find(r => pathname === r.path));\n    };\n\n    const renderFactory = props => {\n        let result = null;\n\n        const pathname = removeBranchName(location.pathname).replace(/\\/$/, '');\n        const is_valid_route = validateRoute(pathname);\n\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (is_valid_route && route.is_authenticated && !route.is_logging_in && !route.is_logged_in) {\n            redirectToLogin(route.is_logged_in, getLanguage());\n        } else {\n            const default_subroute = route.routes ? route.routes.find(r => r.default) : {};\n            const has_default_subroute = !isEmptyObject(default_subroute);\n\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute.path} />}\n                    {is_valid_route ? <route.component {...props} routes={route.routes} /> : <Page404 />}\n                </React.Fragment>\n            );\n        }\n\n        // eslint-disable-next-line no-nested-ternary\n        const title = route.getTitle?.() || '';\n        document.title = `${title} | ${default_title}`;\n\n        alternateLinkTagChange();\n        canonicalLinkTagChange();\n\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport default RouteWithSubRoutes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = props => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {getRoutesConfig().map((route, idx) => (\n                <RouteWithSubRoutes key={idx} {...route} {...props} />\n            ))}\n        </Switch>\n    </React.Suspense>\n);\n\nexport default BinaryRoutes;\n","import BinaryLink from './binary-link.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\nimport BinaryRoutes from './binary-routes.jsx';\n\nexport * from './helpers';\nexport { BinaryLink, RouteWithSubRoutes };\nexport default BinaryRoutes;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter, matchPath } from 'react-router';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport BinaryRoutes from 'App/Components/Routes';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst checkRoutingMatch = (route_list, path) => {\n    return route_list.some(route => !!matchPath(path, { path: route, exact: true }));\n};\n\nconst tradePageMountingMiddleware = ({ path_from, path_to, action, match_patterns, callback }) => {\n    if (action === 'PUSH' || action === 'POP') {\n        // We use matchPath here because on route, there will be extra\n        // parameters which matchPath takes into account.\n        const has_match = match_patterns.some(\n            pattern => checkRoutingMatch(pattern.from, path_from) && checkRoutingMatch(pattern.to, path_to)\n        );\n\n        callback(has_match);\n    }\n\n    return true;\n};\n\nconst Error = Loadable({\n    loader: () => import(/* webpackChunkName: \"error-component\" */ 'App/Components/Elements/Errors'),\n    loading: UILoader,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst Routes = observer(({ history, passthrough }) => {\n    const { client, common, ui, portfolio } = useStore();\n    const { setSkipPrePostLifecycle: setTradeMountingPolicy } = useTraderStore();\n    const { error, has_error } = common;\n    const { onUnmount: onUnmountPortfolio } = portfolio;\n    const { is_logged_in, is_logging_in } = client;\n    const { setPromptHandler } = ui;\n\n    React.useEffect(() => {\n        if (setPromptHandler) {\n            setPromptHandler(true, (route_to, action) => {\n                // clears portfolio when we navigate to mt5 dashboard\n                tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        {\n                            from: getRoutesConfig()\n                                .flatMap(route => {\n                                    if (route.routes) {\n                                        return route.routes.map(subroute => subroute.path);\n                                    }\n                                    return [route.path];\n                                })\n                                .filter(path => path && path !== routes.mt5 && path !== routes.dxtrade),\n                            to: [routes.mt5, routes.dxtrade],\n                        },\n                    ],\n                    action,\n                    callback: has_match => {\n                        if (has_match) {\n                            onUnmountPortfolio();\n                        }\n                    },\n                });\n\n                return tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        { from: [routes.contract], to: [routes.trade] },\n                        { from: [routes.trade], to: [routes.contract] },\n                    ],\n                    action,\n                    callback: setTradeMountingPolicy,\n                });\n            });\n        }\n\n        return () => {\n            setPromptHandler?.(false);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        return () => onUnmountPortfolio();\n    }, [onUnmountPortfolio]);\n\n    if (has_error) return <Error {...error} />;\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} passthrough={passthrough} />;\n});\n\nRoutes.propTypes = {\n    history: PropTypes.object,\n    passthrough: PropTypes.object,\n};\n\nexport default withRouter(Routes);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon } from '@deriv/components';\nimport { getCardLabels } from '@deriv/shared';\n\ntype TPositionsResultMobile = {\n    is_visible: boolean;\n    result: 'won' | 'lost';\n};\n\nconst PositionsResultMobile = ({ is_visible, result }: TPositionsResultMobile) => {\n    const is_contract_won = result === 'won';\n    return (\n        <React.Fragment>\n            <CSSTransition\n                in={is_visible}\n                timeout={250}\n                classNames={{\n                    enter: 'positions-modal-card__result--enter',\n                    enterDone: 'positions-modal-card__result--enter-done',\n                    exit: 'positions-modal-card__result--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-modal-card__caption-wrapper' data-testid='result_mobile'>\n                    <span\n                        className={classNames('positions-modal-card__caption', {\n                            'positions-modal-card__caption--won': is_contract_won,\n                            'positions-modal-card__caption--lost': !is_contract_won,\n                        })}\n                    >\n                        <Icon\n                            icon='IcPositionClosed'\n                            className='positions-modal-card__icon'\n                            color={is_contract_won ? 'green' : 'red'}\n                        />\n                        <span>{getCardLabels().CLOSED}</span>\n                    </span>\n                </div>\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nexport default PositionsResultMobile;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { ContractCard, CurrencyBadge, Icon, Money, ProgressSliderMobile, Text } from '@deriv/components';\nimport {\n    getContractPath,\n    getContractTypeDisplay,\n    getCardLabels,\n    getSymbolDisplayName,\n    getEndTime,\n    getTotalProfit,\n    hasContractEntered,\n    isAccumulatorContract,\n    isCryptoContract,\n    isMultiplierContract,\n    isTurbosContract,\n    isHighLow,\n    isCryptocurrency,\n    isOpen,\n    isVanillaContract,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport { getMarketInformation } from 'Utils/Helpers/market-underlying';\nimport PositionsResultMobile from './positions-result-mobile';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\ntype TPortfolioPosition = Pick<\n    TPortfolioStore['active_positions'][0],\n    'contract_info' | 'id' | 'indicative' | 'is_sell_requested' | 'is_unsupported' | 'profit_loss'\n>;\ntype TPickPortfolioStore = Pick<TPortfolioStore, 'onClickSell' | 'onClickCancel'>;\ntype TUiStore = ReturnType<typeof useStore>['ui'];\n\ntype TPositionsModalCard = TPickPortfolioStore &\n    TPortfolioPosition & {\n        className?: string;\n        contract_info: TPortfolioPosition['contract_info'];\n        contract_update: TPortfolioPosition['contract_info']['contract_update'];\n        currency: ReturnType<typeof useStore>['client']['currency'];\n        current_tick?: React.ComponentProps<typeof ProgressSliderMobile>['current_tick'];\n        is_loading?: boolean;\n        result?: React.ComponentProps<typeof PositionsResultMobile>['result'];\n        sell_price?: number;\n        status?: string;\n        togglePositions: TUiStore['togglePositionsDrawer'];\n        toggleUnsupportedContractModal: TUiStore['toggleUnsupportedContractModal'];\n        type?: string;\n    };\n\nconst PositionsModalCard = observer(\n    ({\n        className,\n        contract_info,\n        contract_update,\n        currency,\n        current_tick,\n        id,\n        indicative,\n        is_loading,\n        is_sell_requested,\n        is_unsupported,\n        onClickSell,\n        profit_loss,\n        onClickCancel,\n        result,\n        sell_price,\n        status,\n        togglePositions,\n        toggleUnsupportedContractModal,\n        type,\n    }: TPositionsModalCard) => {\n        const { ui, common, contract_trade } = useStore();\n        const { active_symbols } = useTraderStore();\n        const { server_time } = common;\n        const { getContractById } = contract_trade;\n        const {\n            addToast,\n            current_focus,\n            is_mobile,\n            removeToast,\n            setCurrentFocus,\n            should_show_cancellation_warning,\n            toggleCancellationWarning,\n        } = ui;\n        const loader_el = (\n            <div className='positions-modal-card__content-loader'>\n                <PositionsCardLoader speed={2} />\n            </div>\n        );\n        const is_multiplier = isMultiplierContract(contract_info.contract_type);\n        const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n        const is_turbos = isTurbosContract(contract_info.contract_type);\n        const is_vanilla = isVanillaContract(contract_info.contract_type);\n        const is_crypto = isCryptoContract(contract_info.underlying);\n        const has_progress_slider = !is_multiplier || (is_crypto && is_multiplier);\n        const has_ended = !!getEndTime(contract_info);\n        const fallback_result = profit_loss >= 0 ? 'won' : 'lost';\n        const total_profit = getTotalProfit(contract_info);\n\n        const should_show_sell = hasContractEntered(contract_info) && isOpen(contract_info);\n        const display_name = getSymbolDisplayName(\n            active_symbols,\n            getMarketInformation(contract_info.shortcode || '').underlying\n        );\n\n        const contract_options_el = (\n            <React.Fragment>\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-header')}>\n                    <div className='positions-modal-card__underlying-name'>\n                        <Icon\n                            icon={contract_info.underlying ? `IcUnderlying${contract_info.underlying}` : 'IcUnknown'}\n                            size={34}\n                        />\n                        <Text size='xxs' className='positions-modal-card__symbol' weight='bold'>\n                            {contract_info.display_name}\n                        </Text>\n                    </div>\n                    <div className='positions-modal-card__type'>\n                        <ContractCard.ContractTypeCell\n                            getContractTypeDisplay={getContractTypeDisplay}\n                            is_high_low={isHighLow({ shortcode: contract_info.shortcode })}\n                            multiplier={contract_info.multiplier}\n                            type={type}\n                        />\n                    </div>\n                    <CSSTransition\n                        in={should_show_sell}\n                        timeout={250}\n                        classNames={{\n                            enter: 'positions-modal-card__sell-button--enter',\n                            enterDone: 'positions-modal-card__sell-button--enter-done',\n                            exit: 'positions-modal-card__sell-button--exit',\n                        }}\n                        unmountOnExit\n                    >\n                        <div className='positions-modal-card__sell-button'>\n                            <ContractCard.Sell\n                                contract_info={contract_info}\n                                is_sell_requested={is_sell_requested}\n                                getCardLabels={getCardLabels}\n                                onClickSell={onClickSell}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n                <CurrencyBadge currency={contract_info?.currency ?? ''} />\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-body')}>\n                    <div className={classNames('positions-modal-card__grid-profit-payout')}>\n                        <div\n                            className={classNames(\n                                'positions-modal-card__profit-loss',\n                                'positions-modal-card__profit-loss-label'\n                            )}\n                        >\n                            {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                        </div>\n                        <div\n                            className={classNames(\n                                'positions-modal-card__indicative',\n                                'positions-modal-card__indicative-label'\n                            )}\n                        >\n                            {!result ? localize('Indicative price:') : localize('Payout:')}\n                        </div>\n                        <div\n                            className={classNames('positions-modal-card__profit-loss', {\n                                'positions-modal-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                                'positions-modal-card__profit-loss--negative': profit_loss < 0,\n                                'positions-modal-card__profit-loss--positive': profit_loss > 0,\n                            })}\n                        >\n                            <Money amount={Math.abs(profit_loss)} currency={currency} />\n                            <div\n                                className={classNames('positions-modal-card__indicative--movement', {\n                                    'positions-modal-card__indicative--movement-complete': !!result,\n                                })}\n                            >\n                                {status === 'profit' && <Icon icon='IcProfit' />}\n                                {status === 'loss' && <Icon icon='IcLoss' />}\n                            </div>\n                        </div>\n                        <div className='positions-modal-card__indicative'>\n                            <Money amount={sell_price || indicative} currency={currency} />\n                            <div\n                                className={classNames('positions-modal-card__indicative--movement', {\n                                    'positions-modal-card__indicative--movement-complete': !!result,\n                                })}\n                            >\n                                {status === 'profit' && <Icon icon='IcProfit' />}\n                                {status === 'loss' && <Icon icon='IcLoss' />}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classNames('positions-modal-card__grid-price-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Purchase price:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.buy_price} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Potential payout:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                {contract_info.payout ? (\n                                    <Money amount={contract_info.payout} currency={currency} />\n                                ) : (\n                                    <strong>-i</strong>\n                                )}\n                            </Text>\n                        </div>\n                    </div>\n\n                    {result || !!contract_info.is_sold ? (\n                        <PositionsResultMobile\n                            is_visible={!!contract_info.is_sold}\n                            result={result || fallback_result}\n                        />\n                    ) : (\n                        <ProgressSliderMobile\n                            className='positions-modal-card__progress'\n                            current_tick={current_tick}\n                            getCardLabels={getCardLabels}\n                            is_loading={is_loading}\n                            start_time={contract_info.date_start}\n                            expiry_time={contract_info.date_expiry}\n                            server_time={server_time as moment.Moment}\n                            ticks_count={contract_info.tick_count}\n                        />\n                    )}\n                </div>\n            </React.Fragment>\n        );\n\n        const contract_vanilla_el = (\n            <React.Fragment>\n                <NavLink\n                    className={classNames('dc-contract-card', {\n                        'dc-contract-card--green': profit_loss > 0 && !result,\n                        'dc-contract-card--red': profit_loss < 0 && !result,\n                    })}\n                    to={{\n                        pathname: `/contract/${contract_info.contract_id}`,\n                    }}\n                >\n                    <ContractCard.Header\n                        contract_info={contract_info}\n                        display_name={display_name}\n                        getCardLabels={getCardLabels}\n                        getContractTypeDisplay={getContractTypeDisplay}\n                        has_progress_slider={!is_mobile && has_progress_slider}\n                        is_mobile={is_mobile}\n                        is_sell_requested={is_sell_requested}\n                        onClickSell={onClickSell}\n                        server_time={server_time as moment.Moment}\n                    />\n                </NavLink>\n                <CurrencyBadge currency={contract_info?.currency ?? ''} />\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-body')}>\n                    <div className={classNames('positions-modal-card__grid-profit-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Buy price:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.buy_price} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Contract value:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                <Money amount={contract_info.bid_price} currency={currency} />\n                            </Text>\n                        </div>\n                    </div>\n\n                    <div className={classNames('positions-modal-card__grid-price-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Entry spot:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={Number(contract_info.entry_spot)} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Strike:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                <Money amount={Number(contract_info.barrier)} currency={currency} />\n                            </Text>\n                        </div>\n                    </div>\n\n                    {result || !!contract_info.is_sold ? (\n                        <PositionsResultMobile\n                            is_visible={!!contract_info.is_sold}\n                            result={result || fallback_result}\n                        />\n                    ) : (\n                        <ProgressSliderMobile\n                            className='positions-modal-card__progress'\n                            current_tick={current_tick}\n                            getCardLabels={getCardLabels}\n                            is_loading={is_loading}\n                            start_time={contract_info.date_start}\n                            expiry_time={contract_info.date_expiry}\n                            server_time={server_time as moment.Moment}\n                            ticks_count={contract_info.tick_count}\n                        />\n                    )}\n                </div>\n                <div className={classNames('positions-modal-card__item', className)}>\n                    <div className='dc-contract-card-item__header'>{getCardLabels().TOTAL_PROFIT_LOSS}</div>\n                    <div\n                        className={classNames('dc-contract-card-item__body', {\n                            'dc-contract-card-item__body--crypto': isCryptocurrency(currency),\n                            'dc-contract-card-item__body--loss': +total_profit < 0,\n                            'dc-contract-card-item__body--profit': +total_profit > 0,\n                        })}\n                    >\n                        <Money amount={total_profit} currency={currency} />\n                        <div\n                            className={classNames('dc-contract-card__indicative--movement', {\n                                'dc-contract-card__indicative--movement-complete': !!contract_info.is_sold,\n                            })}\n                        >\n                            {status === 'profit' && <Icon icon='IcProfit' />}\n                            {status === 'loss' && <Icon icon='IcLoss' />}\n                        </div>\n                    </div>\n                </div>\n                <ContractCard.Footer\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    is_sell_requested={is_sell_requested}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    server_time={server_time as moment.Moment}\n                />\n            </React.Fragment>\n        );\n\n        const custom_card_header = (\n            <ContractCard.Header\n                contract_info={contract_info}\n                display_name={display_name}\n                getCardLabels={getCardLabels}\n                getContractTypeDisplay={getContractTypeDisplay}\n                has_progress_slider={(!is_mobile && has_progress_slider) || is_accumulator}\n                is_mobile={is_mobile}\n                is_sell_requested={is_sell_requested}\n                onClickSell={onClickSell}\n                server_time={server_time as moment.Moment}\n            />\n        );\n\n        const custom_card_body = (\n            <ContractCard.Body\n                addToast={addToast}\n                contract_info={contract_info}\n                contract_update={contract_update}\n                currency={currency}\n                current_focus={current_focus}\n                getCardLabels={getCardLabels}\n                getContractById={getContractById}\n                is_accumulator={is_accumulator}\n                is_mobile={is_mobile}\n                is_multiplier={is_multiplier}\n                is_positions\n                is_sold={!!contract_info.is_sold}\n                is_turbos={is_turbos}\n                has_progress_slider={is_mobile && has_progress_slider && !has_ended}\n                removeToast={removeToast}\n                server_time={server_time as moment.Moment}\n                setCurrentFocus={setCurrentFocus}\n                should_show_cancellation_warning={should_show_cancellation_warning}\n                status={status}\n                toggleCancellationWarning={toggleCancellationWarning}\n            />\n        );\n\n        const custom_card_footer = (\n            <ContractCard.Footer\n                contract_info={contract_info}\n                getCardLabels={getCardLabels}\n                is_multiplier={is_multiplier}\n                is_sell_requested={is_sell_requested}\n                onClickCancel={onClickCancel}\n                onClickSell={onClickSell}\n                server_time={server_time as moment.Moment}\n            />\n        );\n\n        const custom_contract_el = (\n            <React.Fragment>\n                <ContractCard\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    profit_loss={profit_loss}\n                    should_show_result_overlay={false}\n                >\n                    {custom_card_header}\n                    {custom_card_body}\n                    {custom_card_footer}\n                </ContractCard>\n            </React.Fragment>\n        );\n\n        const options_el = is_vanilla ? contract_vanilla_el : contract_options_el;\n        const contract_el = is_multiplier || is_accumulator || is_turbos ? custom_contract_el : options_el;\n\n        return (\n            <div id={`dt_drawer_card_${id}`} className={classNames('positions-modal-card__wrapper', className)}>\n                {is_unsupported ? (\n                    <div\n                        className={classNames('positions-modal-card')}\n                        onClick={() => toggleUnsupportedContractModal(true)}\n                    >\n                        {contract_info.underlying ? contract_el : loader_el}\n                    </div>\n                ) : (\n                    <React.Fragment>\n                        <BinaryLink\n                            onClick={togglePositions}\n                            className={classNames('positions-modal-card', {\n                                'positions-modal-card--multiplier': is_multiplier,\n                            })}\n                            to={getContractPath(id)}\n                        >\n                            {contract_info.underlying ? contract_el : loader_el}\n                        </BinaryLink>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n);\n\nexport default PositionsModalCard;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport 'Sass/app/_common/components/positions-toggle.scss';\n\ntype TTogglePositions = {\n    positions_count: number;\n    is_open: boolean;\n    togglePositions: () => void;\n};\n\nconst TogglePositions = ({ positions_count, is_open, togglePositions }: TTogglePositions) => {\n    const positions_toggle_class = classNames('positions-toggle', {\n        'positions-toggle--active': is_open,\n        'positions-toggle--has-count': positions_count > 0,\n    });\n    return (\n        <a\n            id='dt_positions_toggle'\n            data-testid='dt_positions_toggle'\n            className={positions_toggle_class}\n            onClick={togglePositions}\n            data-count={positions_count}\n        >\n            <Icon data_testid='dt_icon' icon='IcPortfolio' className='positions-toggle__icon' />\n        </a>\n    );\n};\n\nexport default TogglePositions;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Icon, Div100vhContainer, Modal, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { NavLink } from 'react-router-dom';\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\nimport PositionsModalCard from 'App/Components/Elements/PositionsDrawer/positions-modal-card';\nimport TogglePositions from './toggle-positions';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TTogglePositionsMobile = Pick<\n    ReturnType<typeof useStore>['portfolio'],\n    'active_positions_count' | 'error' | 'onClickSell' | 'onClickCancel'\n> & {\n    currency: ReturnType<typeof useStore>['client']['currency'];\n    filtered_positions: ReturnType<typeof useStore>['portfolio']['all_positions'];\n    is_empty: boolean;\n};\n\ntype THiddenPositionsId = TTogglePositionsMobile['filtered_positions'][0]['id'];\n\nconst TogglePositionsMobile = observer(\n    ({\n        active_positions_count,\n        currency,\n        error,\n        filtered_positions,\n        is_empty,\n        onClickSell,\n        onClickCancel,\n    }: TTogglePositionsMobile) => {\n        const { togglePositionsDrawer, toggleUnsupportedContractModal, is_positions_drawer_on } = useStore().ui;\n        const [hidden_positions_ids, setHiddenPositionsIds] = React.useState<THiddenPositionsId[]>([]);\n        const displayed_positions = filtered_positions\n            .filter(p =>\n                hidden_positions_ids.every(hidden_position_id => hidden_position_id !== p.contract_info.contract_id)\n            )\n            .slice(0, 5);\n        const closed_positions_ids = displayed_positions\n            .filter(position => position.contract_info?.is_sold)\n            .map(p => p.contract_info.contract_id);\n\n        const closeModal = () => {\n            setHiddenPositionsIds([...new Set([...hidden_positions_ids, ...closed_positions_ids])]);\n            togglePositionsDrawer();\n        };\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {displayed_positions.map(portfolio_position => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear: 'dc-contract-card__wrapper--enter',\n                                enter: 'dc-contract-card__wrapper--enter',\n                                enterDone: 'dc-contract-card__wrapper--enter-done',\n                                exit: 'dc-contract-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsModalCard\n                                onClickSell={onClickSell}\n                                onClickCancel={onClickCancel}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                togglePositions={togglePositionsDrawer}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <React.Fragment>\n                <TogglePositions\n                    is_open={is_positions_drawer_on}\n                    togglePositions={togglePositionsDrawer}\n                    positions_count={active_positions_count}\n                />\n                <Modal\n                    is_open={is_positions_drawer_on}\n                    toggleModal={closeModal}\n                    id='dt_mobile_positions'\n                    is_vertical_top\n                    has_close_icon\n                    width='calc(100vw - 32px)'\n                >\n                    <Div100vhContainer className='positions-modal' height_offset='48px'>\n                        <div className='positions-modal__header'>\n                            <Text size='xxxs' className='positions-modal__title'>\n                                <Icon icon='IcPortfolio' className='positions-modal__title-icon' />\n                                {localize('Recent positions')}\n                            </Text>\n                            <div className='positions-modal__close-btn' onClick={closeModal}>\n                                <Icon data_testid='dt_modal_header_close' icon='IcMinusBold' />\n                            </div>\n                        </div>\n                        <div className='positions-modal__body'>\n                            {is_empty || !displayed_positions.length || error ? (\n                                <EmptyPortfolioMessage error={error} />\n                            ) : (\n                                body_content\n                            )}\n                        </div>\n                        <div className='positions-modal__footer'>\n                            <NavLink\n                                onClick={closeModal}\n                                className='dc-btn dc-btn--secondary dc-btn__large positions-modal__footer-btn'\n                                to={routes.positions}\n                            >\n                                <Text size='xs' weight='bold'>\n                                    {localize('Go to Reports')}\n                                </Text>\n                            </NavLink>\n                        </div>\n                    </Div100vhContainer>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default TogglePositionsMobile;\n","import React from 'react';\nimport TogglePositionsMobile from 'App/Components/Elements/TogglePositions/toggle-positions-mobile';\nimport { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\nimport { TURBOS, VANILLALONG, isTurbosContract, isVanillaContract } from '@deriv/shared';\n\nconst PopulateHeader = observer(() => {\n    const { portfolio, client } = useStore();\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { currency: positions_currency } = client;\n    const {\n        active_positions_count,\n        all_positions: positions,\n        error: positions_error,\n        onClickSell: onPositionsSell,\n        onClickCancel: onPositionsCancel,\n    } = portfolio;\n\n    const filtered_positions = positions.filter(\n        p =>\n            p.contract_info &&\n            symbol === p.contract_info.underlying &&\n            (isTurbosContract(trade_contract_type) || isVanillaContract(trade_contract_type)\n                ? filterByContractType(\n                      p.contract_info,\n                      isTurbosContract(trade_contract_type) ? TURBOS.SHORT : VANILLALONG.CALL\n                  ) ||\n                  filterByContractType(\n                      p.contract_info,\n                      isTurbosContract(trade_contract_type) ? TURBOS.LONG : VANILLALONG.PUT\n                  )\n                : filterByContractType(p.contract_info, trade_contract_type))\n    );\n\n    return (\n        <TogglePositionsMobile\n            active_positions_count={active_positions_count}\n            currency={positions_currency}\n            error={positions_error}\n            filtered_positions={filtered_positions}\n            is_empty={!filtered_positions.length}\n            onClickSell={onPositionsSell}\n            onClickCancel={onPositionsCancel}\n        />\n    );\n});\n\nexport default PopulateHeader;\n","import React from 'react';\nimport { StoreProvider } from '@deriv/stores';\nimport { TraderStoreProvider } from 'Stores/useTraderStores';\nimport type { TCoreStores } from '@deriv/stores/types';\n\nexport const TraderProviders = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    return (\n        <StoreProvider store={store}>\n            <TraderStoreProvider>{children}</TraderStoreProvider>\n        </StoreProvider>\n    );\n};\n\nexport default TraderProviders;\n","import React from 'react';\nimport { when } from 'mobx';\nimport { MobileWrapper } from '@deriv/components';\nimport { isMobile, routes, WS } from '@deriv/shared';\nimport PopulateHeader from './populate-header';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport { TCoreStores } from '@deriv/stores/types';\n\ntype TradeHeaderExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst TradeHeaderExtensions = observer(({ store }: TradeHeaderExtensionsProps) => {\n    const { client, modules, ui, portfolio } = useStore();\n    const { populateHeaderExtensions } = ui;\n    const { onMount: onMountPositions } = portfolio;\n    const { is_logged_in, is_populating_account_list } = client;\n    const { onMountCommon: onMountCashier, setAccountSwitchListener } = modules.cashier.general_store;\n\n    const show_positions_toggle = location.pathname !== routes.mt5;\n    const show_component = is_logged_in && show_positions_toggle;\n\n    const populateHeaderfunction = React.useCallback(() => {\n        const header_items = show_component ? (\n            <MobileWrapper>\n                <TraderProviders store={store}>\n                    <PopulateHeader />\n                </TraderProviders>\n            </MobileWrapper>\n        ) : null;\n\n        populateHeaderExtensions(header_items);\n    }, [populateHeaderExtensions, store, show_positions_toggle, is_populating_account_list]);\n\n    React.useEffect(() => {\n        const waitForLogin = async () => {\n            if (isMobile() && show_positions_toggle) {\n                await when(() => !is_populating_account_list); // Waits for login to complete\n                if (is_logged_in) {\n                    await WS.wait('authorize');\n                    onMountPositions();\n                    onMountCashier(true);\n                    setAccountSwitchListener();\n                }\n            }\n\n            populateHeaderfunction();\n        };\n\n        waitForLogin().catch(() => {\n            // Do nothing: This is to remove the bug reported by SonarCloud about not having a catch statement here.\n        });\n\n        return () => populateHeaderExtensions(null);\n    }, [\n        onMountCashier,\n        onMountPositions,\n        populateHeaderfunction,\n        populateHeaderExtensions,\n        setAccountSwitchListener,\n        store,\n        show_positions_toggle,\n    ]);\n\n    React.useEffect(() => {\n        populateHeaderfunction();\n    });\n\n    return null;\n});\n\nexport default TradeHeaderExtensions;\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport TogglePositions from '../Components/Elements/TogglePositions/toggle-positions';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TradeFooterExtensions = observer((props: RouteComponentProps) => {\n    const { location } = props;\n    const { client, portfolio, ui } = useStore();\n    const { is_logged_in } = client;\n    const { active_positions_count } = portfolio;\n    const { is_positions_drawer_on, populateFooterExtensions, togglePositionsDrawer } = ui;\n    React.useEffect(() => populateFooter());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(() => () => populateFooterExtensions([]), []);\n\n    const TogglePositionsIcon = () => (\n        <TogglePositions\n            is_open={is_positions_drawer_on}\n            togglePositions={togglePositionsDrawer}\n            positions_count={active_positions_count}\n        />\n    );\n\n    const populateFooter = () => {\n        const show_positions_toggle = location.pathname === routes.trade;\n\n        if (is_logged_in && show_positions_toggle) {\n            populateFooterExtensions([\n                {\n                    position: 'left',\n                    Component: TogglePositionsIcon,\n                },\n            ]);\n        } else {\n            populateFooterExtensions([]);\n        }\n    };\n\n    return null;\n});\n\nexport default withRouter(TradeFooterExtensions);\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport type { TCoreStores } from '@deriv/stores/types';\n\ntype TTradeSettingsExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst ChartSettingContainer = Loadable({\n    loader: () =>\n        import(\n            /* webpackChunkName: \"settings-chart\", webpackPrefetch: true */ 'App/Containers/SettingsModal/settings-chart.jsx'\n        ),\n    loading: () => <UILoader />,\n});\n\n// const PurchaseSettings = Loadable({\n//     loader: () =>\n//     import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-purchase.jsx'),\n//     loading: UILoader,\n// });\n\nconst renderItemValue = <T extends object>(props: T, store: TCoreStores) => (\n    <TraderProviders store={store}>\n        <ChartSettingContainer {...props} />\n    </TraderProviders>\n);\n\nconst TradeSettingsExtensions = observer(({ store }: TTradeSettingsExtensionsProps) => {\n    const { ui } = useStore();\n    const { populateSettingsExtensions } = ui;\n    const populateSettings = () => {\n        const menu_items: Parameters<typeof populateSettingsExtensions>[0] = [\n            {\n                icon: 'IcChart',\n                label: localize('Charts'),\n                value: props => renderItemValue(props, store),\n                // uncomment below lines to bring back purchase lock and purchase confirmation}\n                // }, {\n                //     icon : IconPurchase,\n                //     label: localize('Purchase'),\n                //     value: PurchaseSettings,\n            },\n        ];\n        populateSettingsExtensions(menu_items);\n    };\n\n    React.useEffect(() => {\n        return () => populateSettingsExtensions(null);\n    }, [populateSettingsExtensions]);\n\n    React.useEffect(() => populateSettings());\n\n    return null;\n});\n\nexport default TradeSettingsExtensions;\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async (symbol: string): Promise<void> => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize } from '@deriv/translations';\nimport { isHourValid, isMinuteValid, isTimeValid, toMoment } from '@deriv/shared';\nimport { isSessionAvailable } from '../Helpers/start-date';\nimport { TTradeStore } from 'Types';\nimport type { TRuleOptions } from 'Utils/Validator/validator';\n\ntype TValidationRules = {\n    [key: string]: {\n        rules?: Array<string | TRuleOptions>[];\n        trigger?: string;\n    };\n};\n\nconst tradeSpecificBarrierCheck = (is_vanilla: boolean, input: number) => is_vanilla || input !== 0;\n\nexport const getValidationRules = (): TValidationRules => ({\n    amount: {\n        rules: [\n            ['req', { message: localize('Amount is a required field.') }],\n            ['number', { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => !!store.barrier_count && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: (store: TTradeStore) => !!store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['barrier_1'], options, store, inputs) =>\n                        Number(store?.barrier_count) > 1 ? +value > Number(inputs?.barrier_2) : true,\n                    message: localize('Higher barrier must be higher than lower barrier.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['barrier_1'], options, store, inputs) =>\n                        /^[+-]/.test(inputs?.barrier_1 ?? '')\n                            ? tradeSpecificBarrierCheck(!!store?.is_vanilla, Number(inputs?.barrier_1))\n                            : true,\n                    message: localize('Barrier cannot be zero.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: (store: TTradeStore) => !!store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['barrier_2'], options, store, inputs) =>\n                        (/^[+-]/g.test(inputs?.barrier_1 ?? '') && /^[+-]/g.test(value)) ||\n                        (/^(?![+-])/g.test(inputs?.barrier_1 ?? '') && /^(?![+-])/g.test(value)),\n                    message: localize('Both barriers should be relative or absolute'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['barrier_2'], options, store, inputs) =>\n                        Number(inputs?.barrier_1) > +value,\n                    message: localize('Lower barrier must be lower than higher barrier.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [['req', { message: localize('Duration is a required field.') }]],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['start_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isTimeValid(value ?? ''),\n                    message: localize('Please enter the start time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['start_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isHourValid(value ?? ''),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['start_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isMinuteValid(value ?? ''),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['start_time'], options, store) => {\n                        if (store?.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value ?? '')) return false;\n                        const start_moment = toMoment(store?.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value?.split(':') ?? [];\n                        return isSessionAvailable(\n                            store?.sessions,\n                            start_moment_clone.hour(+h).minute(+m),\n                            start_moment\n                        );\n                    },\n                    message: localize('Start time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['expiry_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isTimeValid(value ?? ''),\n                    message: localize('Please enter the start time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['expiry_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isHourValid(value ?? ''),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['expiry_time'], options, store) =>\n                        store?.contract_start_type === 'spot' || isMinuteValid(value ?? ''),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value: TTradeStore['expiry_time'], options, store) => {\n                        if (store?.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value ?? '')) return false;\n                        const start_moment = toMoment(store?.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value?.split(':') ?? [];\n                        return isSessionAvailable(\n                            store?.sessions,\n                            start_moment_clone.hour(+h).minute(+m),\n                            start_moment\n                        );\n                    },\n                    message: localize('Expiry time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    ...getMultiplierValidationRules(),\n});\n\nexport const getMultiplierValidationRules = () => ({\n    stop_loss: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: (store: TTradeStore) => store.has_stop_loss && !store.stop_loss,\n                    message: localize('Please enter a stop loss amount.'),\n                },\n            ],\n        ],\n    },\n    take_profit: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: (store: TTradeStore) => store.has_take_profit && !store.take_profit,\n                    message: localize('Please enter a take profit amount.'),\n                },\n            ],\n        ],\n    },\n});\n","import { Buy, BuyContractResponse, BuyContractRequest } from '@deriv/api-types';\nimport { WS } from '@deriv/shared';\n\ntype TResponse = BuyContractResponse & {\n    echo_req: Buy;\n    error?: {\n        code: string;\n        message: string;\n        details?: BuyContractResponse['buy'] & { field: string };\n    };\n};\n\nexport const processPurchase = async (\n    proposal_id: string,\n    price: string | number,\n    passthrough?: BuyContractRequest['passthrough']\n): Promise<TResponse> =>\n    WS.buy({\n        proposal_id,\n        price,\n        ...(passthrough && { passthrough }),\n    });\n","/**\n * @param {Object} previous_ticks_history_stats - an object of type: { ticks_stayed_in: number[], last_tick_epoch: number }\n *                                                with ticks_stayed_in starting with the latest counter value;\n * @param {number[]} new_ticks_history_stats - an array of ticks counters containing 100 last values at first, and then only 1 latest updated counter value;\n * @param {number} last_tick_epoch - an epoch of the latest tick counted by the latest (last) ticks counter in new_ticks_stayed_in array;\n * @returns an object of the same type as previous_ticks_history_stats.\n */\n\nimport { TTradeStore } from 'Types';\n\ntype TGetUpdatedTicksHistoryStats = {\n    previous_ticks_history_stats: TTradeStore['ticks_history_stats'];\n    new_ticks_history_stats?: TTradeStore['ticks_history_stats']['ticks_stayed_in'];\n    last_tick_epoch: TTradeStore['ticks_history_stats']['last_tick_epoch'];\n};\n\nexport const getUpdatedTicksHistoryStats = ({\n    previous_ticks_history_stats = {},\n    new_ticks_history_stats = [],\n    last_tick_epoch,\n}: TGetUpdatedTicksHistoryStats) => {\n    // we anticipate that the latest counter value will be the last one in the received new_ticks_stayed_in array:\n    let ticks_stayed_in = [];\n    const previous_history = previous_ticks_history_stats.ticks_stayed_in || [];\n    const previous_epoch = previous_ticks_history_stats.last_tick_epoch ?? 0;\n    if (!new_ticks_history_stats.length || !last_tick_epoch) return previous_ticks_history_stats;\n    if (new_ticks_history_stats.length > 1) {\n        ticks_stayed_in = [...new_ticks_history_stats].reverse();\n    } else if (new_ticks_history_stats[0] <= previous_history[0] && last_tick_epoch > previous_epoch) {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(0, previous_history.length - 1)];\n    } else if (last_tick_epoch === previous_epoch) {\n        ticks_stayed_in = previous_history;\n    } else {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(1)];\n    }\n    return { ticks_stayed_in, last_tick_epoch };\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { TTradeStore } from 'Types';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }: TTradeStore) => {\n    return ContractType.getContractType(contract_types_list, contract_type);\n};\n\nexport const onChangeContractType = (store: TTradeStore) => {\n    return ContractType.getContractValues(store);\n};\n","import { getExpiryType, getDurationMinMaxValues } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { TTradeStore } from 'Types';\n\ntype TOnChangeExpiry = (store: TTradeStore) => {\n    contract_expiry_type: string;\n    barrier_count?: number;\n    barrier_1?: string;\n    barrier_2?: string;\n};\ntype TAssertDurationParams = Partial<\n    Pick<TTradeStore, 'contract_expiry_type' | 'duration' | 'duration_min_max' | 'duration_unit'>\n>;\n\nexport const onChangeExpiry: TOnChangeExpiry = store => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers =\n        store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n\nexport const onChangeContractType = (store: TTradeStore) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    const { duration, duration_min_max, duration_unit } = store;\n\n    const obj_duration = assertDuration({ contract_expiry_type, duration, duration_min_max, duration_unit });\n\n    return {\n        ...obj_duration,\n    };\n};\n\nconst assertDuration = ({\n    contract_expiry_type,\n    duration,\n    duration_min_max,\n    duration_unit,\n}: TAssertDurationParams = {}) => {\n    const [min, max] = getDurationMinMaxValues(duration_min_max ?? {}, contract_expiry_type ?? '', duration_unit ?? '');\n\n    if (duration && min && duration < min) {\n        return { duration: min };\n    }\n    if (duration && max && duration > max) {\n        return { duration: max };\n    }\n    return {};\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { TTradeStore } from 'Types';\n\nexport const onChangeStartDate = async (store: TTradeStore) => {\n    const { contract_type, duration_unit, start_date } = store;\n    const server_time = store.root_store?.common.server_time;\n    let { start_time, expiry_type } = store;\n\n    start_time = start_time || server_time?.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type = obj_contract_start_type.contract_start_type;\n    const obj_sessions = ContractType.getSessions(contract_type, start_date);\n    const sessions = obj_sessions.sessions;\n    const obj_start_time = ContractType.getStartTime(sessions, start_date, start_time);\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, store.expiry_date, expiry_type, start_date);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_type,\n    };\n};\n\nexport const onChangeExpiry = async (store: TTradeStore) => {\n    const { start_time, expiry_date, expiry_type, expiry_time, start_date, symbol, sessions } = store;\n    const trading_times = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times = obj_market_close_times.market_close_times;\n    const obj_expiry_time = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    return {\n        ...obj_expiry_time,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { ContractType as ContractTypeHelper } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport * as ContractType from '../Actions/contract-type';\nimport * as Duration from '../Actions/duration';\nimport * as StartDate from '../Actions/start-date';\nimport { TTradeStore } from 'Types';\n\n// remove local TGetSnapshot type and assertion after TS migration for trader package is complete\ntype TGetSnapshot = (properties?: string[]) => TTradeStore;\n\nconst processInSequence = async (\n    store: TTradeStore,\n    functions: ReturnType<typeof getMethodsList> | ReturnType<typeof getExpiryMethodsList>\n) => {\n    const snapshot = (store.getSnapshot as TGetSnapshot)();\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++) {\n        // Shallow copy with Object.assign is good enough to extend the snapshot with new state\n        // we don't need deep extension here, since each function in functions array composes a property of the store completely\n        Object.assign(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n    store.updateStore({\n        ...snapshot,\n    });\n};\n\nexport const processTradeParams = async (store: TTradeStore, new_state: Partial<TTradeStore>) => {\n    const functions = getMethodsList(store, new_state);\n    await processInSequence(store, functions);\n\n    const duration_functions = getExpiryMethodsList();\n    await processInSequence(store, duration_functions);\n\n    store.updateStore({\n        is_trade_enabled: true,\n    });\n};\n\nconst getMethodsList = (\n    store: Parameters<typeof processTradeParams>[0],\n    new_state: Parameters<typeof processTradeParams>[1]\n) => {\n    const filtered_keys = Object.keys(new_state).filter(key => /\\b(symbol|contract_type|is_equal)\\b/.test(key));\n    return [\n        ContractTypeHelper.getContractCategories,\n        ContractType.onChangeContractTypeList,\n        ...(filtered_keys.length > 0 || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n            ? [ContractType.onChangeContractType]\n            : []),\n        StartDate.onChangeStartDate,\n        Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n        ...(filtered_keys.length || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n            ? [Duration.onChangeContractType]\n            : []),\n    ];\n};\n\nconst getExpiryMethodsList = () => [StartDate.onChangeExpiry];\n","import { BARRIER_COLORS } from '@deriv/shared';\n\nexport const getHoveredColor = (type: string): string => {\n    switch (type) {\n        case 'TURBOSSHORT':\n            return BARRIER_COLORS.RED;\n        case 'TURBOSLONG':\n            return BARRIER_COLORS.GREEN;\n        default:\n            return BARRIER_COLORS.BLUE;\n    }\n};\n","import { Errors, getPreBuildDVRs, template } from '@deriv/shared';\n\nimport { getValidationRules } from 'Stores/Modules/Trading/Constants/validation-rules';\nimport { TTradeStore } from 'Types';\n\ntype TOptions = {\n    [key: string]: unknown;\n    decimals?: string | number;\n    is_required?: boolean;\n    max?: number | string | null;\n    min?: number | string | null;\n    name1?: string;\n    name2?: string;\n    regex?: RegExp;\n    type?: string;\n};\n\ntype TInitPreBuildDVRs = ReturnType<typeof getValidationRules>;\n\nexport type TRuleOptions = {\n    func?: <T extends string>(\n        value: T,\n        options?: TOptions,\n        store?: TTradeStore,\n        inputs?: Pick<TTradeStore, keyof TTradeStore>\n    ) => boolean | { is_ok: boolean; message: string };\n    condition?: (store: TTradeStore) => boolean;\n    message?: string;\n} & TOptions;\n\ntype TRule = string | Array<string | TRuleOptions>;\n\ntype TValidationResult = {\n    is_ok: boolean;\n    message: string;\n};\n\nclass Validator {\n    input: Pick<TTradeStore, keyof TTradeStore>;\n    rules: Partial<TInitPreBuildDVRs>;\n    store: TTradeStore;\n    errors: Errors;\n    error_count: number;\n\n    constructor(input: Pick<TTradeStore, keyof TTradeStore>, rules: Partial<TInitPreBuildDVRs>, store: TTradeStore) {\n        this.input = input;\n        this.rules = rules;\n        this.store = store;\n        this.errors = new Errors();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute: string, rule: { name: string; options: TRuleOptions }, error_message?: string) {\n        let message =\n            error_message ||\n            rule.options.message ||\n            (getPreBuildDVRs() as unknown as { [key: string]: { message: () => string } })[rule.name].message();\n        if (rule.name === 'length') {\n            message = template(message, [\n                rule.options.min === rule.options.max\n                    ? rule.options.min?.toString() || ''\n                    : `${rule.options.min}-${rule.options.max}`,\n            ]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min?.toString() || '']);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1 || '', rule.options.name2 || '']);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            (this.rules as unknown as { [key: string]: Array<TRule> })[attribute].forEach((rule: TRule) => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute as keyof TTradeStore] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                let is_valid, error_message;\n                if (ruleObject.name === 'number') {\n                    const { is_ok, message } = ruleObject.validator(\n                        this.input[attribute as keyof TTradeStore] as string,\n                        ruleObject.options,\n                        this.store,\n                        this.input\n                    ) as TValidationResult;\n                    is_valid = is_ok;\n                    error_message = message;\n                } else {\n                    is_valid = ruleObject.validator(\n                        this.input[attribute as keyof TTradeStore] as string,\n                        ruleObject.options,\n                        this.store,\n                        this.input\n                    );\n                }\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject, error_message);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule: TRule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object_name = (is_rule_string ? rule : rule[0]) as string;\n        const rule_object_options = (is_rule_string ? {} : rule[1] || {}) as TRuleOptions;\n        return {\n            name: rule_object_name,\n            options: rule_object_options,\n            validator:\n                rule_object_name === 'custom'\n                    ? rule_object_options.func\n                    : (\n                          getPreBuildDVRs() as unknown as {\n                              [key: string]: {\n                                  func: TRuleOptions['func'];\n                              };\n                          }\n                      )[rule_object_name].func,\n        };\n    }\n}\n\nexport default Validator;\n","import Validator from './validator';\n\nexport default Validator;\n","import { action, intercept, observable, reaction, toJS, when, makeObservable } from 'mobx';\nimport { isProduction, isEmptyObject } from '@deriv/shared';\nimport { TCoreStores } from '@deriv/stores/types';\nimport Validator from 'Utils/Validator';\nimport { getValidationRules } from './Modules/Trading/Constants/validation-rules';\n\ntype TValidationRules = ReturnType<typeof getValidationRules> | Record<string, never>;\n\ntype TBaseStoreOptions = {\n    root_store: TCoreStores;\n    local_storage_properties?: string[];\n    session_storage_properties?: string[];\n    validation_rules?: TValidationRules;\n    store_name?: string;\n};\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n    clientInitDisposer: null | (() => void) = null;\n    client_init_listener: null | (() => Promise<void>) = null;\n    logoutDisposer: null | (() => void) = null;\n    logout_listener: null | (() => Promise<void>) = null;\n    local_storage_properties: string[];\n    networkStatusChangeDisposer: null | (() => void) = null;\n    network_status_change_listener: null | ((is_online: boolean) => void) = null;\n    partial_fetch_time = 0;\n    preSwitchAccountDisposer: null | (() => void) = null;\n    pre_switch_account_listener: null | (() => Promise<void>) = null;\n    realAccountSignupEndedDisposer: null | (() => void) = null;\n    real_account_signup_ended_listener: null | (() => Promise<void>) = null;\n    root_store: TCoreStores;\n    session_storage_properties: string[];\n    store_name = '';\n    switchAccountDisposer: null | (() => void) = null;\n    switch_account_listener: null | (() => Promise<void>) = null;\n    themeChangeDisposer: null | (() => void) = null;\n    theme_change_listener: null | ((is_dark_mode_on: boolean) => void) = null;\n    validation_errors: { [key: string]: string[] } = {};\n    validation_rules: TValidationRules | Record<string, never> = {};\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {} as TBaseStoreOptions) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties?.length || session_storage_properties?.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties: string[]): object {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties?.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p as keyof this] }),\n                {} as this\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i as keyof this]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i as keyof this]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties: string[] = [], storage = Symbol('')) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(String(localStorage.getItem(this.store_name)));\n        const session_storage_snapshot = JSON.parse(String(sessionStorage.getItem(this.store_name)));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k as keyof this] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName: string, messages: string[]) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules: TValidationRules = {}): void {\n        Object.keys(rules).forEach(key => {\n            this.addRule<keyof TValidationRules>(key as keyof TValidationRules, rules[key as keyof TValidationRules]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule<T extends keyof TValidationRules>(property: T, rules: TValidationRules[T]) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property as unknown as keyof this, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty<T extends BaseStore>(property: string, value: T[keyof T]) {\n        const validation_rules_for_property = this.validation_rules[property] ?? {};\n        const trigger = 'trigger' in validation_rules_for_property ? validation_rules_for_property.trigger : undefined;\n        const inputs = { [property]: value ?? this[property as keyof this] };\n        const validation_rules = {\n            [property]: 'rules' in validation_rules_for_property ? validation_rules_for_property.rules : [],\n        };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            const validation_rules_for_trigger = this.validation_rules[trigger as keyof TValidationRules];\n            inputs[trigger] = this[trigger as keyof this];\n            validation_rules[trigger] =\n                'rules' in validation_rules_for_trigger ? validation_rules_for_trigger.rules : [];\n        }\n        // @ts-expect-error TODO: remove this comment when Validator migrated to TS is merged to master\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p as keyof this]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener: null | (() => Promise<void>)): void {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => !!this.root_store.client.switch_broadcast,\n                () => {\n                    try {\n                        const result = this.switch_account_listener?.();\n                        if (result?.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener: null | (() => Promise<void>)): void {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n            this.preSwitchAccountDisposer = when(\n                () => !!this.root_store.client.pre_switch_broadcast,\n                () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result?.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener: null | (() => Promise<void>)): void {\n        this.logoutDisposer = when(\n            () => !!this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener?.();\n                    if (result?.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener: null | (() => Promise<void>)): void {\n        this.clientInitDisposer = when(\n            () => !!this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener?.();\n                    if (result?.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener: null | ((is_online: boolean) => void)): void {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener?.(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener: null | ((is_dark_mode_on: boolean) => void)): void {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener?.(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener: null | (() => Promise<void>)): void {\n        this.realAccountSignupEndedDisposer = when(\n            () => !!this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener?.();\n                    if (result?.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid: string, ...reactions: VoidFunction[]): void {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = 0;\n        }\n    }\n}\n","import type { ChartBarrierStore } from '../chart-barrier-store';\n\nexport type TBarrier = ChartBarrierStore & { key?: string };\n\nexport const barriersToString = (\n    is_relative: boolean,\n    ...barriers_list: Array<string | number | undefined>\n): Array<string | undefined> =>\n    barriers_list\n        .filter(barrier => barrier !== undefined && barrier !== null)\n        .map(barrier => `${is_relative && !/^[+-]/.test(barrier?.toString() ?? '') ? '+' : ''}${barrier}`);\n\nexport const removeBarrier = (barriers: TBarrier[], key: string) => {\n    const index = barriers.findIndex(b => b.key === key);\n    if (index > -1) {\n        barriers.splice(index, 1);\n    }\n};\n","import { action, computed, observable, makeObservable } from 'mobx';\nimport { BARRIER_COLORS, BARRIER_LINE_STYLES, CONTRACT_SHADES, DEFAULT_SHADES } from '@deriv/shared';\nimport { barriersToString } from './Helpers/barriers';\n\ntype TOnChartBarrierChange = null | ((barrier_1: string, barrier_2?: string) => void);\ntype TOnChangeParams = { high: string | number; low?: string | number };\ntype TChartBarrierStoreOptions =\n    | {\n          color: string;\n          line_style?: string;\n          not_draggable?: boolean;\n      }\n    | Record<string, never>;\n\nexport class ChartBarrierStore {\n    color: string;\n    lineStyle: string;\n    shade?: string;\n    shadeColor?: string;\n    high?: string | number;\n    low?: string | number;\n    onChange: (barriers: TOnChangeParams) => void;\n    relative: boolean;\n    draggable: boolean;\n    hidePriceLines: boolean;\n    hideBarrierLine?: boolean;\n    hideOffscreenLine?: boolean;\n    title?: string;\n    onChartBarrierChange: TOnChartBarrierChange | null;\n\n    constructor(\n        high_barrier?: string | number,\n        low_barrier?: string | number,\n        onChartBarrierChange: TOnChartBarrierChange = null,\n        { color, line_style, not_draggable }: TChartBarrierStoreOptions = {}\n    ) {\n        makeObservable(this, {\n            color: observable,\n            lineStyle: observable,\n            shade: observable,\n            shadeColor: observable,\n            high: observable,\n            low: observable,\n            relative: observable,\n            draggable: observable,\n            hidePriceLines: observable,\n            hideBarrierLine: observable,\n            hideOffscreenLine: observable,\n            title: observable,\n            updateBarriers: action.bound,\n            updateBarrierShade: action.bound,\n            onBarrierChange: action.bound,\n            barrier_count: computed,\n            default_shade: computed,\n        });\n\n        this.color = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange =\n            typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => undefined;\n\n        this.high = high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier = !!high_barrier;\n        this.relative = !has_barrier || /^[+-]/.test(high_barrier.toString());\n        this.draggable = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    updateBarriers(high: string | number, low?: string | number, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative = /^[+-]/.test(high.toString());\n        }\n        this.high = high || undefined;\n        this.low = low || undefined;\n    }\n\n    updateBarrierShade(should_display: boolean, contract_type: string) {\n        this.shade =\n            (should_display && CONTRACT_SHADES[contract_type as keyof typeof CONTRACT_SHADES]) || this.default_shade;\n    }\n\n    onBarrierChange({ high, low }: TOnChangeParams) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange?.(...(barriersToString(this.relative, high, low) as [string, string | undefined]));\n    }\n\n    get barrier_count(): number {\n        return +(typeof this.high !== 'undefined') + +(typeof this.low !== 'undefined');\n    }\n\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count as keyof typeof DEFAULT_SHADES];\n    }\n}\n","import { isMultiplierContract, BARRIER_COLORS, BARRIER_LINE_STYLES } from '@deriv/shared';\nimport { ChartBarrierStore } from '../../SmartChart/chart-barrier-store';\nimport { removeBarrier } from '../../SmartChart/Helpers/barriers';\nimport { useStore } from '@deriv/stores';\nimport { getProposalInfo } from './proposal';\n\nconst isLimitOrderBarrierSupported = (contract_type: string, contract_info: ReturnType<typeof getProposalInfo>) =>\n    isMultiplierContract(contract_type) && contract_info.limit_order;\n\nexport const LIMIT_ORDER_TYPES = {\n    STOP_OUT: 'stop_out',\n    TAKE_PROFIT: 'take_profit',\n    STOP_LOSS: 'stop_loss',\n} as const;\n\ntype TBarrier = ChartBarrierStore & { key?: string };\n\ntype TSetLimitOrderBarriers = {\n    barriers: TBarrier[];\n    contract_type?: string;\n    contract_info?: ReturnType<typeof getProposalInfo>;\n    is_over: boolean;\n};\nexport const setLimitOrderBarriers = ({\n    barriers,\n    contract_type = '',\n    contract_info = {} as ReturnType<typeof getProposalInfo>,\n    is_over,\n}: TSetLimitOrderBarriers) => {\n    if (is_over && isLimitOrderBarrierSupported(contract_type, contract_info)) {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        const has_stop_loss =\n            contract_info.limit_order !== undefined &&\n            Object.keys(contract_info.limit_order).some(\n                k => k === LIMIT_ORDER_TYPES.STOP_LOSS && contract_info?.limit_order?.[k]?.value\n            );\n\n        limit_orders.forEach(key => {\n            const obj_limit_order = contract_info.limit_order?.[key];\n\n            if (!obj_limit_order || !obj_limit_order.value) {\n                removeBarrier(barriers, key);\n                return;\n            }\n\n            let barrier = barriers.find(b => b.key === key);\n\n            if (barrier) {\n                if (barrier.high === +obj_limit_order.value) {\n                    return;\n                }\n\n                barrier.onChange({\n                    high: obj_limit_order.value,\n                });\n            } else {\n                const obj_barrier = {\n                    key,\n                    title: `${obj_limit_order.display_name}`,\n                    color: key === LIMIT_ORDER_TYPES.TAKE_PROFIT ? BARRIER_COLORS.GREEN : BARRIER_COLORS.ORANGE,\n                    draggable: false,\n                    lineStyle:\n                        key === LIMIT_ORDER_TYPES.STOP_OUT ? BARRIER_LINE_STYLES.DOTTED : BARRIER_LINE_STYLES.SOLID,\n                    hidePriceLines: has_stop_loss && key === LIMIT_ORDER_TYPES.STOP_OUT,\n                    hideOffscreenLine: true,\n                    showOffscreenArrows: true,\n                    isSingleBarrier: true,\n                    opacityOnOverlap: key === LIMIT_ORDER_TYPES.STOP_OUT && 0.15,\n                };\n                barrier = new ChartBarrierStore(obj_limit_order.value);\n\n                Object.assign(barrier, obj_barrier);\n                barriers.push(barrier);\n            }\n        });\n    } else {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        limit_orders.forEach(l => removeBarrier(barriers, l));\n    }\n};\n\n/**\n * Get limit_order for contract_update API\n * @param {object} contract_update - contract_update input & checkbox values\n */\nexport const getLimitOrder = (\n    contract_update: Pick<\n        ReturnType<typeof useStore>['contract_trade']['contracts'][number],\n        | 'has_contract_update_stop_loss'\n        | 'has_contract_update_take_profit'\n        | 'contract_update_stop_loss'\n        | 'contract_update_take_profit'\n        | 'contract_info'\n    >\n) => {\n    const {\n        has_contract_update_stop_loss,\n        has_contract_update_take_profit,\n        contract_update_stop_loss,\n        contract_update_take_profit,\n        contract_info,\n    } = contract_update;\n\n    const limit_order: { take_profit?: number | null; stop_loss?: number | null } = {};\n\n    const new_take_profit = has_contract_update_take_profit ? +contract_update_take_profit : null;\n    const has_take_profit_changed =\n        Math.abs(contract_info.limit_order?.take_profit?.order_amount ?? 0) !== Math.abs(new_take_profit ?? 0);\n\n    if (has_take_profit_changed) {\n        // send positive take_profit to update or null cancel\n        limit_order.take_profit = new_take_profit;\n    }\n\n    const new_stop_loss = has_contract_update_stop_loss ? +contract_update_stop_loss : null;\n    const has_stop_loss_changed =\n        Math.abs(contract_info?.limit_order?.stop_loss?.order_amount ?? 0) !== Math.abs(new_stop_loss ?? 0);\n\n    if (has_stop_loss_changed) {\n        // send positive stop_loss to update or null to cancel\n        limit_order.stop_loss = new_stop_loss;\n    }\n\n    return limit_order;\n};\n","import type { TEvents } from '@deriv/analytics';\n\nexport type TPayload = {\n    data: Omit<\n        Partial<TEvents['ce_chart_types_form'] & TEvents['ce_market_types_form'] & TEvents['ce_indicators_types_form']>,\n        'action'\n    > & {\n        action: string;\n    };\n    event_type: 'ce_chart_types_form' | 'ce_market_types_form' | 'ce_indicators_types_form';\n};\n\ntype TStateChangeOption = {\n    indicator_type_name?: string;\n    indicators_category_name?: string;\n    isClosed?: boolean;\n    is_favorite?: boolean;\n    is_info_open?: boolean;\n    is_open?: boolean;\n    chart_type_name?: string;\n    search_string?: string;\n    symbol?: string;\n    symbol_category?: string;\n    time_interval_name?: string;\n};\n\nexport const ACTION = {\n    ADD_ACTIVE: 'add_active',\n    ADD_TO_FAVORITES: 'add_to_favorites',\n    CHOOSE_CHART_TYPE: 'choose_chart_type',\n    CHOOSE_MARKET_TYPE: 'choose_market_type',\n    CHOOSE_TIME_INTERVAL: 'choose_time_interval',\n    CLEAN_ALL_ACTIVE: 'clean_all_active',\n    CLOSE: 'close',\n    DELETE_ACTIVE: 'delete_active',\n    DELETE_FROM_FAVORITES: 'delete_from_favorites',\n    EDIT_ACTIVE: 'edit_active',\n    INFO_OPEN: 'info_open',\n    INFO_CLOSE: 'info_close',\n    INFO_REDIRECT: 'info_redirect',\n    OPEN: 'open',\n    SEARCH: 'search',\n} as const;\n\nexport const STATE_TYPES = {\n    CHART_INTERVAL_CHANGE: 'CHART_INTERVAL_CHANGE',\n    CHART_MODE_TOGGLE: 'CHART_MODE_TOGGLE',\n    CHART_TYPE_CHANGE: 'CHART_TYPE_CHANGE',\n    FAVORITE_MARKETS_TOGGLE: 'FAVORITE_MARKETS_TOGGLE',\n    INDICATOR_ADDED: 'INDICATOR_ADDED',\n    INDICATOR_DELETED: 'INDICATOR_DELETED',\n    INDICATOR_INFO_TOGGLE: 'INDICATOR_INFO_TOGGLE',\n    INDICATOR_SEARCH: 'INDICATOR_SEARCH',\n    INDICATOR_SETTINGS_OPEN: 'INDICATOR_SETTINGS_OPEN',\n    INDICATORS_CLEAR_ALL: 'INDICATORS_CLEAR_ALL',\n    INDICATORS_MODAL_TOGGLE: 'INDICATORS_MODAL_TOGGLE',\n    INITIAL: 'INITIAL',\n    MARKET_INFO_REDIRECT: 'MARKET_INFO_REDIRECT',\n    MARKET_SEARCH: 'MARKET_SEARCH',\n    MARKET_STATE_CHANGE: 'MARKET_STATE_CHANGE',\n    MARKETS_LIST_TOGGLE: 'MARKETS_LIST_TOGGLE',\n    READY: 'READY',\n    SCROLL_TO_LEFT: 'SCROLL_TO_LEFT',\n    SYMBOL_CHANGE: 'SYMBOL_CHANGE',\n} as const;\n\nexport const SUBFORM_NAME = {\n    INDICATORS_INFO: 'indicators_info',\n    INDICATORS_TYPE: 'indicators_type',\n} as const;\n\nconst getChartTypeFormAnalyticsData = (state: keyof typeof STATE_TYPES, option: TStateChangeOption = {}) => {\n    const { chart_type_name = '', is_open, time_interval_name } = option;\n    const chart_event_type = 'ce_chart_types_form';\n    const payload: TPayload = {\n        data: {\n            action: '',\n            chart_type_name,\n            time_interval_name,\n        },\n        event_type: chart_event_type,\n    };\n    const open_close_action = is_open ? ACTION.OPEN : ACTION.CLOSE;\n    if (!chart_type_name) return {};\n    switch (state) {\n        case STATE_TYPES.CHART_INTERVAL_CHANGE:\n            payload.data.action = ACTION.CHOOSE_TIME_INTERVAL;\n            break;\n        case STATE_TYPES.CHART_MODE_TOGGLE:\n            payload.data.action = open_close_action;\n            break;\n        case STATE_TYPES.CHART_TYPE_CHANGE:\n            payload.data.action = ACTION.CHOOSE_CHART_TYPE;\n            break;\n        default:\n            return {};\n    }\n    return payload;\n};\n\nconst getIndicatorTypeFormAnalyticsData = (state: keyof typeof STATE_TYPES, option: TStateChangeOption = {}) => {\n    const { indicator_type_name = '', indicators_category_name = '', is_info_open, is_open, search_string } = option;\n    const indicators_event_type = 'ce_indicators_types_form';\n    const indicators_subform = is_info_open ? SUBFORM_NAME.INDICATORS_INFO : SUBFORM_NAME.INDICATORS_TYPE;\n    const info_open_close_action = is_info_open ? ACTION.INFO_OPEN : ACTION.INFO_CLOSE;\n    const open_close_action = is_open ? ACTION.OPEN : ACTION.CLOSE;\n    const payload = {\n        event_type: indicators_event_type,\n    } as TPayload;\n    if (\n        (state === STATE_TYPES.INDICATOR_SEARCH && !option.search_string) ||\n        ((state === STATE_TYPES.INDICATOR_ADDED ||\n            state === STATE_TYPES.INDICATOR_DELETED ||\n            state === STATE_TYPES.INDICATOR_INFO_TOGGLE ||\n            state === STATE_TYPES.INDICATOR_SETTINGS_OPEN) &&\n            !indicator_type_name)\n    ) {\n        return {};\n    }\n    switch (state) {\n        case STATE_TYPES.INDICATOR_ADDED:\n            payload.data = {\n                action: ACTION.ADD_ACTIVE,\n                indicator_type_name,\n                indicators_category_name,\n                subform_name: indicators_subform,\n            };\n            break;\n        case STATE_TYPES.INDICATOR_DELETED:\n            payload.data = {\n                action: ACTION.DELETE_ACTIVE,\n                indicator_type_name,\n                indicators_category_name,\n            };\n            break;\n        case STATE_TYPES.INDICATOR_INFO_TOGGLE:\n            payload.data = {\n                action: info_open_close_action,\n                indicator_type_name,\n                indicators_category_name,\n            };\n            break;\n        case STATE_TYPES.INDICATOR_SEARCH:\n            payload.data = {\n                action: ACTION.SEARCH,\n                search_string,\n            };\n            break;\n        case STATE_TYPES.INDICATOR_SETTINGS_OPEN:\n            payload.data = {\n                action: ACTION.EDIT_ACTIVE,\n                indicator_type_name,\n                indicators_category_name,\n            };\n            break;\n        case STATE_TYPES.INDICATORS_MODAL_TOGGLE:\n            payload.data = {\n                action: open_close_action,\n            };\n            break;\n        case STATE_TYPES.INDICATORS_CLEAR_ALL:\n            payload.data = {\n                action: ACTION.CLEAN_ALL_ACTIVE,\n            };\n            break;\n        default:\n            return {};\n    }\n    return payload;\n};\n\nconst getMarketTypeFormAnalyticsData = (state: keyof typeof STATE_TYPES, option: TStateChangeOption = {}) => {\n    const {\n        is_favorite,\n        is_open,\n        symbol_category: tab_market_name = '',\n        search_string,\n        symbol: market_type_name = '',\n    } = option;\n    const market_event_type = 'ce_market_types_form';\n    const favorites_action = is_favorite ? ACTION.ADD_TO_FAVORITES : ACTION.DELETE_FROM_FAVORITES;\n    const open_close_action = is_open ? ACTION.OPEN : ACTION.CLOSE;\n    const payload = {\n        event_type: market_event_type,\n    } as TPayload;\n    if (\n        (state === STATE_TYPES.MARKET_SEARCH && !option.search_string) ||\n        (state === STATE_TYPES.FAVORITE_MARKETS_TOGGLE && !market_type_name)\n    ) {\n        return {};\n    }\n    switch (state) {\n        case STATE_TYPES.FAVORITE_MARKETS_TOGGLE:\n            payload.data = {\n                action: favorites_action,\n                market_type_name,\n            };\n            break;\n        case STATE_TYPES.MARKET_INFO_REDIRECT:\n            payload.data = {\n                action: ACTION.INFO_REDIRECT,\n                tab_market_name,\n            };\n            break;\n        case STATE_TYPES.MARKET_SEARCH:\n            payload.data = {\n                action: ACTION.SEARCH,\n                search_string,\n            };\n            break;\n        case STATE_TYPES.MARKETS_LIST_TOGGLE:\n            payload.data = {\n                action: open_close_action,\n                market_type_name,\n            };\n            break;\n        case STATE_TYPES.SYMBOL_CHANGE:\n            payload.data = {\n                action: ACTION.CHOOSE_MARKET_TYPE,\n                market_type_name,\n                tab_market_name,\n            };\n            break;\n        default:\n            return {};\n    }\n    return payload;\n};\n\nexport const getChartAnalyticsData = (state: keyof typeof STATE_TYPES, option: TStateChangeOption = {}) => {\n    const chart_type_form_events: string[] = [\n        STATE_TYPES.CHART_INTERVAL_CHANGE,\n        STATE_TYPES.CHART_MODE_TOGGLE,\n        STATE_TYPES.CHART_TYPE_CHANGE,\n    ];\n    const indicator_type_form_events: string[] = [\n        STATE_TYPES.INDICATOR_ADDED,\n        STATE_TYPES.INDICATOR_DELETED,\n        STATE_TYPES.INDICATOR_INFO_TOGGLE,\n        STATE_TYPES.INDICATOR_SEARCH,\n        STATE_TYPES.INDICATOR_SETTINGS_OPEN,\n        STATE_TYPES.INDICATORS_CLEAR_ALL,\n        STATE_TYPES.INDICATORS_MODAL_TOGGLE,\n    ];\n    const market_type_form_events: string[] = [\n        STATE_TYPES.FAVORITE_MARKETS_TOGGLE,\n        STATE_TYPES.MARKET_INFO_REDIRECT,\n        STATE_TYPES.MARKETS_LIST_TOGGLE,\n        STATE_TYPES.MARKET_SEARCH,\n        STATE_TYPES.SYMBOL_CHANGE,\n    ];\n    if (chart_type_form_events.includes(state)) return getChartTypeFormAnalyticsData(state, option);\n    if (indicator_type_form_events.includes(state)) return getIndicatorTypeFormAnalyticsData(state, option);\n    if (market_type_form_events.includes(state)) return getMarketTypeFormAnalyticsData(state, option);\n    return {};\n};\n","import * as Symbol from './Actions/symbol';\nimport {\n    WS,\n    cloneObject,\n    convertDurationLimit,\n    extractInfoFromShortcode,\n    findFirstOpenMarket,\n    getBarrierPipSize,\n    getMinPayout,\n    getPlatformSettings,\n    getPropertyValue,\n    getContractSubtype,\n    isBarrierSupported,\n    isAccumulatorContract,\n    isCryptocurrency,\n    isDesktop,\n    isEmptyObject,\n    isMarketClosed,\n    isMobile,\n    isTurbosContract,\n    isVanillaFxContract,\n    isVanillaContract,\n    pickDefaultSymbol,\n    resetEndTimeOnVolatilityIndices,\n    showDigitalOptionsUnavailableError,\n    showUnavailableLocationError,\n    formatMoney,\n    getCurrencyDisplayCode,\n    unsupported_contract_types_list,\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    hasBarrier,\n} from '@deriv/shared';\nimport { Analytics } from '@deriv/analytics';\nimport type { TEvents } from '@deriv/analytics';\nimport { localize } from '@deriv/translations';\nimport { getValidationRules, getMultiplierValidationRules } from 'Stores/Modules/Trading/Constants/validation-rules';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { isDigitContractType, isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport ServerTime from '_common/base/server_time';\nimport { processPurchase } from './Actions/purchase';\nimport { getAvailableContractTypes } from 'Modules/Trading/Helpers/contract-type';\nimport { getUpdatedTicksHistoryStats } from './Helpers/accumulator';\nimport { processTradeParams } from './Helpers/process';\nimport { action, computed, makeObservable, observable, override, reaction, runInAction, toJS, when } from 'mobx';\nimport { createProposalRequests, getProposalErrorField, getProposalInfo } from './Helpers/proposal';\nimport { getHoveredColor } from './Helpers/barrier-utils';\nimport BaseStore from '../../base-store';\nimport { TTextValueNumber, TTextValueStrings } from 'Types';\nimport { ChartBarrierStore } from '../SmartChart/chart-barrier-store';\nimport debounce from 'lodash.debounce';\nimport { setLimitOrderBarriers } from './Helpers/limit-orders';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport {\n    ActiveSymbols,\n    ActiveSymbolsRequest,\n    Buy,\n    BuyContractResponse,\n    History,\n    PriceProposalRequest,\n    PriceProposalResponse,\n    ServerTimeRequest,\n    TickSpotData,\n    TicksHistoryRequest,\n    TicksHistoryResponse,\n    TicksStreamResponse,\n    TradingTimesRequest,\n} from '@deriv/api-types';\nimport { STATE_TYPES, TPayload, getChartAnalyticsData } from './Helpers/chart';\n\ntype TBarriers = Array<\n    ChartBarrierStore & {\n        hideOffscreenBarrier?: boolean;\n        isSingleBarrier?: boolean;\n    }\n>;\ntype TChartLayout = {\n    adj: boolean;\n    aggregationType: string;\n    animation?: boolean;\n    candleWidth: number;\n    chartScale: string;\n    chartType: string;\n    crosshair: number;\n    extended: boolean;\n    flipped: boolean;\n    interval: number;\n    marketSessions: Partial<Record<string, boolean>>;\n    outliers: boolean;\n    panels: {\n        chart: {\n            chartName: string;\n            display: string;\n            index: number;\n            percent: number;\n            yAxis: {\n                name: string;\n                position: null;\n            };\n            yaxisLHS: string[];\n            yaxisRHS: string[];\n        };\n    };\n    periodicity: number;\n    previousMaxTicks?: number;\n    range: Partial<Record<string, unknown>>;\n    setSpan: Partial<Record<string, unknown>>;\n    studies?: Partial<Record<string, unknown>>;\n    symbols: [\n        {\n            interval: number;\n            periodicity: number;\n            setSpan: Partial<Record<string, unknown>>;\n            symbol: string;\n            symbolObject: ActiveSymbols[number];\n            timeUnit: string;\n        }\n    ];\n    timeUnit: string;\n    volumeUnderlay: boolean;\n};\ntype TChartStateChangeOption = { symbol: string | undefined; isClosed: boolean };\ntype TContractDataForGTM = Omit<Partial<PriceProposalRequest>, 'cancellation' | 'limit_order'> &\n    ReturnType<typeof getProposalInfo> & {\n        buy_price: number;\n    };\ntype TPrevChartLayout =\n    | (TChartLayout & {\n          isDone?: VoidFunction;\n          is_used?: boolean;\n      })\n    | null;\ntype TContractTypesList = {\n    [key: string]: {\n        name: string;\n        categories: TTextValueStrings[];\n    };\n};\ntype TDurationMinMax = {\n    [key: string]: { min: number; max: number };\n};\ntype TResponse<Req, Res extends { [key: string]: unknown }, K extends string> = Res & {\n    echo_req: Req;\n    error?: {\n        code: string;\n        message: string;\n        details?: Res[K] & { field: string };\n    };\n};\ntype TProposalInfo = {\n    [key: string]: ReturnType<typeof getProposalInfo>;\n};\ntype TStakeBoundary = Record<\n    string,\n    {\n        min_stake?: number;\n        max_stake?: number;\n    }\n>;\ntype TTicksHistoryResponse = TicksHistoryResponse | TicksStreamResponse;\ntype TToastBoxListItem = {\n    component: JSX.Element | null;\n    contract_types: TTextValueStrings[];\n    icon: string;\n    key: string;\n    label: string;\n};\ntype TToastBoxObject = {\n    key?: boolean;\n    buy_price?: string;\n    currency?: string;\n    contract_type?: string;\n    list?: Array<TToastBoxListItem | undefined>;\n};\ntype TBarriersData = Record<string, never> | { barrier: string; barrier_choices: string[] };\n\nconst store_name = 'trade_store';\nconst g_subscribers_map: Partial<Record<string, ReturnType<typeof WS.subscribeTicksHistory>>> = {}; // blame amin.m\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    is_trade_component_mounted = false;\n    is_purchase_enabled = false;\n    is_trade_enabled = false;\n    is_equal = 0;\n    has_equals_only = false;\n\n    // Underlying\n    symbol = '';\n    is_market_closed = false;\n    previous_symbol = '';\n    active_symbols: ActiveSymbols = [];\n\n    form_components: string[] = [];\n\n    // Contract Type\n    contract_expiry_type = '';\n    contract_start_type = '';\n    contract_type = '';\n    contract_types_list: TContractTypesList = {};\n    non_available_contract_types_list: TContractTypesList = {};\n    trade_types: { [key: string]: string } = {};\n\n    // Amount\n    amount = 10;\n    basis = '';\n    basis_list: Array<TTextValueStrings> = [];\n    currency = '';\n    stake_boundary: Partial<TStakeBoundary> = {};\n\n    // Duration\n    duration = 5;\n    duration_min_max: TDurationMinMax = {};\n    duration_unit = '';\n    duration_units_list: Array<TTextValueStrings> = [];\n    expiry_date: string | null = '';\n    expiry_epoch: number | string = '';\n    expiry_time: string | null = '';\n    expiry_type: string | null = 'duration';\n\n    // Barrier\n    barrier_1 = '';\n    barrier_2 = '';\n    barrier_count = 0;\n    main_barrier: ChartBarrierStore | null = null;\n    barriers: TBarriers = [];\n    hovered_barrier = '';\n    barrier_choices: string[] = [];\n\n    // Start Time\n    start_date = 0; // 0 refers to 'now'\n    start_dates_list: Array<{ text: string; value: number }> = [];\n    start_time: string | null = null;\n    sessions: Array<{ open: moment.Moment; close: moment.Moment }> = [];\n\n    market_open_times: string[] = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    market_close_times: string[] = [];\n\n    // Last Digit\n    last_digit = 5;\n    is_mobile_digit_view_selected = false;\n\n    // Purchase\n    proposal_info: TProposalInfo = {};\n    purchase_info: Partial<BuyContractResponse> = {};\n\n    // Chart loader observables\n    is_chart_loading?: boolean;\n    should_show_active_symbols_loading = false;\n\n    // Accumulator trade params\n    accumulator_range_list: number[] = [];\n    growth_rate = 0.03;\n    maximum_payout = 0;\n    maximum_ticks = 0;\n    ticks_history_stats: {\n        ticks_stayed_in?: number[];\n        last_tick_epoch?: number;\n    } = {};\n    tick_size_barrier = 0;\n\n    // Multiplier trade params\n    multiplier = 0;\n    multiplier_range_list: TTextValueNumber[] = [];\n    stop_loss?: string;\n    take_profit?: string;\n    has_stop_loss = false;\n    has_take_profit = false;\n    has_cancellation = false;\n    commission?: string | number;\n    cancellation_price?: number;\n    stop_out?: number;\n    expiration?: number;\n    hovered_contract_type?: string | null;\n    cancellation_duration = '60m';\n    cancellation_range_list: Array<TTextValueStrings> = [];\n    cached_multiplier_cancellation_list: Array<TTextValueStrings> = [];\n\n    // Turbos trade params\n    long_barriers: TBarriersData = {};\n    short_barriers: TBarriersData = {};\n\n    // Vanilla trade params\n    strike_price_choices: TBarriersData = {};\n\n    // Mobile\n    is_trade_params_expanded = true;\n\n    //Toastbox\n    contract_purchase_toast_box?: TToastBoxObject;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests: Record<string, Partial<PriceProposalRequest>> = {};\n    is_purchasing_contract = false;\n\n    initial_barriers?: { barrier_1: string; barrier_2: string };\n    is_initial_barrier_applied = false;\n    is_digits_widget_active = false;\n\n    should_skip_prepost_lifecycle = false;\n\n    constructor({ root_store }: { root_store: TCoreStores }) {\n        const local_storage_properties = [\n            'amount',\n            'currency',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'growth_rate',\n            'has_take_profit',\n            'has_stop_loss',\n            'has_cancellation',\n            'hovered_barrier',\n            'short_barriers',\n            'long_barriers',\n            'strike_price_choices',\n            'is_equal',\n            'last_digit',\n            'multiplier',\n            'start_date',\n            'start_time',\n            'stop_loss',\n            'take_profit',\n            'is_trade_params_expanded',\n        ];\n        const session_storage_properties = ['contract_type', 'symbol'];\n        super({\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        makeObservable(this, {\n            accumulator_range_list: observable,\n            active_symbols: observable,\n            amount: observable,\n            barrier_1: observable,\n            barrier_2: observable,\n            barrier_count: observable,\n            barrier_choices: observable,\n            barriers: observable,\n            basis_list: observable,\n            basis: observable,\n            cancellation_duration: observable,\n            cancellation_price: observable,\n            cancellation_range_list: observable,\n            cached_multiplier_cancellation_list: observable,\n            commission: observable,\n            contract_expiry_type: observable,\n            contract_start_type: observable,\n            contract_type: observable,\n            contract_types_list: observable,\n            currency: observable,\n            duration_min_max: observable,\n            duration_unit: observable,\n            duration_units_list: observable,\n            duration: observable,\n            expiration: observable,\n            expiry_date: observable,\n            expiry_epoch: observable,\n            expiry_time: observable,\n            expiry_type: observable,\n            form_components: observable,\n            growth_rate: observable,\n            has_cancellation: observable,\n            has_equals_only: observable,\n            has_open_accu_contract: computed,\n            has_stop_loss: observable,\n            has_take_profit: observable,\n            hovered_barrier: observable,\n            hovered_contract_type: observable,\n            is_accumulator: computed,\n            is_chart_loading: observable,\n            is_digits_widget_active: observable,\n            is_equal: observable,\n            is_market_closed: observable,\n            is_mobile_digit_view_selected: observable,\n            is_purchase_enabled: observable,\n            is_trade_component_mounted: observable,\n            is_trade_enabled: observable,\n            is_trade_params_expanded: observable,\n            is_turbos: computed,\n            last_digit: observable,\n            long_barriers: observable,\n            main_barrier: observable,\n            market_close_times: observable,\n            market_open_times: observable,\n            maximum_payout: observable,\n            maximum_ticks: observable,\n            multiplier_range_list: observable,\n            multiplier: observable,\n            non_available_contract_types_list: observable,\n            previous_symbol: observable,\n            proposal_info: observable.ref,\n            purchase_info: observable.ref,\n            setHoveredBarrier: action.bound,\n            sessions: observable,\n            setDefaultGrowthRate: action.bound,\n            short_barriers: observable,\n            should_show_active_symbols_loading: observable,\n            should_skip_prepost_lifecycle: observable,\n            stake_boundary: observable,\n            start_date: observable,\n            start_dates_list: observable,\n            start_time: observable,\n            strike_price_choices: observable,\n            stop_loss: observable,\n            stop_out: observable,\n            symbol: observable,\n            take_profit: observable,\n            tick_size_barrier: observable,\n            ticks_history_stats: observable,\n            trade_types: observable,\n            accountSwitcherListener: action.bound,\n            barrier_pipsize: computed,\n            barriers_flattened: computed,\n            changeDurationValidationRules: action.bound,\n            chartStateChange: action.bound,\n            clearContractPurchaseToastBox: action.bound,\n            clearContracts: action.bound,\n            clearLimitOrderBarriers: action.bound,\n            clearPurchaseInfo: action.bound,\n            clientInitListener: action.bound,\n            contract_purchase_toast_box: observable,\n            enablePurchase: action.bound,\n            exportLayout: action.bound,\n            forgetAllProposal: action.bound,\n            getFirstOpenMarket: action.bound,\n            has_alternative_source: computed,\n            initAccountCurrency: action.bound,\n            is_multiplier: computed,\n            is_symbol_in_active_symbols: computed,\n            is_synthetics_available: computed,\n            is_vanilla: computed,\n            is_vanilla_fx: computed,\n            loadActiveSymbols: action.bound,\n            logoutListener: action.bound,\n            main_barrier_flattened: computed,\n            networkStatusChangeListener: action.bound,\n            onAllowEqualsChange: action.bound,\n            onChange: action.bound,\n            onChangeMultiple: action.bound,\n            onChartBarrierChange: action.bound,\n            onHoverPurchase: action.bound,\n            onMount: action.bound,\n            onProposalResponse: action.bound,\n            onPurchase: action.bound,\n            onUnmount: override,\n            prepareTradeStore: action.bound,\n            preSwitchAccountListener: action.bound,\n            processPurchase: action.bound,\n            pushPurchaseDataToGtm: action.bound,\n            refresh: action.bound,\n            requestProposal: action.bound,\n            resetAccumulatorData: action.bound,\n            resetErrorServices: action.bound,\n            resetPreviousSymbol: action.bound,\n            setActiveSymbols: action.bound,\n            setBarrierChoices: action.bound,\n            setChartStatus: action.bound,\n            setContractPurchaseToastbox: action.bound,\n            setContractTypes: action.bound,\n            setDefaultSymbol: action.bound,\n            setIsTradeParamsExpanded: action.bound,\n            setIsDigitsWidgetActive: action.bound,\n            setMarketStatus: action.bound,\n            setMobileDigitView: action.bound,\n            setPreviousSymbol: action.bound,\n            setSkipPrePostLifecycle: action.bound,\n            setStakeBoundary: action.bound,\n            setTradeStatus: action.bound,\n            show_digits_stats: computed,\n            updateStore: action.bound,\n            updateSymbol: action.bound,\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            }\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            }\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n                this.setDefaultGrowthRate();\n                this.resetAccumulatorData();\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n        reaction(\n            () => [this.has_stop_loss, this.has_take_profit],\n            () => {\n                if (!this.has_stop_loss) {\n                    this.validation_errors.stop_loss = [];\n                }\n                if (!this.has_take_profit) {\n                    this.validation_errors.take_profit = [];\n                }\n            }\n        );\n        reaction(\n            () => [this.contract_type],\n            () => {\n                this.root_store.portfolio.setContractType(this.contract_type);\n                if (this.is_accumulator || this.is_multiplier || this.is_turbos) {\n                    // when switching back to Multiplier contract, re-apply Stop loss / Take profit validation rules\n                    Object.assign(this.validation_rules, getMultiplierValidationRules());\n                } else {\n                    // we need to remove these two validation rules on contract_type change\n                    // to be able to remove any existing Stop loss / Take profit validation errors\n                    delete this.validation_rules.stop_loss;\n                    delete this.validation_rules.take_profit;\n                }\n                this.resetAccumulatorData();\n            }\n        );\n        reaction(\n            () => this.root_store.common.current_language,\n            () => {\n                this.setValidationRules(getValidationRules());\n                this.changeDurationValidationRules();\n                if (!this.amount) {\n                    this.validateAllProperties();\n                }\n            }\n        );\n        when(\n            () => !!this.accumulator_range_list.length,\n            () => this.setDefaultGrowthRate()\n        );\n    }\n\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols.some(\n            symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1\n        );\n    }\n\n    get has_open_accu_contract() {\n        return (\n            this.is_accumulator &&\n            !!this.root_store.portfolio.open_accu_contract &&\n            !!this.root_store.portfolio.active_positions.find(\n                ({ contract_info, type }) => isAccumulatorContract(type) && contract_info.underlying === this.symbol\n            )\n        );\n    }\n\n    resetAccumulatorData() {\n        if (!isEmptyObject(this.root_store.contract_trade.accumulator_barriers_data)) {\n            this.root_store.contract_trade.clearAccumulatorBarriersData();\n        }\n    }\n\n    setDefaultGrowthRate() {\n        if (\n            this.is_accumulator &&\n            !this.accumulator_range_list.includes(this.growth_rate) &&\n            this.accumulator_range_list.length\n        ) {\n            this.growth_rate = this.accumulator_range_list[0];\n        }\n    }\n\n    setSkipPrePostLifecycle(should_skip: boolean) {\n        if (!!should_skip !== !!this.should_skip_prepost_lifecycle) {\n            // to skip assignment if no change is made\n            this.should_skip_prepost_lifecycle = should_skip;\n        }\n    }\n\n    setTradeStatus(status: boolean) {\n        this.is_trade_enabled = status;\n    }\n\n    refresh() {\n        this.forgetAllProposal();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        this.proposal_requests = {};\n    }\n\n    clearContracts = () => {\n        this.root_store.contract_trade.contracts = [];\n    };\n\n    async loadActiveSymbols(should_set_default_symbol = true, should_show_loading = true) {\n        this.should_show_active_symbols_loading = should_show_loading;\n\n        await this.setActiveSymbols();\n        await this.root_store.active_symbols.setActiveSymbols();\n        if (should_set_default_symbol) await this.setDefaultSymbol();\n\n        const r = await WS.storage.contractsFor(this.symbol);\n        if (['InvalidSymbol', 'InputValidationFailed'].includes(r.error?.code)) {\n            const symbol_to_update = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol: symbol_to_update });\n        }\n\n        runInAction(() => {\n            this.should_show_active_symbols_loading = false;\n        });\n    }\n\n    async setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.is_trade_enabled = false;\n\n            const symbol = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol });\n        }\n    }\n\n    async setActiveSymbols() {\n        const is_on_mf_account = this.root_store.client.landing_company_shortcode === 'maltainvest';\n        const is_logged_in = this.root_store.client.is_logged_in;\n        const clients_country = this.root_store.client.clients_country;\n        const showError = this.root_store.common.showError;\n\n        // To resolve infinite load for Belgium and Isle of man logout IPs\n        if (['be', 'im'].includes(clients_country) && !is_logged_in) {\n            showUnavailableLocationError(showError, is_logged_in);\n        }\n\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n\n        if (error) {\n            showError({ message: localize('Trading is unavailable at this time.') });\n            return;\n        }\n\n        if (!active_symbols?.length) {\n            await WS.wait('get_settings');\n            /*\n             * This logic is related to EU country checks\n             * Avoid moving this upward in the scope since mobx will lose reactivity\n             */\n            if (is_on_mf_account) {\n                showDigitalOptionsUnavailableError(showError, {\n                    text: localize(\n                        'We’re working to have this available for you soon. If you have another account, switch to that account to continue trading. You may add a Deriv MT5 Financial.'\n                    ),\n                    title: localize('{{platform_name_trader}} is not available for this account', {\n                        platform_name_trader: getPlatformSettings('trader').name,\n                    }),\n                    link: localize('Go to {{platform_name_mt5}} dashboard', {\n                        platform_name_mt5: getPlatformSettings('mt5').name,\n                    }),\n                });\n                return;\n            } else if (!is_on_mf_account) {\n                showUnavailableLocationError(showError, is_logged_in);\n            }\n            showUnavailableLocationError(showError, is_logged_in);\n        }\n        await this.processNewValuesAsync({ active_symbols });\n    }\n\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                const contract_categories = ContractType.getContractCategories();\n                this.processNewValuesAsync({\n                    ...(contract_categories as Pick<TradeStore, 'contract_types_list'> & {\n                        has_only_forward_starting_contracts: boolean;\n                    }),\n                    ...ContractType.getContractType(contract_categories.contract_types_list, this.contract_type),\n                });\n                this.processNewValuesAsync(ContractType.getContractValues(this));\n            });\n        }\n        this.root_store.common.setSelectedContractType(this.contract_type);\n        this.root_store.portfolio.setContractType(this.contract_type);\n    }\n\n    async prepareTradeStore(should_set_default_symbol = true) {\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n        await when(() => !this.root_store.client.is_populating_account_list);\n\n        // waits for `website_status` in order to set `stake_default` for the selected currency\n        await WS.wait('website_status');\n        await runInAction(async () => {\n            await this.processNewValuesAsync(\n                {\n                    // fallback to default currency if current logged-in client hasn't selected a currency yet\n                    currency: this.root_store.client.currency || this.root_store.client.default_currency,\n                },\n                true,\n                null,\n                false\n            );\n        });\n        await this.loadActiveSymbols(should_set_default_symbol);\n        await this.setContractTypes();\n        await this.processNewValuesAsync(\n            {\n                is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n            },\n            true,\n            null,\n            false\n        );\n    }\n\n    async onChangeMultiple(values: Partial<TradeStore>) {\n        Object.keys(values).forEach(name => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        await this.processNewValuesAsync({ ...values }, true); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n    }\n\n    async onChange(e: { target: { name: string; value: unknown } }) {\n        const { name, value } = e.target;\n        if (name === 'symbol' && value) {\n            // set trade params skeleton and chart loader to true until processNewValuesAsync resolves\n            this.setChartStatus(true);\n            // reset market close status\n            this.setMarketStatus(false);\n            this.is_trade_enabled = false;\n            // this.root_store.modules.contract_trade.contracts = [];\n            // TODO: Clear the contracts in contract-trade-store\n        } else if (name === 'currency') {\n            // Only allow the currency dropdown change if client is not logged in\n            if (!this.root_store.client.is_logged_in) {\n                this.root_store.client.selectCurrency(value as string);\n            }\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        await this.processNewValuesAsync(\n            { [name]: value },\n            true,\n            name === 'contract_type' ? { contract_type: this.contract_type } : {}, // refer to [Multiplier validation rules] below\n            true\n        ); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n        this.root_store.common.setSelectedContractType(this.contract_type);\n    }\n\n    setHoveredBarrier(hovered_value: string) {\n        this.hovered_barrier = hovered_value;\n    }\n\n    setPreviousSymbol(symbol: string) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    setIsTradeParamsExpanded(value: boolean) {\n        this.is_trade_params_expanded = value;\n    }\n\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        this.updateSymbol(this.symbol);\n\n        this.setChartStatus(false);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    onHoverPurchase(is_over: boolean, contract_type?: string) {\n        if (this.is_accumulator) return;\n        if (this.is_purchase_enabled && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(is_over, contract_type ?? '');\n        } else if (!is_over && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(false, contract_type ?? '');\n        }\n\n        this.hovered_contract_type = is_over ? contract_type : null;\n        setLimitOrderBarriers({\n            barriers: this.root_store.portfolio.barriers,\n            is_over,\n            contract_type,\n            contract_info: this.proposal_info[contract_type ?? ''],\n        });\n    }\n\n    clearLimitOrderBarriers() {\n        this.hovered_contract_type = null;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            is_over: false,\n        });\n    }\n\n    get barrier_pipsize() {\n        return getBarrierPipSize(this.barrier_1);\n    }\n\n    get main_barrier_flattened() {\n        const is_digit_trade_type = isDigitTradeType(this.contract_type);\n        return is_digit_trade_type ? null : toJS(this.main_barrier);\n    }\n\n    get barriers_flattened() {\n        return this.root_store.portfolio.barriers && toJS(this.root_store.portfolio.barriers);\n    }\n\n    setMainBarrier = (proposal_info: PriceProposalRequest) => {\n        if (!proposal_info) {\n            return;\n        }\n        const { contract_type, barrier, barrier2 } = proposal_info;\n        if (isBarrierSupported(contract_type)) {\n            // create barrier only when it's available in response\n            this.main_barrier = new ChartBarrierStore(\n                this.hovered_barrier || barrier,\n                barrier2,\n                this.onChartBarrierChange,\n                {\n                    color: this.hovered_barrier ? getHoveredColor(contract_type) : BARRIER_COLORS.BLUE,\n                    line_style: this.hovered_barrier && BARRIER_LINE_STYLES.DASHED,\n                    not_draggable: this.is_turbos || this.is_vanilla,\n                }\n            );\n        } else {\n            this.main_barrier = null;\n        }\n    };\n\n    onPurchase = debounce(this.processPurchase, 300);\n\n    processPurchase(proposal_id: string, price: string | number, type: string) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            this.is_purchasing_contract = true;\n            const is_tick_contract = this.duration_unit === 't';\n            processPurchase(proposal_id, price).then(\n                action((response: TResponse<Buy, BuyContractResponse, 'buy'>) => {\n                    if (!this.is_trade_component_mounted) {\n                        this.enablePurchase();\n                        this.is_purchasing_contract = false;\n                        return;\n                    }\n\n                    const last_digit = +this.last_digit;\n                    if (response.error) {\n                        // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                        this.disablePurchaseButtons();\n                        // invalidToken error will handle in socket-general.js\n                        if (response.error.code !== 'InvalidToken') {\n                            this.root_store.common.setServicesError({\n                                type: response.msg_type,\n                                ...response.error,\n                            });\n\n                            // Clear purchase info on mobile after toast box error disappears (mobile_toast_timeout = 3500)\n                            if (isMobile() && this.root_store.common?.services_error?.type === 'buy') {\n                                setTimeout(() => {\n                                    this.clearPurchaseInfo();\n                                    this.requestProposal();\n                                }, 3500);\n                            }\n                        }\n                    } else if (response.buy) {\n                        if (this.proposal_info[type] && this.proposal_info[type].id !== proposal_id) {\n                            throw new Error('Proposal ID does not match.');\n                        }\n                        const contract_data: TContractDataForGTM = {\n                            ...this.proposal_requests[type],\n                            ...this.proposal_info[type],\n                            buy_price: response.buy.buy_price,\n                        };\n                        const { contract_id, longcode, start_time } = response.buy;\n\n                        // toggle smartcharts to contract mode\n                        if (contract_id) {\n                            const shortcode = response.buy.shortcode;\n                            const { category, underlying } = extractInfoFromShortcode(shortcode);\n                            const is_digit_contract = isDigitContractType(category?.toUpperCase() ?? '');\n                            const contract_type = category?.toUpperCase();\n                            this.root_store.contract_trade.addContract({\n                                contract_id,\n                                start_time,\n                                longcode,\n                                underlying,\n                                barrier: is_digit_contract ? last_digit : null,\n                                contract_type,\n                                is_tick_contract,\n                            });\n                            this.root_store.portfolio.onBuyResponse({\n                                contract_id,\n                                longcode,\n                                contract_type,\n                            });\n                            // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                            // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                            // and then set the chart view to the start_time\n                            // draw the start time line and show longcode then mount contract\n                            // this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                            if (isDesktop()) {\n                                this.root_store.ui.openPositionsDrawer();\n                            }\n                            this.proposal_info = {};\n                            this.forgetAllProposal();\n                            this.purchase_info = response;\n                            this.proposal_requests = {};\n                            this.debouncedProposal();\n                            this.clearLimitOrderBarriers();\n                            this.pushPurchaseDataToGtm(contract_data);\n                            this.setContractPurchaseToastbox(response.buy);\n                            this.is_purchasing_contract = false;\n                            return;\n                        }\n                    }\n                    this.forgetAllProposal();\n                    this.purchase_info = response;\n                    this.enablePurchase();\n                    this.is_purchasing_contract = false;\n                })\n            );\n        }\n    }\n\n    enablePurchase() {\n        if (!this.root_store.client.is_unwelcome) {\n            this.is_purchase_enabled = true;\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, el => {\n            (el as HTMLButtonElement).classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, el => {\n            (el as HTMLDivElement).classList.add('trade-container__price-info--fade');\n        })();\n    };\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    updateStore(new_state: Partial<TradeStore>) {\n        Object.keys(cloneObject(new_state) || {}).forEach(key => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key as keyof this]) === JSON.stringify(new_state[key as keyof TradeStore])) {\n                delete new_state[key as keyof TradeStore];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key as 'currency'] = new_state[key as keyof TradeStore] as TradeStore['currency'];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values: Partial<TradeStore> = {},\n        is_changed_by_user = false,\n        obj_old_values: Partial<TradeStore> | null = {},\n        should_forget_first = true\n    ) {\n        // To switch to rise_fall_equal contract type when allow equal is checked on first page refresh or\n        // when switch back to Rise/Fall from another contract type i.e.\n        if (obj_new_values.contract_type && obj_new_values.contract_type === 'rise_fall' && !!this.is_equal) {\n            obj_new_values.contract_type = 'rise_fall_equal';\n        }\n        // when accumulator is selected, we need to change chart type to mountain and granularity to 0\n        // and we need to restore previous chart type and granularity when accumulator is unselected\n        const {\n            prev_chart_type,\n            prev_granularity,\n            chart_type,\n            granularity,\n            savePreviousChartMode,\n            updateChartType,\n            updateGranularity,\n        } = this.root_store.contract_trade || {};\n        if (obj_new_values.contract_type === 'accumulator') {\n            savePreviousChartMode(chart_type, granularity);\n            updateGranularity(0);\n            updateChartType(this.root_store.client.is_beta_chart ? 'line' : 'mountain');\n        } else if (\n            (obj_new_values.contract_type || obj_new_values.symbol) &&\n            prev_chart_type &&\n            prev_granularity &&\n            (prev_chart_type !== chart_type || prev_granularity !== granularity)\n        ) {\n            updateGranularity(prev_granularity);\n            updateChartType(prev_chart_type);\n            savePreviousChartMode('', null);\n        }\n\n        if (/\\bduration\\b/.test(Object.keys(obj_new_values) as unknown as string)) {\n            // TODO: fix this in input-field.jsx\n            if (typeof obj_new_values.duration === 'string') {\n                obj_new_values.duration = +obj_new_values.duration;\n            }\n        }\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) {\n            this.forgetAllProposal();\n            this.proposal_requests = {};\n        }\n        if (is_changed_by_user && /\\bcurrency\\b/.test(Object.keys(obj_new_values) as unknown as string)) {\n            const prev_currency = obj_old_values?.currency || this.currency;\n            const has_currency_changed = obj_new_values.currency !== prev_currency;\n\n            const should_reset_stake =\n                isCryptocurrency(obj_new_values.currency ?? '') ||\n                // For switch between fiat and crypto and vice versa\n                isCryptocurrency(obj_new_values.currency ?? '') !== isCryptocurrency(prev_currency);\n\n            if (has_currency_changed && should_reset_stake) {\n                obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency ?? '');\n            }\n            this.currency = obj_new_values.currency ?? '';\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol ?? '');\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol ?? ''));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (\n            is_changed_by_user ||\n            /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state) as unknown as string)\n        ) {\n            this.updateStore({\n                // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info: {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1 = '';\n                    this.barrier_2 = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            // TODO: handle barrier updates on proposal api\n            // const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n            await processTradeParams(this, new_state);\n\n            this.updateStore({\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n            if (/\\b(contract_type|currency)\\b/.test(Object.keys(new_state) as unknown as string)) {\n                this.validateAllProperties();\n            }\n            this.debouncedProposal();\n        }\n    }\n\n    get is_synthetics_available() {\n        return !!this.active_symbols?.find(item => item.market === 'synthetic_index');\n    }\n\n    get is_synthetics_trading_market_available() {\n        return !!this.active_symbols?.find(\n            item => item.market === 'synthetic_index' && !isMarketClosed(this.active_symbols, item.symbol)\n        );\n    }\n\n    get show_digits_stats() {\n        return isDigitTradeType(this.contract_type);\n    }\n\n    setMobileDigitView(bool: boolean) {\n        this.is_mobile_digit_view_selected = bool;\n    }\n\n    pushPurchaseDataToGtm(contract_data: TContractDataForGTM) {\n        const data = {\n            event: 'buy_contract',\n            bom_ui: 'new',\n            contract: {\n                amount: contract_data.amount,\n                barrier1: contract_data.barrier,\n                barrier2: contract_data.barrier2,\n                basis: contract_data.basis,\n                buy_price: contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency: contract_data.currency,\n                date_expiry: contract_data.date_expiry,\n                date_start: contract_data.date_start,\n                duration: contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout: contract_data.payout,\n                symbol: contract_data.symbol,\n            },\n            settings: {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                chart: {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type: this.root_store.contract_trade.chart_type,\n                    granularity: this.root_store.contract_trade.granularity,\n                },\n            },\n        };\n        this.root_store.gtm.pushDataLayer(data);\n    }\n\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    requestProposal() {\n        const requests = createProposalRequests(this);\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            this.forgetAllProposal();\n            if (this.is_accumulator) this.resetAccumulatorData();\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests as Record<string, Partial<PriceProposalRequest>>;\n            this.purchase_info = {};\n            Object.keys(this.proposal_requests).forEach(type => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    forgetAllProposal() {\n        const length = Object.keys(this.proposal_requests).length;\n        if (length > 0) WS.forgetAll('proposal');\n    }\n\n    setMarketStatus(status: boolean) {\n        this.is_market_closed = status;\n    }\n\n    onProposalResponse(response: TResponse<PriceProposalRequest, PriceProposalResponse, 'proposal'>) {\n        const { contract_type } = response.echo_req;\n        const prev_proposal_info = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        // add/update expiration or date_expiry for crypto indices from proposal\n        const date_expiry = response.proposal?.date_expiry;\n        this.expiry_epoch = date_expiry || this.expiry_epoch;\n\n        if (!response.error && !!date_expiry && this.is_crypto_multiplier) {\n            this.expiration = date_expiry;\n        }\n\n        this.proposal_info = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (this.is_multiplier && this.proposal_info && this.proposal_info.MULTUP) {\n            const { commission, cancellation, limit_order } = this.proposal_info.MULTUP;\n            // commission and cancellation.ask_price is the same for MULTUP/MULTDOWN\n            if (commission) {\n                this.commission = commission;\n            }\n            if (cancellation) {\n                this.cancellation_price = cancellation.ask_price;\n            }\n            this.stop_out = limit_order?.stop_out?.order_amount;\n        }\n        if (this.is_accumulator && this.proposal_info?.ACCU) {\n            const {\n                barrier_spot_distance,\n                maximum_ticks = 0,\n                ticks_stayed_in,\n                tick_size_barrier = 0,\n                last_tick_epoch,\n                maximum_payout = 0,\n                high_barrier,\n                low_barrier,\n                spot_time,\n            } = this.proposal_info.ACCU;\n            this.ticks_history_stats = getUpdatedTicksHistoryStats({\n                previous_ticks_history_stats: this.ticks_history_stats,\n                new_ticks_history_stats: ticks_stayed_in,\n                last_tick_epoch,\n            });\n            this.maximum_ticks = maximum_ticks;\n            this.maximum_payout = maximum_payout;\n            this.tick_size_barrier = tick_size_barrier;\n            const { updateAccumulatorBarriersData } = this.root_store.contract_trade || {};\n            if (updateAccumulatorBarriersData) {\n                updateAccumulatorBarriersData({\n                    accumulators_high_barrier: high_barrier,\n                    accumulators_low_barrier: low_barrier,\n                    barrier_spot_distance,\n                    current_spot_time: spot_time,\n                    underlying: this.symbol,\n                });\n            }\n        }\n\n        if (!this.main_barrier || this.main_barrier?.shade) {\n            this.setMainBarrier(response.echo_req);\n        }\n\n        if (this.hovered_contract_type === contract_type) {\n            setLimitOrderBarriers({\n                barriers: this.root_store.portfolio.barriers,\n                contract_info: this.proposal_info[this.hovered_contract_type ?? ''],\n                contract_type,\n                is_over: true,\n            });\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                this.setValidationErrorMessages(error_id, [response.error.message]);\n            }\n            // Commission for multipliers is normally set from proposal response.\n            // But when we change the multiplier and if it is invalid, we don't get the proposal response to set the commission. We only get error message.\n            // This is a work around to set the commission from error message.\n            if (this.is_multiplier) {\n                const { message, details } = response.error;\n                const commission_match = (message || '').match(/\\((\\d+\\.*\\d*)\\)/);\n                if (details?.field === 'stop_loss' && commission_match?.[1]) {\n                    this.commission = commission_match[1];\n                }\n            }\n            if (this.is_accumulator) this.resetAccumulatorData();\n\n            // Sometimes when we navigate fast, `forget_all` proposal is called immediately after proposal subscription calls.\n            // But, in the BE, `forget_all` proposal call is processed before the proposal subscriptions are registered. In this case, `forget_all` proposal doesn't forget the new subscriptions.\n            // So when we send new proposal subscription requests, we get `AlreadySubscribed` error.\n            // If we get an error message with code `AlreadySubscribed`, `forget_all` proposal will be called and all the existing subscriptions will be marked as complete in `deriv-api` and will subscribe to new proposals\n            if (response.error.code === 'AlreadySubscribed') {\n                this.refresh();\n\n                if (this.is_trade_component_mounted) {\n                    this.debouncedProposal();\n                }\n                return;\n            }\n\n            // Sometimes the initial barrier doesn't match with current barrier choices received from API.\n            // When this happens we want to populate the list of barrier choices to choose from since the value cannot be specified manually\n            if ((this.is_turbos || this.is_vanilla) && response.error.details?.barrier_choices) {\n                const { barrier_choices, max_stake, min_stake } = response.error.details;\n\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n                this.setBarrierChoices(barrier_choices as string[]);\n                if (!this.barrier_choices.includes(this.barrier_1)) {\n                    // Since on change of duration `proposal` API call is made which returns a new set of barrier values.\n                    // The new list is set and the mid value is assigned\n                    const index = Math.floor(this.barrier_choices.length / 2);\n                    this.barrier_1 = this.is_vanilla ? this.barrier_choices[index] : this.barrier_choices[0];\n                    this.onChange({\n                        target: {\n                            name: 'barrier_1',\n                            value: this.barrier_1,\n                        },\n                    });\n                }\n            }\n        } else {\n            this.validateAllProperties();\n            if (this.is_turbos || this.is_vanilla) {\n                const { max_stake, min_stake, barrier_choices } = response.proposal ?? {};\n                this.setBarrierChoices(barrier_choices as string[]);\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n            }\n        }\n\n        if (!this.is_purchasing_contract) {\n            this.enablePurchase();\n        }\n    }\n\n    onChartBarrierChange(barrier_1: string, barrier_2?: string) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: this.is_equal ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    updateSymbol(underlying: string) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name: 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        if (!this.validation_rules.duration) return;\n\n        const index = this.validation_rules.duration.rules?.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (Number(index) > -1 && this.validation_rules.duration.rules) {\n                this.validation_rules.duration.rules[Number(index)][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules?.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    async accountSwitcherListener() {\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false, false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols(true, false);\n        }\n\n        this.resetErrorServices();\n        await this.setContractTypes();\n        runInAction(async () => {\n            this.processNewValuesAsync(\n                { currency: this.root_store.client.currency || this.root_store.client.default_currency },\n                true,\n                { currency: this.currency },\n                false\n            );\n        });\n        return Promise.resolve();\n    }\n\n    preSwitchAccountListener() {\n        this.clearContracts();\n        this.is_trade_enabled = false;\n        return Promise.resolve();\n    }\n\n    async logoutListener() {\n        this.clearContracts();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols();\n        }\n        await this.setContractTypes();\n        this.is_trade_enabled = true;\n        this.debouncedProposal();\n    }\n\n    clientInitListener() {\n        this.initAccountCurrency(this.root_store.client.currency || this.root_store.client.default_currency);\n        return Promise.resolve();\n    }\n\n    networkStatusChangeListener(is_online: boolean) {\n        this.setTradeStatus(is_online);\n    }\n\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    onMount() {\n        if (this.is_trade_component_mounted && this.should_skip_prepost_lifecycle) {\n            return;\n        }\n        this.root_store.notifications.setShouldShowPopups(false);\n        this.onPreSwitchAccount(this.preSwitchAccountListener);\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.resetAccumulatorData();\n        this.onLogout(this.logoutListener);\n        this.onClientInit(this.clientInitListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        this.setChartStatus(true);\n        runInAction(async () => {\n            this.is_trade_component_mounted = true;\n            await this.prepareTradeStore();\n            this.root_store.notifications.setShouldShowPopups(true);\n        });\n    }\n\n    setChartStatus(status: boolean) {\n        this.is_chart_loading = status;\n    }\n\n    async initAccountCurrency(new_currency: string) {\n        if (this.currency === new_currency) return;\n\n        await this.processNewValuesAsync({ currency: new_currency }, true, { currency: this.currency }, false);\n        this.refresh();\n        this.debouncedProposal();\n    }\n\n    onUnmount() {\n        if (this.should_skip_prepost_lifecycle) {\n            return;\n        }\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.is_trade_component_mounted = false;\n        // TODO: Find a more elegant solution to unmount contract-trade-store\n        this.root_store.contract_trade.onUnmount();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.notifications.is_notifications_visible) {\n            this.root_store.notifications.toggleNotificationsModal();\n        }\n        if (this.prev_chart_layout) {\n            this.prev_chart_layout.is_used = false;\n        }\n        this.clearContracts();\n        this.resetAccumulatorData();\n        if (this.is_vanilla) {\n            this.setBarrierChoices([]);\n        }\n    }\n\n    prev_chart_layout: TPrevChartLayout = null;\n\n    get chart_layout() {\n        let layout = null;\n        if (this.prev_chart_layout && this.prev_chart_layout.is_used === false) {\n            layout = this.prev_chart_layout;\n        }\n        return layout;\n    }\n\n    get is_crypto_multiplier() {\n        return this.contract_type === 'multiplier' && this.symbol.startsWith('cry');\n    }\n\n    exportLayout(layout: TChartLayout) {\n        delete layout.previousMaxTicks; // TODO: fix it in smartcharts\n        this.prev_chart_layout = layout;\n        if (this.prev_chart_layout) {\n            this.prev_chart_layout.isDone = () => {\n                if (this.prev_chart_layout) this.prev_chart_layout.is_used = true;\n                this.setChartStatus(false);\n            };\n        }\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (req: TicksHistoryRequest, callback: (response: TTicksHistoryResponse) => void) => {\n        const passthrough_callback = (...args: [TTicksHistoryResponse]) => {\n            callback(...args);\n            if (this.is_accumulator) {\n                let current_spot_data = {};\n                if ('tick' in args[0]) {\n                    const { epoch, quote, symbol } = args[0].tick as TickSpotData;\n                    if (this.symbol !== symbol) return;\n                    current_spot_data = {\n                        current_spot: quote,\n                        current_spot_time: epoch,\n                    };\n                } else if ('history' in args[0]) {\n                    const { prices, times } = args[0].history as History;\n                    const symbol = args[0].echo_req.ticks_history;\n                    if (this.symbol !== symbol) return;\n                    current_spot_data = {\n                        current_spot: prices?.[prices?.length - 1],\n                        current_spot_time: times?.[times?.length - 1],\n                        prev_spot_time: times?.[times?.length - 2],\n                    };\n                } else {\n                    return;\n                }\n                this.root_store.contract_trade.updateAccumulatorBarriersData(current_spot_data);\n            }\n        };\n        if (req.subscribe === 1) {\n            const key = JSON.stringify(req);\n            const subscriber = WS.subscribeTicksHistory(req, passthrough_callback);\n            g_subscribers_map[key] = subscriber;\n        }\n    };\n\n    wsForget = (req: TicksHistoryRequest) => {\n        const key = JSON.stringify(req);\n        if (g_subscribers_map[key]) {\n            g_subscribers_map[key]?.unsubscribe();\n            delete g_subscribers_map[key];\n        }\n        // WS.forget('ticks_history', callback, match);\n    };\n\n    wsForgetStream = (stream_id: string) => {\n        WS.forgetStream(stream_id);\n    };\n\n    wsSendRequest = (req: TradingTimesRequest | ActiveSymbolsRequest | ServerTimeRequest) => {\n        if ('time' in req) {\n            return ServerTime.timePromise().then(server_time => {\n                if (server_time) {\n                    return {\n                        msg_type: 'time',\n                        time: server_time.unix(),\n                    };\n                }\n                return WS.time();\n            });\n        }\n        if ('active_symbols' in req) {\n            if (this.root_store.client.is_logged_in) {\n                return WS.authorized.activeSymbols('brief');\n            }\n            return WS.activeSymbols('brief');\n        }\n        if ('trading_times' in req) {\n            return WS.tradingTimes(req.trading_times);\n        }\n        return WS.storage.send(req);\n    };\n\n    chartStateChange(state: string, option?: TChartStateChangeOption) {\n        if (\n            state === STATE_TYPES.MARKET_STATE_CHANGE &&\n            this.is_trade_component_mounted &&\n            option?.isClosed &&\n            option.isClosed !== this.is_market_closed\n        ) {\n            this.prepareTradeStore(false);\n        }\n        const { data, event_type } = getChartAnalyticsData(state as keyof typeof STATE_TYPES, option) as TPayload;\n        if (data) {\n            Analytics.trackEvent(event_type, {\n                ...data,\n                action: data.action as TEvents['ce_indicators_types_form']['action'],\n                device_type: isMobile() ? 'mobile' : 'desktop',\n                form_name: 'default',\n            });\n        }\n    }\n\n    get has_alternative_source() {\n        return this.is_multiplier && !!this.hovered_contract_type;\n    }\n\n    get has_barrier() {\n        return hasBarrier(this.contract_type);\n    }\n\n    get is_accumulator() {\n        return this.contract_type === 'accumulator';\n    }\n\n    get is_multiplier() {\n        return this.contract_type === 'multiplier';\n    }\n\n    get is_turbos() {\n        return isTurbosContract(this.contract_type);\n    }\n\n    get is_vanilla() {\n        return isVanillaContract(this.contract_type);\n    }\n\n    get is_vanilla_fx() {\n        return isVanillaFxContract(this.contract_type, this.symbol);\n    }\n\n    setContractPurchaseToastbox(response: Buy) {\n        const list = getAvailableContractTypes(\n            this.contract_types_list,\n            unsupported_contract_types_list\n        ) as Array<TToastBoxListItem>;\n\n        this.contract_purchase_toast_box = {\n            key: true,\n            buy_price: formatMoney(this.root_store.client.currency, response.buy_price, true, 0, 0),\n            contract_type: this.contract_type,\n            currency: getCurrencyDisplayCode(this.root_store.client.currency),\n            list,\n        };\n    }\n\n    clearContractPurchaseToastBox() {\n        this.contract_purchase_toast_box = undefined;\n    }\n\n    async getFirstOpenMarket(markets_to_search: string[]) {\n        if (this.active_symbols?.length) {\n            return findFirstOpenMarket(this.active_symbols, markets_to_search);\n        }\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n        if (error) {\n            this.root_store.common.showError({ message: localize('Trading is unavailable at this time.') });\n            return undefined;\n        }\n        return findFirstOpenMarket(active_symbols, markets_to_search);\n    }\n\n    setStakeBoundary(type: string, min_stake?: number, max_stake?: number) {\n        if (min_stake && max_stake) this.stake_boundary[type] = { min_stake, max_stake };\n    }\n\n    setBarrierChoices(barrier_choices: string[]) {\n        this.barrier_choices = barrier_choices ?? [];\n        if (this.is_turbos) {\n            const stored_barriers_data = { barrier: this.barrier_1, barrier_choices };\n            if (getContractSubtype(this.contract_type) === 'Long') {\n                this.long_barriers = stored_barriers_data;\n            } else {\n                this.short_barriers = stored_barriers_data;\n            }\n        }\n        if (this.is_vanilla) {\n            this.strike_price_choices = { barrier: this.barrier_1, barrier_choices };\n        }\n    }\n\n    setIsDigitsWidgetActive(is_active: boolean) {\n        this.is_digits_widget_active = is_active;\n    }\n}\n","import TradeStore from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store, core_store) {\n        this.cashier = core_store.modules.cashier;\n        this.trade = new TradeStore({ root_store });\n    }\n}\n","import { TCoreStores } from '@deriv/stores/types';\nimport ModulesStore from './Modules';\n\nexport default class RootStore {\n    client: TCoreStores['client'];\n    common: TCoreStores['common'];\n    modules: ModulesStore;\n    ui: TCoreStores['ui'];\n    gtm: TCoreStores['gtm'];\n    notifications: TCoreStores['notifications'];\n    contract_replay: TCoreStores['contract_replay'];\n    contract_trade: TCoreStores['contract_trade'];\n    portfolio: TCoreStores['portfolio'];\n    chart_barrier_store: TCoreStores['chart_barrier_store'];\n    active_symbols: TCoreStores['active_symbols'];\n\n    constructor(core_store: TCoreStores) {\n        this.client = core_store.client;\n        this.common = core_store.common;\n        this.modules = new ModulesStore(this, core_store);\n        this.ui = core_store.ui;\n        this.gtm = core_store.gtm;\n        this.notifications = core_store.notifications;\n        this.contract_replay = core_store.contract_replay;\n        this.contract_trade = core_store.contract_trade;\n        this.portfolio = core_store.portfolio;\n        this.chart_barrier_store = core_store.chart_barrier_store;\n        this.active_symbols = core_store.active_symbols;\n    }\n}\n","import { configure } from 'mobx';\nimport RootStore from 'Stores';\nimport { setWebsocket } from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\n\nconfigure({ enforceActions: 'observed' });\n\nlet root_store;\n\nconst initStore = (core_store, websocket) => {\n    if (root_store) return root_store;\n\n    ServerTime.init(core_store.common);\n    setWebsocket(websocket);\n    root_store = new RootStore(core_store);\n\n    return root_store;\n};\n\nexport default initStore;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport Routes from 'App/Containers/Routes/routes.jsx';\nimport TradeHeaderExtensions from 'App/Containers/trade-header-extensions';\nimport TradeFooterExtensions from 'App/Containers/trade-footer-extensions';\nimport TradeSettingsExtensions from 'App/Containers/trade-settings-extensions';\nimport { NetworkStatusToastErrorPopup } from 'Modules/Trading/Containers/toast-popup';\nimport initStore from './init-store';\nimport 'Sass/app.scss';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport TraderProviders from '../trader-providers';\n\ntype Apptypes = {\n    passthrough: {\n        root_store: TCoreStores;\n        WS: unknown;\n    };\n};\n\nconst TradeModals = Loadable({\n    loader: () => import(/* webpackChunkName: \"trade-modals\", webpackPrefetch: true */ './Containers/Modals'),\n    loading: () => null,\n});\n\nconst App = ({ passthrough }: Apptypes) => {\n    const root_store = initStore(passthrough.root_store, passthrough.WS);\n    React.useEffect(() => {\n        return () => root_store.ui.setPromptHandler(false);\n    }, [root_store]);\n\n    return (\n        <TraderProviders store={root_store}>\n            <Routes />\n            <TradeModals />\n            <NetworkStatusToastErrorPopup />\n            <TradeHeaderExtensions store={root_store} />\n            <TradeFooterExtensions />\n            <TradeSettingsExtensions store={root_store} />\n        </TraderProviders>\n    );\n};\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype TTicksHistoryCounter = {\n    has_progress_dots: boolean;\n    progress_dots_testid?: string;\n    should_emphasize_last_counter?: boolean;\n    ticks_history_counter_testid?: string;\n    value: number;\n};\n\nconst TicksHistoryCounter = ({\n    has_progress_dots,\n    progress_dots_testid,\n    should_emphasize_last_counter,\n    ticks_history_counter_testid,\n    value,\n}: TTicksHistoryCounter) => {\n    const should_highlight_last_counter = should_emphasize_last_counter && has_progress_dots && value === 0;\n    return (\n        <div\n            data-testid={ticks_history_counter_testid}\n            className={classNames('accumulators-stats__history-counter', {\n                'accumulators-stats__history-counter--emphasized': should_highlight_last_counter,\n            })}\n        >\n            {value}\n            {has_progress_dots && (\n                <div className='accumulators-stats__progress-dots' data-testid={progress_dots_testid}>\n                    {[1, 2, 3].map(dot => {\n                        return <span key={`ticks-dot-counter${dot}`} className={`dot-${dot}`} />;\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default React.memo(TicksHistoryCounter);\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport TicksHistoryCounter from './ticks-history-counter';\n\ntype TExpandedTicksHistoryProps = {\n    history_text_size: string;\n    rows: number[][];\n};\n\nconst ExpandedTicksHistory = ({ history_text_size, rows }: TExpandedTicksHistoryProps) => (\n    <Text size={history_text_size} className='accumulators-stats__history--expanded'>\n        {rows.map((row, i) => (\n            <div\n                key={i.toString() + row[0]}\n                data-testid='dt_accu_stats_history_row'\n                className='accumulators-stats__row'\n            >\n                {row.map((counter, idx) => (\n                    <TicksHistoryCounter\n                        ticks_history_counter_testid='dt_accu_stats_history_counter'\n                        key={idx.toString() + counter}\n                        value={counter}\n                        has_progress_dots={i === 0 && idx === 0}\n                    />\n                ))}\n            </div>\n        ))}\n    </Text>\n);\n\nexport default React.memo(ExpandedTicksHistory);\n","import React from 'react';\nimport { Icon, Loading, Modal, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getUrlBase, isMobile } from '@deriv/shared';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\n\ntype TAccumulatorsStatsManualModal = {\n    icon_classname: string;\n    is_dark_theme?: boolean;\n    is_manual_open: boolean;\n    title: string;\n    toggleManual: () => void;\n};\n\nconst AccumulatorsStatsManualModal = ({\n    icon_classname,\n    is_dark_theme,\n    is_manual_open,\n    title,\n    toggleManual,\n}: TAccumulatorsStatsManualModal) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const is_mobile = isMobile();\n    // memoize file paths for videos and open the modal only after we get them\n    const getVideoSource = React.useCallback(\n        (extension: string) => {\n            return getUrlBase(\n                `/public/videos/accumulators_manual_${is_mobile ? 'mobile' : 'desktop'}${\n                    is_dark_theme ? '_dark' : ''\n                }.${extension}`\n            );\n        },\n        [is_mobile, is_dark_theme]\n    );\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), [getVideoSource]);\n    const webm_src = React.useMemo(() => getVideoSource('webm'), [getVideoSource]);\n\n    return (\n        <React.Fragment>\n            <Icon\n                icon='IcInfoOutline'\n                onClick={toggleManual}\n                size={16}\n                className={icon_classname}\n                data_testid='dt_ic_info_icon'\n            />\n            <Modal\n                is_open={is_manual_open && !!mp4_src && !!webm_src}\n                should_header_stick_body={false}\n                title={title}\n                toggleModal={toggleManual}\n                width={is_mobile ? '328px' : '596px'}\n                className='accumulators-stats-manual-modal'\n            >\n                <Modal.Body className='accumulators-stats-modal-body'>\n                    <div className='accumulators-stats-modal-body__video'>\n                        {is_loading && <Loading is_fullscreen={false} />}\n                        <video\n                            autoPlay\n                            data-testid='dt_accumulators_stats_manual_video'\n                            loop\n                            onLoadedData={() => setIsLoading(false)}\n                            playsInline\n                            preload='auto'\n                            width={is_mobile ? 296 : 563}\n                        >\n                            {/* a browser will select a source with extension it recognizes */}\n                            <source src={mp4_src} type='video/mp4' />\n                            <source src={webm_src} type='video/webm' />\n                            {localize('Unfortunately, your browser does not support the video.')}\n                        </video>\n                    </div>\n                    <Text\n                        as='p'\n                        size={is_mobile ? 'xs' : 's'}\n                        color='prominent'\n                        className='accumulators-stats-modal-body__text'\n                    >\n                        {localize(\n                            'Stats show the history of consecutive tick counts, i.e. the number of ticks the price remained within range continuously.'\n                        )}\n                    </Text>\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nexport { AccumulatorsStatsManualModal };\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, Icon, MobileDialog, MobileWrapper, Text } from '@deriv/components';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ExpandedTicksHistory from './expanded-ticks-history';\nimport TicksHistoryCounter from './ticks-history-counter';\nimport { AccumulatorsStatsManualModal } from './accumulators-stats-manual-modal';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TAccumulatorStats = {\n    is_expandable?: boolean;\n};\nexport const ROW_SIZES = {\n    DESKTOP_COLLAPSED: 10,\n    DESKTOP_EXPANDED: 10,\n    MOBILE_COLLAPSED: 15,\n    MOBILE_EXPANDED: 5,\n};\n\nconst AccumulatorsStats = observer(({ is_expandable = true }: TAccumulatorStats) => {\n    const { ui } = useStore();\n    const { ticks_history_stats = {} } = useTraderStore();\n    const { is_dark_mode_on: is_dark_theme } = ui;\n\n    const [is_collapsed, setIsCollapsed] = React.useState(true);\n    const [is_manual_open, setIsManualOpen] = React.useState(false);\n    const widget_title = localize('Stats');\n    const ticks_history = ticks_history_stats?.ticks_stayed_in ?? [];\n    const history_text_size = isDesktop() || !is_collapsed ? 'xxs' : 'xxxs';\n\n    const rows = ticks_history.reduce((acc: number[][], _el, index) => {\n        const desktop_row_size = is_collapsed ? ROW_SIZES.DESKTOP_COLLAPSED : ROW_SIZES.DESKTOP_EXPANDED;\n        const mobile_row_size = is_collapsed ? ROW_SIZES.MOBILE_COLLAPSED : ROW_SIZES.MOBILE_EXPANDED;\n        const row_size = isDesktop() ? desktop_row_size : mobile_row_size;\n        if (index % row_size === 0) {\n            acc.push(ticks_history.slice(index, index + row_size));\n        }\n        return acc;\n    }, []);\n\n    if (!ticks_history.length) return null;\n\n    return (\n        <div className='accumulators-stats'>\n            <div className={classNames('accumulators-stats__container--collapsed')}>\n                <div className='accumulators-stats__title'>\n                    <AccumulatorsStatsManualModal\n                        is_dark_theme={is_dark_theme}\n                        icon_classname='info'\n                        is_manual_open={is_manual_open}\n                        title={widget_title}\n                        toggleManual={() => setIsManualOpen(!is_manual_open)}\n                    />\n                    <Text weight='bold' size={isMobile() ? 'xxxs' : 'xxs'} className='accumulators-stats__title-text'>\n                        {widget_title}\n                    </Text>\n                </div>\n                <Text size={history_text_size} className='accumulators-stats__history'>\n                    {!is_collapsed ? (\n                        <div className='accumulators-stats__history-heading'>{localize('Number of ticks')}</div>\n                    ) : (\n                        rows[0]?.map((el, i) => (\n                            <TicksHistoryCounter\n                                ticks_history_counter_testid='dt_accu_stats_history_counter'\n                                key={i}\n                                value={el}\n                                has_progress_dots={i === 0}\n                            />\n                        ))\n                    )}\n                </Text>\n            </div>\n            {is_expandable && !is_collapsed && (\n                <React.Fragment>\n                    <DesktopWrapper>\n                        <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <MobileDialog\n                            onClose={() => setIsCollapsed(!is_collapsed)}\n                            portal_element_id='modal_root'\n                            title={widget_title}\n                            visible={!is_collapsed}\n                            wrapper_classname='accumulators-stats'\n                        >\n                            <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                        </MobileDialog>\n                    </MobileWrapper>\n                </React.Fragment>\n            )}\n            {is_expandable && (\n                <Icon\n                    icon={is_collapsed ? 'IcArrowUp' : 'IcArrowDown'}\n                    onClick={() => setIsCollapsed(!is_collapsed)}\n                    className='accordion-toggle-arrow'\n                    data_testid='dt_accordion-toggle-arrow'\n                />\n            )}\n        </div>\n    );\n});\n\nexport default AccumulatorsStats;\n","import AccumulatorsStats from './accumulators-stats';\n\nexport default AccumulatorsStats;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TDigit = {\n    is_latest?: boolean;\n    is_lost?: boolean;\n    is_selected?: boolean;\n    is_won?: boolean;\n    percentage: number | null;\n    value: number;\n};\n\nconst Digit = ({ is_latest, is_lost, is_selected, is_won, percentage, value }: TDigit) => {\n    const display_percentage = percentage && !isNaN(percentage) ? parseFloat(percentage.toFixed(1)) : null;\n    return (\n        <React.Fragment>\n            <span\n                className={classNames('digits__digit-value', {\n                    'digits__digit-value--latest': is_latest,\n                    'digits__digit-value--selected': is_selected,\n                    'digits__digit-value--win': is_won && is_latest,\n                    'digits__digit-value--loss': is_lost && is_latest,\n                })}\n            >\n                <i\n                    className={classNames('digits__digit-display-value', {\n                        'digits__digit-display-value--no-stats': !display_percentage,\n                    })}\n                >\n                    {value}\n                </i>\n                {!!display_percentage && <i className='digits__digit-display-percentage'>{display_percentage}%</i>}\n            </span>\n        </React.Fragment>\n    );\n};\n\nexport default Digit;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Text } from '@deriv/components';\n\ntype TDigitSpot = {\n    current_spot?: string | null;\n    is_selected_winning?: boolean;\n    is_lost?: boolean;\n    is_won?: boolean;\n};\n\nconst DigitSpot = ({ current_spot, is_selected_winning, is_lost, is_won }: TDigitSpot) => (\n    <React.Fragment>\n        <Text\n            size='xs'\n            align='center'\n            weight='bold'\n            className='digits__digit-spot-value'\n            data-testid='dt_digits_digit_spot_value'\n        >\n            {current_spot?.slice(0, -1)}\n        </Text>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--selected-win': is_selected_winning,\n                'digits__digit-spot-last--win': is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n            data-testid='dt_digits_digit_spot_last'\n        >\n            {current_spot?.slice(-1)}\n        </span>\n    </React.Fragment>\n);\n\nexport default DigitSpot;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TLastDigitStat = {\n    is_max: boolean | null;\n    is_min: boolean | null;\n    is_selected?: boolean;\n    percentage: number | null;\n};\n\nconst LastDigitStat = ({ is_max, is_min, is_selected, percentage }: TLastDigitStat) => {\n    // interpolate color opacity within 7.5 to 12.5 range\n    let opacity = ((percentage ?? 0) - 10) / 4;\n    opacity = Math.min(Math.max(opacity, -1), +1);\n    opacity = ((opacity + 1) / 2) * 0.85 + 0.15;\n    const w = 339.292;\n    let p = (20 * (percentage ?? 0) - 102) / 3 / 100;\n    p = Math.max(Math.min(p, 0.66), 0.06);\n\n    return (\n        <div\n            className={classNames('digits__pie-container', {\n                'digits__pie-container--selected': is_selected,\n            })}\n        >\n            <svg className='digits__pie-progress' width='120' height='120' viewBox='0 0 120 120'>\n                <circle\n                    className='progress__bg'\n                    cx='60'\n                    cy='60'\n                    r='54'\n                    fill='none'\n                    stroke='#E8EEFC'\n                    strokeWidth='12'\n                    data-testid='dt_progress_bg'\n                />\n                {percentage && (\n                    <circle\n                        className={classNames('progress__value', {\n                            'progress__value--is-max': is_max,\n                            'progress__value--is-min': is_min,\n                        })}\n                        cx='60'\n                        cy='60'\n                        r='54'\n                        fill='none'\n                        strokeOpacity={is_max || is_min ? 1 : opacity}\n                        strokeWidth='12'\n                        strokeDasharray={[w * p, w * (1 - p)].join(' ')}\n                        // strokeDashoffset={(w * (1 - (0 * 3.5 * percentage / 100)))}\n                        strokeDashoffset={w * ((p + 1) / 2)}\n                        data-testid='dt_progress_value'\n                    />\n                )}\n            </svg>\n        </div>\n    );\n};\n\nexport default LastDigitStat;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { DesktopWrapper } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { Bounce } from 'App/Components/Animations';\nimport Digit from './digit';\nimport DigitSpot from './digit-spot';\nimport LastDigitStat from './last-digit-stat';\nimport { ProposalOpenContract } from '@deriv/api-types';\n\ntype TDigitDisplay = Pick<React.ComponentProps<typeof DigitSpot>, 'is_lost' | 'is_won'> &\n    Pick<React.ComponentProps<typeof Digit>, 'is_lost' | 'is_won'> &\n    Pick<React.ComponentProps<typeof LastDigitStat>, 'is_max' | 'is_min'> & {\n        barrier: number | null;\n        is_digit_contract?: boolean;\n        has_entry_spot: boolean;\n        onSelect: ((digit_value: number) => void) | null;\n        latest_digit: {\n            digit: number | null;\n            spot: string | null;\n        };\n        selected_digit?: number;\n        status: ProposalOpenContract['status'];\n        stats?: number | null;\n        value: number;\n        onLastDigitSpot?: (value: {\n            spot: TDigitDisplay['latest_digit']['spot'];\n            is_lost: TDigitDisplay['is_lost'];\n            is_selected_winning: boolean;\n            is_latest: boolean;\n            is_won: TDigitDisplay['is_won'];\n        }) => void;\n    };\nconst DigitDisplay = ({\n    barrier,\n    is_digit_contract,\n    has_entry_spot,\n    is_lost,\n    is_max,\n    is_min,\n    is_won,\n    onSelect,\n    latest_digit,\n    selected_digit,\n    status,\n    stats,\n    value,\n    onLastDigitSpot,\n}: TDigitDisplay) => {\n    const { digit, spot } = latest_digit;\n    const is_latest = value === digit;\n    const is_selected = value === barrier;\n    const is_selected_winning = digit === barrier;\n    const percentage = stats ? (stats * 100) / 1000 : null;\n\n    React.useEffect(() => {\n        if (onLastDigitSpot) {\n            onLastDigitSpot({ spot, is_lost, is_selected_winning, is_latest, is_won });\n        }\n    }, [latest_digit, spot, barrier, value, is_lost, is_selected_winning, is_latest, is_won, onLastDigitSpot]);\n\n    const is_digit_selectable = isMobile() && typeof onSelect === 'function' && !status;\n    const is_digit_selected = isMobile() && value === selected_digit && !status;\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--latest': is_latest,\n                'digits__digit--win': is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n                'digits__digit--is-selectable': is_digit_selectable,\n                'digits__digit--is-selected': is_digit_selected,\n            })}\n            onClick={() => {\n                if (!is_digit_selectable) return;\n                onSelect(value);\n            }}\n        >\n            <LastDigitStat is_min={is_min} is_max={is_max} is_selected={is_selected} percentage={percentage} />\n            <DesktopWrapper>\n                <Bounce\n                    is_visible={!!(is_digit_contract && is_latest && spot && status && has_entry_spot)}\n                    className='digits__digit-spot'\n                    keyname='digits__digit-spot'\n                >\n                    <DigitSpot\n                        current_spot={spot}\n                        is_lost={is_lost}\n                        is_selected_winning={is_selected_winning}\n                        is_won={is_won}\n                    />\n                </Bounce>\n            </DesktopWrapper>\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_selected={is_selected}\n                is_won={is_won}\n                percentage={percentage}\n                value={value}\n            />\n        </div>\n    );\n};\n\nexport default observer(DigitDisplay);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\n\ntype TLastDigitPointer = {\n    is_lost?: boolean;\n    is_trade_page?: boolean;\n    is_won?: boolean;\n    position: {\n        left: number;\n        top: number;\n    };\n};\n\nconst LastDigitPointer = ({ is_lost, is_trade_page, is_won, position }: TLastDigitPointer) => (\n    <React.Fragment>\n        {!!position && (\n            <span\n                className='digits__pointer'\n                style={{ transform: `translate3d(calc(${position.left}px), ${position.top}px, 0px)` }}\n            >\n                <Icon\n                    icon='IcProfit'\n                    className={classNames('digits__icon', {\n                        'digits__icon--win': is_won && !is_trade_page,\n                        'digits__icon--loss': is_lost && !is_trade_page,\n                    })}\n                    color={is_won ? 'green' : 'red'}\n                    custom_color={!(is_won || is_lost) ? 'var(--brand-orange)' : undefined}\n                />\n            </span>\n        )}\n    </React.Fragment>\n);\n\nexport default LastDigitPointer;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport DigitDisplay from './digit-display';\nimport LastDigitPointer from './last-digit-pointer';\nimport { ProposalOpenContract, TicksStreamResponse } from '@deriv/api-types';\n\ntype TLastDigitPrediction = Pick<\n    React.ComponentProps<typeof DigitDisplay>,\n    'barrier' | 'is_digit_contract' | 'has_entry_spot' | 'onLastDigitSpot'\n> & {\n    contract_type?: string;\n    digits?: number[];\n    digits_info: { [key: string]: { digit: number; spot: string } };\n    dimension: number;\n    is_ended?: boolean;\n    is_trade_page?: boolean;\n    onDigitChange?: (event: { target: { name: string; value: number } }) => void;\n    selected_digit?: number;\n    status?: ProposalOpenContract['status'];\n    tick?: TicksStreamResponse['tick'];\n    trade_type?: string;\n};\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\n\nconst LastDigitPrediction = ({\n    barrier,\n    contract_type,\n    digits,\n    digits_info,\n    dimension,\n    is_digit_contract,\n    has_entry_spot,\n    is_ended,\n    is_trade_page,\n    onDigitChange,\n    onLastDigitSpot,\n    selected_digit,\n    status,\n    tick,\n    trade_type,\n}: TLastDigitPrediction) => {\n    const [digit_offset] = React.useState<Record<number, Record<'left' | 'top', number>>>({\n        0: { left: 6, top: 0 },\n        1: { left: 6 + dimension * 1, top: 0 },\n        2: { left: 6 + dimension * 2, top: 0 },\n        3: { left: 6 + dimension * 3, top: 0 },\n        4: { left: 6 + dimension * 4, top: 0 },\n        5: { left: 6 + dimension * 5, top: 0 },\n        6: { left: 6 + dimension * 6, top: 0 },\n        7: { left: 6 + dimension * 7, top: 0 },\n        8: { left: 6 + dimension * 8, top: 0 },\n        9: { left: 6 + dimension * 9, top: 0 },\n    });\n\n    const [digit_offset_mobile] = React.useState<Record<number, Record<'left' | 'top', number>>>({\n        0: { left: 6, top: -60 },\n        1: { left: 6 + dimension * 1, top: -60 },\n        2: { left: 6 + dimension * 2, top: -60 },\n        3: { left: 6 + dimension * 3, top: -60 },\n        4: { left: 6 + dimension * 4, top: -60 },\n        5: { left: 6 + dimension * 0, top: 8 },\n        6: { left: 6 + dimension * 1, top: 8 },\n        7: { left: 6 + dimension * 2, top: 8 },\n        8: { left: 6 + dimension * 3, top: 8 },\n        9: { left: 6 + dimension * 4, top: 8 },\n    });\n\n    const handleSelect = (digit_value: number) => {\n        if (!isSelectableDigitType()) return;\n        if (digit_value !== selected_digit && typeof onDigitChange === 'function') {\n            onDigitChange({ target: { name: 'last_digit', value: digit_value } });\n        }\n    };\n\n    const getBarrier = (num: number | null): number | null => {\n        const barrier_map: {\n            [key: string]: (val: number | null) => boolean;\n        } = {\n            DIGITMATCH: (val: number | null) => val === barrier,\n            DIGITDIFF: (val: number | null) => val !== barrier && !!barrier && !isNaN(barrier),\n            DIGITOVER: (val: number | null) => !!(val && barrier) && val > barrier,\n            DIGITUNDER: (val: number | null) => !!(val && barrier) && val < barrier,\n            DIGITODD: (val: number | null) => !!val && Boolean(val % 2),\n            DIGITEVEN: (val: number | null) => !!val && !(val % 2),\n        };\n        if (!contract_type || !barrier_map[contract_type]) return null;\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    const getOffset = () => (isMobile() ? digit_offset_mobile : digit_offset);\n\n    const isSelectableDigitType = () => (isMobile() ? trade_type !== 'even_odd' : false);\n    const digits_array = Object.keys(digits_info)\n        .sort((a, b) => +a - +b)\n        .map(spot_time => digits_info[+spot_time]);\n    const last_contract_digit = digits_array.slice(-1)[0] || {};\n\n    // 'won' or 'lost' status exists after contract expiry\n    const is_won = is_ended && status === 'won' && is_digit_contract;\n    // need to explicitly have is_lost condition here\n    // because negating is_won would always be true,\n    // but we only need is_lost condition only once we have the 'won' or 'lost' status\n    const is_lost = is_ended && status === 'lost' && is_digit_contract;\n\n    const min = digits ? Math.min(...digits) : null;\n    const max = digits ? Math.max(...digits) : null;\n\n    // latest last digit refers to digit and spot values from latest price\n    // latest contract digit refers to digit and spot values from last digit contract in contracts array\n    const latest_tick_pip_size = tick ? +tick.pip_size : null;\n    const latest_tick_ask_price = tick?.ask && latest_tick_pip_size ? tick.ask.toFixed(latest_tick_pip_size) : null;\n    const latest_tick_digit = latest_tick_ask_price ? +(latest_tick_ask_price.split('').pop() || '') : null;\n    const position = tick ? getOffset()[latest_tick_digit ?? -1] : getOffset()[last_contract_digit.digit];\n    const latest_digit = !(is_won || is_lost)\n        ? { digit: latest_tick_digit, spot: latest_tick_ask_price }\n        : last_contract_digit;\n    return (\n        <div\n            className={classNames('digits', {\n                'digits--trade': is_trade_page,\n            })}\n        >\n            {display_array.map(idx => (\n                <DigitDisplay\n                    barrier={getBarrier(idx)}\n                    has_entry_spot={has_entry_spot}\n                    is_digit_contract={is_digit_contract}\n                    is_lost={is_lost}\n                    is_won={is_won}\n                    key={idx}\n                    is_max={digits ? digits[idx] === max : null}\n                    is_min={digits ? digits[idx] === min : null}\n                    stats={digits ? digits[idx] : null}\n                    status={status}\n                    latest_digit={is_trade_page ? latest_digit : last_contract_digit}\n                    value={idx}\n                    onLastDigitSpot={onLastDigitSpot}\n                    onSelect={isSelectableDigitType() ? handleSelect : null}\n                    selected_digit={isSelectableDigitType() ? selected_digit : undefined}\n                />\n            ))}\n            <LastDigitPointer is_lost={is_lost} is_trade_page={is_trade_page} is_won={is_won} position={position} />\n        </div>\n    );\n};\n\nexport default observer(LastDigitPrediction);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { toJS } from 'mobx';\nimport { DesktopWrapper, MobileWrapper, Popover, Text } from '@deriv/components';\nimport {\n    getMarketNamesMap,\n    isMobile,\n    useIsMounted,\n    isContractElapsed,\n    TContractStore,\n    TTickSpotData,\n} from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { Bounce, SlideIn } from 'App/Components/Animations';\nimport { DigitSpot, LastDigitPrediction } from '../LastDigitPrediction';\nimport 'Sass/app/modules/contract/digits.scss';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TTraderStore = ReturnType<typeof useTraderStore>;\ntype TOnChangeStatus = { status: string | null | undefined; current_tick: number | null };\ntype TOnLastDigitSpot = {\n    spot: string | null;\n    is_lost?: boolean;\n    is_selected_winning: boolean;\n    is_latest: boolean;\n    is_won?: boolean;\n};\ntype TDigitsWrapper = TDigits & {\n    onChangeStatus?: (params: TOnChangeStatus) => void;\n    onLastDigitSpot?: (params: TOnLastDigitSpot) => void;\n};\ntype TDigits = Pick<TContractStore, 'contract_info' | 'digits_info'> & {\n    digits_array?: number[];\n    display_status?: TContractStore['display_status'];\n    is_digit_contract?: TContractStore['is_digit_contract'];\n    is_ended?: TContractStore['is_ended'];\n    is_trade_page?: boolean;\n    onDigitChange?: TTraderStore['onChange'];\n    selected_digit?: TTraderStore['last_digit'];\n    trade_type?: TTraderStore['contract_type'];\n    tick?: TTickSpotData;\n    underlying: TTraderStore['symbol'];\n};\ntype TTickStream = NonNullable<TContractStore['contract_info']['tick_stream']>[number];\ntype TTickData =\n    | TTickSpotData\n    | null\n    | undefined\n    | {\n          ask: TTickStream['tick'];\n          bid: TTickStream['tick'];\n          current_tick: number;\n          epoch: TTickStream['epoch'];\n          pip_size?: number;\n      };\n\nconst DigitsWrapper = ({\n    contract_info,\n    digits_array,\n    digits_info,\n    display_status,\n    is_digit_contract,\n    is_ended,\n    is_trade_page,\n    onDigitChange,\n    selected_digit,\n    trade_type,\n    onChangeStatus,\n    ...props\n}: TDigitsWrapper) => {\n    const has_contract = contract_info.date_start;\n    let tick: TTickData = props.tick;\n\n    const is_tick_ready = is_trade_page ? !!tick : true;\n    const is_contract_elapsed = is_trade_page ? isContractElapsed(contract_info, tick) : false;\n    const status = !is_contract_elapsed && is_tick_ready ? display_status : null;\n\n    // tick from contract_info.tick_stream has totally different\n    // format from the tick from tick_history api call.\n    if (has_contract && !is_contract_elapsed) {\n        tick = null;\n        const tick_stream = contract_info.tick_stream;\n        if (tick_stream?.length) {\n            const t = toJS(tick_stream.slice(-1)[0]);\n            tick = {\n                ask: t.tick,\n                bid: t.tick,\n                epoch: t.epoch,\n                pip_size: t.tick_display_value?.split('.')[1].length,\n                current_tick: tick_stream.length,\n            };\n        }\n    }\n\n    React.useEffect(() => {\n        if (onChangeStatus) {\n            onChangeStatus({ status, current_tick: tick && 'current_tick' in tick ? tick.current_tick : null });\n        }\n    }, [tick, is_trade_page, display_status, onChangeStatus, status]);\n\n    return (\n        <LastDigitPrediction\n            // dimension of a single digit widget including margin/padding (number)\n            // i.e - 40px + 6px left and 6px right padding/margin = 52\n            dimension={isMobile() ? 64 : 52}\n            has_entry_spot={!!contract_info.entry_tick}\n            barrier={!is_contract_elapsed && is_tick_ready ? Number(contract_info.barrier) : null}\n            contract_type={!is_contract_elapsed && is_tick_ready ? contract_info.contract_type : ''}\n            digits={digits_array}\n            digits_info={!is_contract_elapsed && is_tick_ready ? digits_info : {}}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            is_trade_page={is_trade_page}\n            status={status as React.ComponentProps<typeof LastDigitPrediction>['status']}\n            tick={tick as React.ComponentProps<typeof LastDigitPrediction>['tick']}\n            trade_type={trade_type}\n            onDigitChange={onDigitChange}\n            selected_digit={selected_digit}\n            onLastDigitSpot={props.onLastDigitSpot}\n        />\n    );\n};\n\nconst Digits = React.memo((props: TDigits) => {\n    const [status, setStatus] = React.useState<string | null>();\n    const [current_tick, setCurrentTick] = React.useState<number | null>();\n    const [spot, setSpot] = React.useState<string | null>();\n    const [is_selected_winning, setIsSelectedWinning] = React.useState<boolean>();\n    const [is_won, setIsWon] = React.useState<boolean>();\n    const [is_lost, setIsLost] = React.useState<boolean>();\n    const isMounted = useIsMounted();\n\n    const { contract_info, digits_array, is_digit_contract, is_trade_page, underlying } = props;\n\n    const onChangeStatus = (params: TOnChangeStatus) => {\n        setStatus(params.status);\n        setCurrentTick(params.current_tick);\n    };\n\n    const onLastDigitSpot = (params: TOnLastDigitSpot) => {\n        setSpot(params.spot);\n        setIsLost(params.is_lost);\n        setIsSelectedWinning(params.is_selected_winning);\n        setIsWon(params.is_won);\n    };\n\n    const getPopoverMessage = () => {\n        const underlying_name = is_trade_page ? underlying : contract_info.underlying;\n        return (\n            <Localize\n                i18n_default_text='Last digit stats for latest 1000 ticks for {{underlying_name}}'\n                values={{\n                    underlying_name:\n                        getMarketNamesMap()[\n                            underlying_name?.toUpperCase() as keyof ReturnType<typeof getMarketNamesMap>\n                        ],\n                }}\n            />\n        );\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <SlideIn\n                    is_visible={(digits_array || is_digit_contract) && isMounted()}\n                    className='digits__container'\n                    keyname='digits'\n                    type='bottom'\n                >\n                    {is_trade_page && (\n                        <div className='digits__tooltip-container'>\n                            <Popover\n                                alignment='top'\n                                classNameBubble='digits__tooltip-bubble'\n                                icon='info'\n                                id='dt_last_digits_info_tooltip'\n                                margin={4}\n                                message={getPopoverMessage()}\n                            />\n                        </div>\n                    )}\n                    <DigitsWrapper {...props} />\n                </SlideIn>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div className='digits__container'>\n                    <Bounce\n                        is_visible={!!(is_digit_contract && status && spot && !!contract_info.entry_tick)}\n                        className={classNames('digits__digit-spot', {\n                            'digits__digit-spot--is-trading': is_trade_page,\n                        })}\n                        keyname='digits__digit-spot'\n                    >\n                        {is_trade_page && (\n                            <Text size='xs' align='center' className='digits__digit-spot-value'>\n                                <Localize i18n_default_text='Tick {{current_tick}} - ' values={{ current_tick }} />\n                            </Text>\n                        )}\n                        <DigitSpot\n                            current_spot={spot}\n                            is_lost={is_lost}\n                            is_selected_winning={is_selected_winning}\n                            is_won={is_won}\n                        />\n                    </Bounce>\n                    <DigitsWrapper {...props} onChangeStatus={onChangeStatus} onLastDigitSpot={onLastDigitSpot} />\n                </div>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nDigits.displayName = 'Digits';\n\nexport default Digits;\n","import Digits from './digits';\n\nexport default Digits;\n","import React from 'react';\nimport { PageError } from '@deriv/components';\nimport { routes, getUrlBase } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst Page404 = () => (\n    <PageError\n        header={localize('We couldn’t find that page')}\n        messages={[\n            localize('You may have followed a broken link, or the page has moved to a new address.'),\n            localize('Error code: {{error_code}} page not found', { error_code: 404 }),\n        ]}\n        redirect_urls={[routes.trade]}\n        redirect_labels={[localize('Return to trade')]}\n        classNameImage='page-404__image'\n        image_url={getUrlBase('/public/images/common/404.png')}\n    />\n);\n\nexport default Page404;\n","import Page404 from './Components/Page404';\n\nexport default Page404;\n","import { toJS } from 'mobx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FastMarker } from 'Modules/SmartChart';\n\nconst ChartMarker = ({ marker_config, marker_content_props, is_bottom_widget_visible }) => {\n    const { ContentComponent, ...marker_props } = marker_config;\n\n    // TODO:\n    //  - rename x to epoch\n    //  - rename y to price\n    const onRef = ref => {\n        if (ref) {\n            // NOTE: null price means vertical line.\n            if (!marker_props.y) {\n                const margin = (is_bottom_widget_visible ? 115 : 0) + 24; // digit contracts have a widget at the bottom // height of line marker icon\n\n                ref.div.style.height = `calc(100% - ${margin}px)`;\n                ref.div.style.zIndex = '-1';\n            }\n            ref.setPosition({\n                epoch: +marker_props.x,\n                price: +marker_props.y,\n            });\n        }\n    };\n\n    // memoizing the marker components data:\n    const getMemoizedComponent = React.useCallback(() => {\n        return <ContentComponent {...toJS(marker_content_props)} />;\n    }, [marker_content_props]);\n\n    return <FastMarker markerRef={onRef}>{getMemoizedComponent()}</FastMarker>;\n};\n\nChartMarker.propTypes = {\n    is_bottom_widget_visible: PropTypes.bool,\n    marker_config: PropTypes.object,\n    marker_content_props: PropTypes.object,\n};\n\nexport default ChartMarker;\n","// THIS FILE CONTAINS THE ICONS RENDERED IN CANVAS2D CONTEXT.\n\n// All path commands *MUST* be absolute (MCLVQZ).\n// Use figma.com which by default exports paths as absolute.\n// Only <path /> tags is supported.\nconst parse_svg = markup => {\n    // make tests pass\n    if (!window.DOMParser) {\n        return null;\n    }\n\n    const parser = new window.DOMParser();\n    const svg = parser.parseFromString(markup, 'image/svg+xml').children[0];\n    let { width, height } = svg.attributes;\n    width = width.value * 1;\n    height = height.value * 1;\n\n    const paths = [];\n    [].forEach.call(svg.children, p => {\n        const { d, fill, stroke } = p.attributes;\n        paths.push({\n            points: d.value\n                .match(/M|C|H|A|L|V|-?\\d*(\\.\\d+)?/g)\n                .filter(e => e)\n                .map(e => ('MCHALV'.indexOf(e) === -1 ? e * 1 : e)),\n            fill: fill && fill.value,\n            stroke: stroke && stroke.value,\n        });\n    });\n    function with_color(color, bg_color = 'white') {\n        return {\n            width,\n            height,\n            paths: paths.map(({ points, fill, stroke }) => ({\n                points,\n                stroke,\n                fill: fill !== 'white' ? color : bg_color,\n            })),\n        };\n    }\n\n    return {\n        width,\n        height,\n        paths,\n        with_color,\n    };\n};\n\nexport const START = parse_svg(`\n<svg width=\"15\" height=\"20\" viewBox=\"0 0 15 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7,20 C11.2,14.4 14,10.8659932 14,7 C14,3.13400675 10.8659932,0 7,0 C3.13400675,0 0,3.13400675 0,7 C0,10.8659932 2.8,14.4 7,20 Z\" fill=\"#333333\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"A7 7 4.2 0 6.283185307179586\" fill=\"white\" />\n</svg>`);\n\nexport const END = parse_svg(`\n<svg width=\"19\" height=\"20\" viewBox=\"0 0 19 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 2L18 2L18 12L2 12Z\" fill=\"white\" />\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2,0 L2,1 L19,1 L19,12 L2,12 L2,20 L1,20 L1,0 L2,0 Z M18,8 L15,8 L15,11 L18,11 L18,8 Z M12,8 L9,8 L9,11 L12,11 L12,8 Z M6,8 L3,8 L3,11 L6,11 L6,8 Z M15,5 L12,5 L12,8 L15,8 L15,5 Z M9,5 L6,5 L6,8 L9,8 L9,5 Z M6,2 L3,2 L3,5 L6,5 L6,2 Z M18,2 L15,2 L15,5 L18,5 L18,2 Z M12,2 L9,2 L9,5 L12,5 L12,2 Z\" fill=\"#333333\"/>\n</svg>\n`);\n","// Things to do before touching this file :P\n// 1- Please read https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial\n// 2- Please read RawMarker.jsx in https://github.com/binary-com/SmartCharts\n// 3- Please read contract-store.js & trade.jsx carefully\nimport React from 'react';\nimport { getContractStatus, getDecimalPlaces, isAccumulatorContract, isVanillaContract } from '@deriv/shared';\nimport { RawMarker } from 'Modules/SmartChart';\nimport * as ICONS from './icons';\n\nconst is_firefox = navigator.userAgent.search('Firefox') > 0;\n\nconst RawMarkerMaker = draw_callback => {\n    const Marker = ({ epoch_array, price_array, ...rest }) => (\n        <RawMarker\n            epoch_array={epoch_array}\n            price_array={price_array}\n            draw_callback={args => draw_callback({ ...args, ...rest })}\n        />\n    );\n    return Marker;\n};\n\nconst dark_theme = {\n    accu_contract_shade: '#00a79e14',\n    accu_shade: '#377cfc14',\n    accu_shade_crossed: '#cc2e3d14',\n    bg: '#0e0e0e',\n    fg: '#ffffff',\n    grey_border: '#6e6e6e',\n    lost: '#cc2e3d',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#00a79e',\n};\n\nconst light_theme = {\n    accu_contract_shade: '#4bb4b314',\n    accu_shade: '#377cfc14',\n    accu_shade_crossed: '#ec3f3f14',\n    bg: '#ffffff',\n    fg: '#333333',\n    grey_border: '#999999',\n    lost: '#ec3f3f',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#4bb4b3',\n};\n\nfunction getColor({ status, profit, is_dark_theme, is_vanilla }) {\n    const colors = is_dark_theme ? dark_theme : light_theme;\n    let color = colors[status || 'open'];\n    if (is_vanilla) {\n        if (status === 'open') return colors.open;\n        return colors[profit > 0 ? 'won' : 'lost'];\n    }\n    if (status === 'open' && profit) {\n        color = colors[profit > 0 ? 'won' : 'lost'];\n    }\n    return color;\n}\n\nconst calc_scale = zoom => {\n    return zoom ? Math.max(Math.min(Math.sqrt(zoom / 18), 1.2), 0.8) : 1;\n};\n\nconst hex_map = [];\nconst calc_opacity = (from, to) => {\n    if (hex_map.length === 0) {\n        for (let i = 255; i >= 0; --i) {\n            hex_map[i] = (i < 16 ? '0' : '') + i.toString(16);\n        }\n    }\n    const opacity = Math.floor(Math.min(Math.max(to - from - 10, 0) / 6, 1) * 255);\n    return hex_map[opacity];\n};\n\n/** @param {CanvasRenderingContext2D} ctx */\nconst draw_path = (ctx, { zoom, top, left, icon }) => {\n    ctx.save();\n    const scale = calc_scale(zoom);\n\n    ctx.translate(left - (icon.width * scale) / 2, top - (icon.height * scale) / 2);\n\n    ctx.scale(scale, scale);\n\n    icon.paths.forEach(({ points, fill, stroke }) => {\n        if (fill) {\n            ctx.fillStyle = fill;\n        }\n        if (stroke) {\n            ctx.strokeStyle = stroke;\n        }\n        ctx.beginPath();\n        let prev_x, prev_y;\n        for (let idx = 0; idx < points.length; idx++) {\n            let x, y, cx1, cx2, cy1, cy2, r;\n            if (points[idx] === 'M') {\n                x = points[++idx];\n                y = points[++idx];\n                ctx.moveTo(x, y);\n            } else if (points[idx] === 'L') {\n                x = points[++idx];\n                y = points[++idx];\n                ctx.lineTo(x, y);\n            } else if (points[idx] === 'V') {\n                y = points[++idx];\n                ctx.lineTo(prev_x, y);\n            } else if (points[idx] === 'H') {\n                x = points[++idx];\n                ctx.lineTo(x, prev_y);\n            } else if (points[idx] === 'Q') {\n                cx1 = points[++idx];\n                cy1 = points[++idx];\n                x = points[++idx];\n                y = points[++idx];\n                ctx.quadraticCurveTo(cx1, cy1, x, y);\n            } else if (points[idx] === 'C') {\n                cx1 = points[++idx];\n                cy1 = points[++idx];\n                cx2 = points[++idx];\n                cy2 = points[++idx];\n                x = points[++idx];\n                y = points[++idx];\n                ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x, y);\n            } else if (points[idx] === 'A') {\n                x = points[++idx];\n                y = points[++idx];\n                r = points[++idx];\n                const start_a = points[++idx];\n                const end_a = points[++idx];\n                ctx.arc(x, y, r, start_a, end_a);\n            }\n            prev_x = x;\n            prev_y = y;\n        }\n        ctx.closePath();\n        if (fill) {\n            ctx.fill();\n        }\n        if (stroke) {\n            ctx.stroke();\n        }\n    });\n    ctx.scale(1, 1);\n    ctx.restore();\n};\n\nconst drawAccuBarrierRange = ({\n    coordinates,\n    ctx,\n    labels,\n    has_persistent_borders,\n    previous_tick,\n    scale,\n    shade_color,\n    stroke_color,\n}) => {\n    ctx.save();\n    const { bottom, start_left, top } = coordinates;\n    const end_left =\n        coordinates.end_left ?? ctx.canvas.offsetWidth - ctx.canvas.parentElement.stx.panels.chart.yaxisTotalWidthRight;\n    const end_top = ctx.canvas.offsetHeight - ctx.canvas.parentElement.stx.xaxisHeight;\n    const is_top_visible = top < end_top && (top >= 0 || !has_persistent_borders);\n    const is_bottom_visible = bottom < end_top;\n    // using 2 instead of 0 to distance the top barrier line from the top of the chart and make it clearly visible in C.Details:\n    const persistent_top = top < 0 && has_persistent_borders ? 2 : end_top;\n    const displayed_top = is_top_visible ? top : persistent_top;\n    const displayed_bottom = is_bottom_visible ? bottom : end_top;\n    const is_start_left_visible = start_left < end_left;\n    const middle_top = bottom - Math.abs(bottom - top) / 2;\n    if (!is_start_left_visible) return;\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = stroke_color;\n    ctx.setLineDash([]);\n    ctx.font = labels?.font;\n    ctx.textAlign = 'right';\n\n    if (is_top_visible || has_persistent_borders) {\n        ctx.fillStyle = stroke_color;\n        // draw difference between high barrier and previous spot price\n        if (labels?.top) {\n            ctx.fillText(labels?.top, end_left - 1, displayed_top - 10);\n        }\n        // draw top barrier with an arrow\n        ctx.beginPath();\n        ctx.moveTo(end_left, displayed_top);\n        ctx.lineTo(start_left - 2.5, displayed_top);\n        ctx.lineTo(start_left, displayed_top + 4.5);\n        ctx.lineTo(start_left + 2.5, displayed_top);\n        ctx.fill();\n        ctx.stroke();\n    }\n    if (middle_top < end_top && previous_tick) {\n        const { draw_line_without_tick_marker, radius, stroke_color: prev_tick_stroke_color } = previous_tick || {};\n        ctx.fillStyle = prev_tick_stroke_color;\n        ctx.globalCompositeOperation = 'destination-over';\n        if (prev_tick_stroke_color && !draw_line_without_tick_marker) {\n            // draw previous tick marker in DTrader\n            ctx.strokeStyle = prev_tick_stroke_color;\n            ctx.beginPath();\n            ctx.arc(start_left - 1 * scale, middle_top, radius, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.stroke();\n        }\n        // draw horizontal dashed line between barriers to accentuate that they're related to previous tick\n        ctx.strokeStyle = stroke_color;\n        ctx.beginPath();\n        ctx.setLineDash([2, 4]);\n        ctx.moveTo(start_left + (radius || 0), middle_top);\n        ctx.lineTo(end_left, middle_top);\n        ctx.stroke();\n        ctx.globalCompositeOperation = 'source-over';\n    }\n    if (is_bottom_visible || has_persistent_borders) {\n        ctx.fillStyle = stroke_color;\n        // draw difference between low barrier and previous spot price\n        if (labels?.bottom && displayed_bottom + 12 < end_top) {\n            ctx.fillText(labels?.bottom, end_left - 1, displayed_bottom + 12);\n        }\n        // draw bottom barrier with an arrow\n        ctx.beginPath();\n        ctx.setLineDash([]);\n        ctx.moveTo(end_left, displayed_bottom);\n        ctx.lineTo(start_left - 2.5, displayed_bottom);\n        ctx.lineTo(start_left, displayed_bottom - 4.5);\n        ctx.lineTo(start_left + 2.5, displayed_bottom);\n        ctx.fill();\n        ctx.stroke();\n    }\n    // draw shaded area between barriers\n    ctx.fillStyle = shade_color;\n    ctx.fillRect(start_left, displayed_top, end_left - start_left, Math.abs(displayed_bottom - displayed_top));\n    ctx.restore();\n};\n\nconst render_label = ({ ctx, text, tick: { zoom, left, top } }) => {\n    const scale = calc_scale(zoom);\n    const size = Math.floor(scale * 3 + 7);\n    ctx.font = `${size}px Roboto`;\n    text.split(/\\n/).forEach((line, idx) => {\n        const w = Math.ceil(ctx.measureText(line).width);\n        ctx.fillText(line, left - 5 - w, top + idx * size + 1);\n    });\n};\n\nconst shadowed_text = ({ ctx, color, is_dark_theme, text, left, top, scale }) => {\n    ctx.save();\n    ctx.textAlign = 'center';\n    const size = Math.floor(scale * 12);\n    ctx.font = `bold ${size}px BinarySymbols, Roboto`;\n    if (color) ctx.fillStyle = color;\n    if (!is_firefox) {\n        ctx.shadowColor = is_dark_theme ? 'rgba(16,19,31,1)' : 'rgba(255,255,255,1)';\n        ctx.shadowBlur = 12;\n    }\n    // fillText once in firefox due to disabling of text shadows, for default cases where its enabled, set to 5 (to add blur intensity)\n    for (let i = 0; i < (is_firefox ? 1 : 5); ++i) {\n        ctx.fillText(text, left, top);\n    }\n    ctx.restore();\n};\n\nconst TickContract = RawMarkerMaker(\n    ({\n        ctx: context,\n        canvas_height: canvas_fixed_height,\n        points: [start, ...ticks],\n        prices: [barrier, barrier_2], // TODO: support two barrier contracts\n        is_last_contract,\n        is_dark_theme,\n        is_in_contract_details,\n        granularity,\n        contract_info: {\n            accu_barriers_difference,\n            contract_type,\n            exit_tick_time,\n            status,\n            profit,\n            has_crossed_accu_barriers,\n            is_accumulator_trade_without_contract,\n            is_sold,\n            is_expired,\n            // tick_stream,\n            tick_count,\n        },\n    }) => {\n        /** @type {CanvasRenderingContext2D} */\n        const ctx = context;\n\n        const is_accumulator_contract = isAccumulatorContract(contract_type);\n        const contract_status = is_accumulator_contract\n            ? getContractStatus({ contract_type, profit, exit_tick_time, status })\n            : status;\n        const is_accu_contract_ended = is_accumulator_contract && contract_status !== 'open';\n        const color = getColor({\n            is_dark_theme,\n            status: contract_status,\n            profit: is_sold || is_accu_contract_ended ? profit : null,\n        });\n\n        const draw_start_line = is_last_contract && start.visible && !is_sold;\n        const scale = calc_scale(start.zoom);\n        const canvas_height = canvas_fixed_height / window.devicePixelRatio;\n\n        [barrier, barrier_2].filter(Boolean).forEach(b => {\n            b = Math.min(Math.max(b, 2), canvas_height - 32); // eslint-disable-line\n        });\n\n        const entry = ticks[0];\n        const exit = ticks[ticks.length - 1];\n        const previous_tick = ticks[ticks.length - 2] || exit;\n        const opacity = is_sold ? calc_opacity(start.left, exit.left) : '';\n\n        if (start && is_accumulator_trade_without_contract) {\n            // draw 2 barriers with a shade between them for ACCU trade without contracts\n            drawAccuBarrierRange({\n                coordinates: {\n                    bottom: barrier_2,\n                    start_left: start.left,\n                    top: barrier,\n                },\n                ctx,\n                labels: accu_barriers_difference,\n                previous_tick: {\n                    stroke_color: getColor({ status: 'fg', is_dark_theme }) + opacity,\n                    radius: 1.5 * scale,\n                },\n                scale,\n                shade_color: getColor({\n                    status: has_crossed_accu_barriers ? 'accu_shade_crossed' : 'accu_shade',\n                    is_dark_theme,\n                }),\n                stroke_color: getColor({ status: has_crossed_accu_barriers ? 'lost' : 'open', is_dark_theme }),\n            });\n            return;\n        }\n        if (\n            barrier &&\n            barrier_2 &&\n            (((previous_tick || exit) && is_accumulator_contract && is_in_contract_details) ||\n                (!contract_type && start))\n        ) {\n            // draw 2 barriers with a shade between them for an ongoing ACCU contract:\n            const contract_details_start_left =\n                is_accumulator_contract && contract_status === 'open' ? exit?.left : previous_tick?.left;\n            drawAccuBarrierRange({\n                coordinates: {\n                    bottom: barrier_2,\n                    start_left: is_in_contract_details ? contract_details_start_left : start.left,\n                    top: barrier,\n                },\n                ctx,\n                // we should show barrier lines in contract details even when they are outside of the chart:\n                has_persistent_borders: is_in_contract_details,\n                labels: !is_in_contract_details && accu_barriers_difference,\n                previous_tick: {\n                    draw_line_without_tick_marker: is_in_contract_details,\n                    stroke_color: color + opacity,\n                    radius: 1.5 * scale,\n                },\n                scale,\n                shade_color: getColor({\n                    status:\n                        has_crossed_accu_barriers || contract_status === 'lost'\n                            ? 'accu_shade_crossed'\n                            : 'accu_contract_shade',\n                    is_dark_theme,\n                }),\n                stroke_color: getColor({\n                    status: has_crossed_accu_barriers || contract_status === 'lost' ? 'lost' : 'won',\n                    is_dark_theme,\n                }),\n            });\n        }\n        if (is_in_contract_details) return;\n\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        if (draw_start_line) {\n            render_label({\n                ctx,\n                text: 'Start\\nTime',\n                tick: { zoom: start.zoom, left: start.left - 1 * scale, top: canvas_height - 50 },\n            });\n            ctx.beginPath();\n            ctx.setLineDash([3, 3]);\n            ctx.moveTo(start.left - 1 * scale, 0);\n            if (ticks.length && barrier && !is_accumulator_contract) {\n                ctx.lineTo(start.left - 1 * scale, barrier - 34 * scale);\n                ctx.moveTo(start.left - 1 * scale, barrier + 4 * scale);\n            }\n            ctx.lineTo(start.left - 1 * scale, canvas_fixed_height);\n            ctx.stroke();\n        }\n\n        if (!ticks.length || !barrier) {\n            ctx.restore();\n            return;\n        }\n\n        // barrier line\n        if ((start.visible || entry.visible || exit.visible) && (!is_accumulator_contract || is_accu_contract_ended)) {\n            const top = is_accumulator_contract ? entry.top : barrier;\n            ctx.strokeStyle = color + opacity;\n            ctx.beginPath();\n            ctx.setLineDash([1, 1]);\n            ctx.moveTo(start.left, top);\n            ctx.lineTo(entry.left, top);\n            ctx.stroke();\n\n            ctx.beginPath();\n            ctx.setLineDash([]);\n            ctx.moveTo(entry.left, top);\n            ctx.lineTo(exit.left, top);\n            ctx.stroke();\n            ctx.strokeStyle = color;\n        }\n\n        // ticks for last contract\n        if (is_last_contract && granularity === 0 && !is_sold && !is_accumulator_contract) {\n            ticks\n                .filter(tick => tick.visible)\n                .forEach(tick => {\n                    const clr = tick === exit ? color : getColor({ status: 'fg', is_dark_theme });\n                    ctx.fillStyle = clr + opacity;\n                    ctx.beginPath();\n                    ctx.arc(tick.left - 1 * scale, tick.top, 1.5 * scale, 0, Math.PI * 2);\n                    ctx.fill();\n                });\n            ctx.fillStyle = color;\n        }\n        // entry & expiry markers\n        if (granularity === 0) {\n            [entry, is_expired || is_accu_contract_ended ? exit : null].forEach(tick => {\n                if (tick && tick.visible) {\n                    ctx.strokeStyle = color + opacity;\n                    ctx.setLineDash([2, 2]);\n                    ctx.beginPath();\n                    ctx.moveTo(tick.left - 1 * scale, tick.top);\n                    if (tick === entry && is_accumulator_contract) {\n                        // draw line to start marker having the same y-coordinates:\n                        ctx.lineTo(start.left - 1 * scale, entry.top);\n                    } else if (tick === exit && is_accumulator_contract) {\n                        // draw dashed line from end icon to exit tick:\n                        ctx.moveTo(exit.left, entry.top);\n                        ctx.lineTo(exit.left, exit.top);\n                    } else ctx.lineTo(tick.left - 1 * scale, barrier);\n                    ctx.stroke();\n\n                    ctx.fillStyle = color + opacity;\n                    ctx.beginPath();\n                    ctx.arc(tick.left - 1 * scale, tick.top, 3 * scale, 0, Math.PI * 2);\n                    ctx.fill();\n\n                    if (tick === entry) {\n                        ctx.beginPath();\n                        ctx.fillStyle = getColor({ status: 'bg', is_dark_theme }) + opacity;\n                        ctx.arc(tick.left - 1 * scale, tick.top, 2 * scale, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                }\n            });\n            ctx.strokeStyle = color;\n            ctx.fillStyle = color;\n        }\n        // count down\n        if (start.visible && !is_sold && !is_accumulator_contract) {\n            shadowed_text({\n                ctx,\n                scale,\n                is_dark_theme,\n                text: `${ticks.length - 1}/${tick_count}`,\n                left: start.left,\n                top: barrier - 27 * scale,\n            });\n        }\n\n        // start-time marker\n        if (start.visible) {\n            draw_path(ctx, {\n                top: is_accumulator_contract ? entry.top - 9 * scale : barrier - 9 * scale,\n                left: start.left - 1 * scale,\n                zoom: start.zoom,\n                icon: ICONS.START.with_color(\n                    color + (is_sold ? opacity : ''),\n                    getColor({ status: 'bg', is_dark_theme }) + (is_sold ? opacity : '')\n                ),\n            });\n        }\n        // status marker\n        if (exit.visible && (is_sold || is_accu_contract_ended)) {\n            draw_path(ctx, {\n                top: is_accumulator_contract ? entry.top - 9 * scale : barrier - 9 * scale,\n                left: exit.left + 8 * scale,\n                zoom: exit.zoom,\n                icon: ICONS.END.with_color(color, getColor({ status: 'bg', is_dark_theme })),\n            });\n            if (is_accu_contract_ended) {\n                drawAccuBarrierRange({\n                    coordinates: {\n                        bottom: barrier_2,\n                        end_left: exit.left,\n                        start_left: previous_tick?.left,\n                        top: barrier,\n                    },\n                    ctx,\n                    previous_tick: {\n                        stroke_color: color + opacity,\n                        radius: 1.5 * scale,\n                    },\n                    scale,\n                    shade_color: getColor({\n                        status:\n                            has_crossed_accu_barriers || contract_status === 'lost'\n                                ? 'accu_shade_crossed'\n                                : 'accu_contract_shade',\n                        is_dark_theme,\n                    }),\n                    stroke_color: getColor({\n                        status: has_crossed_accu_barriers || contract_status === 'lost' ? 'lost' : 'won',\n                        is_dark_theme,\n                    }),\n                });\n            }\n        }\n        ctx.restore();\n    }\n);\n\nconst currency_symbols = {\n    AUD: '\\u0041\\u0024',\n    EUR: '\\u20AC',\n    GBP: '\\u00A3',\n    JPY: '\\u00A5',\n    USD: '\\u0024',\n    BTC: '\\u20bf',\n    BCH: '\\ue901',\n    ETH: '\\u0045',\n    ETC: '\\ue900',\n    LTC: '\\u0141',\n    UST: '\\u20ae',\n};\n\nconst NonTickContract = RawMarkerMaker(\n    ({\n        ctx: context,\n        canvas_height: canvas_fixed_height,\n        points: [start, expiry, entry, exit],\n        is_last_contract,\n        prices: [barrier, entry_tick_top, exit_tick_top], // TODO: support two barrier contracts\n        is_dark_theme,\n        granularity,\n        currency,\n        contract_info: {\n            contract_type,\n            // exit_tick_time,\n            // is_expired,\n            is_sold,\n            status,\n            profit,\n        },\n    }) => {\n        /** @type {CanvasRenderingContext2D} */\n        const ctx = context;\n\n        // the y value reported for candles is not accurate\n        if (granularity !== 0) {\n            if (entry) {\n                entry.top = entry_tick_top;\n            }\n            if (exit) {\n                exit.top = exit_tick_top;\n            }\n        }\n\n        const color = getColor({ status, profit, is_dark_theme, is_vanilla: isVanillaContract(contract_type) });\n\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        const draw_start_line = is_last_contract && start.visible && !is_sold;\n        const show_profit = is_last_contract && !is_sold && profit && start.visible && barrier;\n        const scale = calc_scale(start.zoom);\n        const opacity = is_sold ? calc_opacity(start.left, expiry.left) : '';\n\n        const canvas_height = canvas_fixed_height / window.devicePixelRatio;\n        if (barrier) {\n            barrier = Math.min(Math.max(barrier, 2), canvas_height - 32); // eslint-disable-line\n        }\n\n        if (draw_start_line) {\n            render_label({\n                ctx,\n                text: 'Start\\nTime',\n                tick: {\n                    zoom: start.zoom,\n                    left: start.left - 1 * scale,\n                    top: canvas_height - 50,\n                },\n            });\n            ctx.beginPath();\n            ctx.setLineDash([3, 3]);\n            ctx.moveTo(start.left - 1 * scale, 0);\n            if (barrier) {\n                ctx.lineTo(start.left - 1 * scale, barrier - (show_profit ? 38 : 20) * scale);\n                ctx.moveTo(start.left - 1 * scale, barrier + 4 * scale);\n            }\n            ctx.lineTo(start.left - 1 * scale, canvas_fixed_height);\n            ctx.stroke();\n        }\n        // barrier line\n        if (barrier && entry && (start.visible || expiry.visible || Math.sign(start.left) !== Math.sign(expiry.left))) {\n            ctx.strokeStyle = color + opacity;\n            ctx.beginPath();\n            ctx.setLineDash([1, 1]);\n            ctx.moveTo(start.left, barrier);\n            ctx.lineTo(entry.left, barrier);\n            ctx.stroke();\n\n            ctx.beginPath();\n            ctx.setLineDash([]);\n            ctx.moveTo(entry.left, barrier);\n            ctx.lineTo(expiry.left, barrier);\n            ctx.stroke();\n            ctx.strokeStyle = color;\n        }\n\n        // entry & expiry tick markers\n        [entry, exit].forEach(tick => {\n            if (tick && tick.visible) {\n                ctx.strokeStyle = color + opacity;\n                ctx.setLineDash([2, 2]);\n                ctx.beginPath();\n                ctx.moveTo(tick.left - 1 * scale, tick.top);\n                ctx.lineTo(tick.left - 1 * scale, barrier);\n                ctx.stroke();\n\n                ctx.fillStyle = color + opacity;\n                ctx.beginPath();\n                ctx.arc(tick.left - 1 * scale, tick.top, 3 * scale, 0, Math.PI * 2);\n                ctx.fill();\n\n                if (tick === entry) {\n                    ctx.beginPath();\n                    ctx.fillStyle = getColor({ status: 'bg', is_dark_theme }) + opacity;\n                    ctx.arc(tick.left - 1 * scale, tick.top, 2 * scale, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n                ctx.fillStyle = color;\n                ctx.strokeStyle = color;\n            }\n        });\n\n        // start-time marker\n        if (start && start.visible && barrier) {\n            draw_path(ctx, {\n                top: barrier - 9 * scale,\n                left: start.left - 1 * scale,\n                zoom: start.zoom,\n                icon: ICONS.START.with_color(color + opacity),\n            });\n        }\n        // show the profit\n        if (show_profit) {\n            const symbol = currency_symbols[currency] || '';\n            const decimal_places = getDecimalPlaces(currency);\n            const sign = profit < 0 ? '-' : profit > 0 ? '+' : ' '; // eslint-disable-line\n            const text = `${sign}${symbol}${Math.abs(profit).toFixed(decimal_places)}`;\n            shadowed_text({\n                ctx,\n                color: getColor({ status: 'open', profit }),\n                scale,\n                text,\n                is_dark_theme,\n                left: start.left,\n                top: barrier - 28 * scale,\n            });\n        }\n        // status marker\n        if (expiry.visible) {\n            draw_path(ctx, {\n                top: barrier - 9 * scale,\n                left: expiry.left + 8 * scale,\n                zoom: expiry.zoom,\n                icon: ICONS.END.with_color(color, getColor({ status: 'bg', is_dark_theme })),\n            });\n        }\n        ctx.restore();\n    }\n);\n\nconst DigitContract = RawMarkerMaker(\n    ({\n        ctx: context,\n        points: [start, ...ticks],\n        prices: [entry_tick_top, exit_tick_top],\n        is_last_contract,\n        is_dark_theme,\n        granularity,\n        contract_info: {\n            // contract_type,\n            status,\n            profit,\n            is_sold,\n            // barrier,\n            tick_stream,\n            tick_count,\n        },\n    }) => {\n        /** @type {CanvasRenderingContext2D} */\n        const ctx = context;\n\n        const color = getColor({\n            is_dark_theme,\n            status,\n            profit: is_sold ? profit : null,\n        });\n\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        const draw_start_line = is_last_contract && start.visible && !is_sold;\n        const scale = calc_scale(start.zoom);\n\n        if (granularity !== 0 && start && entry_tick_top) {\n            start.top = entry_tick_top;\n        }\n        if (draw_start_line) {\n            ctx.beginPath();\n            ctx.setLineDash([3, 3]);\n            ctx.moveTo(start.left - 1 * scale, 0);\n            if (ticks.length) {\n                ctx.lineTo(start.left - 1 * scale, start.top - 34 * scale);\n                ctx.moveTo(start.left - 1 * scale, start.top + 4 * scale);\n            }\n            ctx.lineTo(start.left - 1 * scale, ctx.canvas.height);\n            ctx.stroke();\n        }\n\n        if (!ticks.length) {\n            ctx.restore();\n            return;\n        }\n        const expiry = ticks[ticks.length - 1];\n        const opacity = is_sold ? calc_opacity(start.left, expiry.left) : '';\n        if (granularity !== 0 && expiry && exit_tick_top) {\n            expiry.top = exit_tick_top;\n        }\n\n        // count down\n        if (start.visible && start.top && !is_sold) {\n            shadowed_text({\n                ctx,\n                scale,\n                is_dark_theme,\n                text: `${ticks.length}/${tick_count}`,\n                left: start.left - 1 * scale,\n                top: start.top - 27 * scale,\n            });\n        }\n        // start-time marker\n        if (start.visible && (granularity === 0 || !is_sold)) {\n            draw_path(ctx, {\n                top: start.top - 9 * scale,\n                left: start.left - 1 * scale,\n                zoom: start.zoom,\n                icon: ICONS.START.with_color(color + opacity, getColor({ status: 'bg', is_dark_theme }) + opacity),\n            });\n        }\n        // remaining ticks\n        ticks.forEach((tick, idx) => {\n            if (tick !== expiry) {\n                return;\n            }\n            if (!tick.visible) {\n                return;\n            }\n            if (granularity !== 0 && tick !== expiry) {\n                return;\n            }\n            if (granularity !== 0 && tick === expiry && !is_sold) {\n                return;\n            }\n            const clr = tick !== expiry ? getColor({ status: 'fg', is_dark_theme }) : color;\n            ctx.beginPath();\n            ctx.fillStyle = clr;\n            ctx.arc(tick.left, tick.top, 7 * scale, 0, Math.PI * 2);\n            ctx.fill();\n\n            ctx.beginPath();\n            ctx.fillStyle = is_sold ? color : getColor({ status: 'bg', is_dark_theme });\n            ctx.arc(tick.left, tick.top, 6 * scale, 0, Math.PI * 2);\n            ctx.fill();\n\n            const last_tick = tick_stream[idx];\n            const last_digit = last_tick.tick_display_value.slice(-1);\n            ctx.fillStyle = is_sold ? 'white' : clr;\n            ctx.textAlign = 'center';\n            ctx.shadowBlur = 0;\n            ctx.font = `bold ${12 * scale}px BinarySymbols, Roboto`;\n            ctx.fillText(last_digit, tick.left, tick.top);\n        });\n        // status marker\n        if (expiry.visible && is_sold) {\n            ctx.fillStyle = color;\n            draw_path(ctx, {\n                top: expiry.top - 16 * scale,\n                left: expiry.left + 8 * scale,\n                zoom: expiry.zoom,\n                icon: ICONS.END.with_color(color, getColor({ status: 'bg', is_dark_theme })),\n            });\n        }\n        ctx.restore();\n    }\n);\n\nexport default {\n    TickContract,\n    NonTickContract,\n    DigitContract,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst BottomWidgets = ({ Widget }) => <div className='bottom-widgets'>{Widget}</div>;\n\nBottomWidgets.propTypes = {\n    Widget: PropTypes.node,\n};\n\nexport default BottomWidgets;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobileWrapper, Toast, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { findContractCategory } from 'Modules/Trading/Helpers/contract-type';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TContractType = {\n    text?: string;\n    value: string;\n};\n\nconst BuyToastNotification = observer(() => {\n    const portal = document.getElementById('popup_root');\n    const { modules } = useStore();\n    const { trade } = modules;\n    const { contract_purchase_toast_box, clearContractPurchaseToastBox } = trade;\n\n    React.useEffect(() => {\n        const timeout = setTimeout(() => {\n            clearContractPurchaseToastBox();\n        }, 4000);\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [clearContractPurchaseToastBox, contract_purchase_toast_box]);\n\n    if (!portal || !contract_purchase_toast_box) return <React.Fragment />;\n\n    const { buy_price, currency, contract_type, list } = contract_purchase_toast_box;\n    const active_trade_type = { value: contract_type };\n\n    const trade_type_name = findContractCategory(list, active_trade_type)?.contract_types?.find(\n        (item: TContractType) => item.value === contract_type\n    )?.text;\n\n    return ReactDOM.createPortal(\n        <MobileWrapper>\n            <Toast\n                className='dc-toast-popup-mobile'\n                is_open={!!contract_purchase_toast_box.key}\n                timeout={0}\n                type='notification'\n            >\n                <Text as='p' size='xxs' className='dc-toast__notification'>\n                    <Localize\n                        i18n_default_text='The purchase of <0>{{trade_type_name}} contract</0> has been completed successfully for the amount of <0> {{buy_price}} {{currency}}</0>'\n                        components={[<strong key={0} />]}\n                        values={{ trade_type_name, buy_price, currency }}\n                        shouldUnescape\n                    />\n                </Text>\n            </Toast>\n        </MobileWrapper>,\n        portal\n    );\n});\n\nexport default BuyToastNotification;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DesktopWrapper, MobileWrapper, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isEnded, isAccumulatorContract, isDigitContract } from '@deriv/shared';\nimport { ChartTitle } from 'Modules/SmartChart';\nimport { ChartTitleBeta } from 'Modules/SmartChartBeta';\nimport BuyToastNotification from './buy-toast-notification';\nimport { observer, useStore } from '@deriv/stores';\n\nconst RecentTradeInfo = observer(() => {\n    const { contract_trade, client } = useStore();\n    const { granularity, filtered_contracts, markers_array } = contract_trade;\n\n    const latest_tick_contract = client.is_beta_chart\n        ? filtered_contracts[filtered_contracts.length - 1]\n        : markers_array[markers_array.length - 1];\n    if (\n        !latest_tick_contract ||\n        !latest_tick_contract.contract_info.tick_stream ||\n        isAccumulatorContract(latest_tick_contract.contract_info.contract_type)\n    )\n        return null;\n\n    const is_ended = isEnded(latest_tick_contract.contract_info);\n    if (is_ended || granularity !== 0) return null;\n\n    const { contract_type, tick_stream, tick_count } = latest_tick_contract.contract_info;\n    const current_tick = isDigitContract(contract_type) ? tick_stream.length : Math.max(tick_stream.length - 1, 0);\n    return (\n        <Text weight='bold' className='recent-trade-info'>\n            {localize('Tick')} {current_tick}/{tick_count}\n        </Text>\n    );\n});\n\nconst TopWidgets = ({\n    InfoBox,\n    is_mobile,\n    is_title_enabled = true,\n    onSymbolChange,\n    y_axis_width,\n    theme,\n    open_market,\n    open,\n    is_digits_widget_active,\n    is_beta_chart,\n}) => {\n    const ChartTitleComponent = is_beta_chart ? ChartTitleBeta : ChartTitle;\n    const ChartTitleLocal = (\n        <ChartTitleComponent\n            open_market={open_market}\n            open={open}\n            enabled={is_title_enabled}\n            onChange={onSymbolChange}\n            searchInputClassName='data-hj-whitelist'\n            isNestedList={is_mobile}\n            portalNodeId={is_mobile ? 'deriv_app' : undefined}\n        />\n    );\n\n    const portal = ReactDOM.createPortal(\n        <div className={`smartcharts-${theme}`}>\n            <div\n                className='top-widgets-portal'\n                style={{\n                    width: `calc(100% - ${y_axis_width ? y_axis_width + 5 : 0}px)`,\n                }}\n            >\n                {is_mobile && <BuyToastNotification />}\n                {ChartTitleLocal}\n                {!is_digits_widget_active && <RecentTradeInfo />}\n            </div>\n        </div>,\n        document.getElementById('app_contents')\n    );\n\n    return (\n        <React.Fragment>\n            {InfoBox}\n            <MobileWrapper>{portal}</MobileWrapper>\n            <DesktopWrapper>{ChartTitleLocal}</DesktopWrapper>\n        </React.Fragment>\n    );\n};\n\nTopWidgets.propTypes = {\n    InfoBox: PropTypes.node,\n    is_digits_widget_active: PropTypes.bool,\n    is_mobile: PropTypes.bool,\n    is_title_enabled: PropTypes.bool,\n    onSymbolChange: PropTypes.func,\n    open: PropTypes.bool,\n    open_market: PropTypes.object,\n    theme: PropTypes.string,\n    y_axis_width: PropTypes.number,\n    is_beta_chart: PropTypes.bool,\n};\n\nexport default TopWidgets;\n","import React from 'react';\nimport { getUrlBase, moduleLoader } from '@deriv/shared';\n\nlet module;\n\nconst init = () => {\n    module = moduleLoader(() => {\n        return import(/* webpackChunkName: \"smart_chart\" */ '@deriv/deriv-charts');\n    });\n\n    module.then(({ setSmartChartsPublicPath }) => {\n        setSmartChartsPublicPath(getUrlBase('/js/smartcharts/'));\n    });\n};\n\n// React.Lazy expects a default export for the component\n// SmartChart library exports many components\nconst load = component_name => () => {\n    if (!module) {\n        init();\n    }\n    return module.then(module => {\n        return { default: module[component_name] };\n    });\n};\n\nexport const SmartChart = React.lazy(load('SmartChart'));\nexport const ChartTitle = React.lazy(load('ChartTitle'));\n\nexport const ChartSize = React.lazy(load('ChartSize'));\nexport const ChartMode = React.lazy(load('ChartMode'));\nexport const DrawTools = React.lazy(load('DrawTools'));\nexport const Share = React.lazy(load('Share'));\nexport const StudyLegend = React.lazy(load('StudyLegend'));\nexport const Views = React.lazy(load('Views'));\nexport const ToolbarWidget = React.lazy(load('ToolbarWidget'));\n\nexport const FastMarker = React.lazy(load('FastMarker'));\nexport const RawMarker = React.lazy(load('RawMarker'));\n","import { toJS } from 'mobx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FastMarkerBeta } from 'Modules/SmartChartBeta';\n\nconst ChartMarkerBeta = ({ marker_config, marker_content_props }) => {\n    const { ContentComponent, ...marker_props } = marker_config;\n\n    // TODO:\n    //  - rename x to epoch\n    //  - rename y to price\n    const onRef = ref => {\n        if (ref) {\n            // NOTE: null price means vertical line.\n            if (!marker_props.y) {\n                const margin = 24; // height of line marker icon\n\n                ref.div.style.height = `calc(100% - ${margin}px)`;\n            } else {\n                ref.div.style.zIndex = '1';\n            }\n            ref.setPosition({\n                epoch: +marker_props.x,\n                price: +marker_props.y,\n            });\n        }\n    };\n\n    return (\n        <FastMarkerBeta markerRef={onRef}>\n            <ContentComponent {...toJS(marker_content_props)} />\n        </FastMarkerBeta>\n    );\n};\n\nChartMarkerBeta.propTypes = {\n    is_bottom_widget_visible: PropTypes.bool,\n    marker_config: PropTypes.object,\n    marker_content_props: PropTypes.object,\n};\n\nexport default ChartMarkerBeta;\n","import React from 'react';\nimport { getUrlBase, moduleLoader } from '@deriv/shared';\n\nlet module;\n\nconst init = () => {\n    module = moduleLoader(() => {\n        return import(/* webpackChunkName: \"smart_chart_beta\" */ '@deriv/deriv-charts-beta');\n    });\n\n    module.then(({ setSmartChartsPublicPath }) => {\n        setSmartChartsPublicPath(getUrlBase('/js/smartchartsbeta/'));\n    });\n};\n\n// React.Lazy expects a default export for the component\n// SmartChart library exports many components\nconst load = component_name => () => {\n    if (!module) {\n        init();\n    }\n    return module.then(module => {\n        return { default: module[component_name] };\n    });\n};\n\nexport const SmartChartBeta = React.lazy(load('SmartChart'));\nexport const ChartTitleBeta = React.lazy(load('ChartTitle'));\n\nexport const ChartSizeBeta = React.lazy(load('ChartSize'));\nexport const ChartModeBeta = React.lazy(load('ChartMode'));\nexport const DrawToolsBeta = React.lazy(load('DrawTools'));\nexport const ShareBeta = React.lazy(load('Share'));\nexport const StudyLegendBeta = React.lazy(load('StudyLegend'));\nexport const ViewsBeta = React.lazy(load('Views'));\nexport const ToolbarWidgetBeta = React.lazy(load('ToolbarWidget'));\n\nexport const FastMarkerBeta = React.lazy(load('FastMarker'));\nexport const RawMarkerBeta = React.lazy(load('RawMarker'));\n","import React from 'react';\nimport { SmartChart } from 'Modules/SmartChart';\nimport { SmartChartBeta } from 'Modules/SmartChartBeta';\n\nconst SmartChartSwitcher = ({ is_beta, ...props }) => {\n    const Chart = is_beta ? SmartChartBeta : SmartChart;\n    return <Chart data-testid='SmartChart' {...props} />;\n};\n\nexport default SmartChartSwitcher;\n","import classNames from 'classnames';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobileWrapper, Toast } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TToastPopUp = {\n    portal_id?: string;\n    className: string;\n} & React.ComponentProps<typeof Toast>;\n\ntype TNetworkStatusToastError = {\n    status: string;\n    portal_id: string;\n    message: string;\n};\n\nexport const ToastPopup = ({\n    portal_id = 'popup_root',\n    children,\n    className,\n    ...props\n}: React.PropsWithChildren<TToastPopUp>) => {\n    const new_portal_id = document.getElementById(portal_id);\n    if (!new_portal_id) return null;\n    return ReactDOM.createPortal(\n        <Toast className={classNames('dc-toast-popup', className)} {...props}>\n            {children}\n        </Toast>,\n        new_portal_id\n    );\n};\n\n/**\n * Network status Toast components\n */\nconst NetworkStatusToastError = ({ status, portal_id, message }: TNetworkStatusToastError) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const new_portal_id = document.getElementById(portal_id);\n\n    if (!new_portal_id || !message) return null;\n\n    if (!is_open && status !== 'online') {\n        setIsOpen(true); // open if status === 'blinker' or 'offline'\n    } else if (is_open && status === 'online') {\n        setTimeout(() => {\n            setIsOpen(false);\n        }, 1500);\n    }\n\n    return ReactDOM.createPortal(\n        <MobileWrapper>\n            <Toast\n                className={classNames({\n                    'dc-toast--blinker': status === 'blinker',\n                })}\n                is_open={is_open}\n                timeout={0}\n                type='error'\n            >\n                {message}\n            </Toast>\n        </MobileWrapper>,\n        new_portal_id\n    );\n};\n\nexport const NetworkStatusToastErrorPopup = observer(() => {\n    const {\n        common: { network_status },\n    } = useStore();\n    return (\n        <NetworkStatusToastError\n            portal_id='popup_root'\n            message={network_status.tooltip}\n            status={network_status.class}\n        />\n    );\n});\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport { TContractType, TContractCategory, TList } from '../Components/Form/ContractType/types';\n\ntype TContractTypesList = {\n    [key: string]: {\n        name: string;\n        categories: DeepRequired<TContractType[]>;\n    };\n};\n\ntype TItem = {\n    value: string;\n};\n\nexport const isMajorPairsSymbol = (checked_symbol: string, active_symbols: ActiveSymbols) =>\n    active_symbols.some(({ submarket, symbol }) => /major_pairs/i.test(submarket) && checked_symbol === symbol);\n\nexport const contract_category_icon = {\n    [localize('Ups & Downs')]: 'IcUpsDowns',\n    [localize('Highs & Lows')]: 'IcHighsLows',\n    [localize('Ins & Outs')]: 'IcInsOuts',\n    [localize('Look Backs')]: 'IcLookbacks',\n    [localize('Digits')]: 'IcDigits',\n    [localize('Multipliers')]: 'IcMultiplier',\n    [localize('Accumulators')]: 'IcCatAccumulator',\n} as const;\n\nexport const ordered_trade_categories = [\n    'Accumulators',\n    'Vanillas',\n    'Turbos',\n    'Multipliers',\n    'Ups & Downs',\n    'Highs & Lows',\n    'Digits',\n];\n\nexport const getContractTypeCategoryIcons = () =>\n    ({\n        All: 'IcCatAll',\n        Accumulators: 'IcCatAccumulator',\n        Options: 'IcCatOptions',\n        Multipliers: 'IcCatMultiplier',\n        Turbos: 'IcCatTurbos',\n    } as const);\n\n/**\n * Returns a list of contracts in the following format:\n * {\n *      label: '', // contract category label\n *      contract_types: [], // list of contract types\n *      icon: '', // contract categoty icon\n * }\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  unsupported_list - list of unsupported contract types\n */\n\nexport const showLabelForMultipliers = (checked_symbol: string) =>\n    /R_|1HZ/i.test(checked_symbol) && !/1HZ150V|1HZ250V/i.test(checked_symbol);\n\nexport const getAvailableContractTypes = (contract_types_list: TContractTypesList, unsupported_list: string[]) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const contract_types = contract_types_list[key].categories;\n            const contract_name = contract_types_list[key].name;\n            const available_contract_types = contract_types.filter(type =>\n                type.value &&\n                // TODO: remove this check once all contract types are supported\n                !unsupported_list.includes(type.value)\n                    ? type\n                    : undefined\n            );\n\n            if (available_contract_types.length) {\n                return {\n                    key,\n                    label: contract_name,\n                    contract_types: available_contract_types,\n                    icon: contract_category_icon[contract_name],\n                    component:\n                        contract_name === localize('Accumulators') ? (\n                            <span className='dc-vertical-tab__header--new'>{localize('NEW!')}</span>\n                        ) : null,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean) as {\n        key: string;\n        label: string;\n        contract_types: TContractType[];\n        icon:\n            | 'IcUpsDowns'\n            | 'IcHighsLows'\n            | 'IcInsOuts'\n            | 'IcLookbacks'\n            | 'IcDigits'\n            | 'IcMultiplier'\n            | 'IcCatAccumulator';\n        component: JSX.Element | null;\n    }[];\n};\n\n/**\n * Returns a filtered list\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  filtered_items_array - list of filtered contract category names and/or contract types names\n */\n/*export const getFilteredList = (contract_types_list, filtered_items_array: Array<string>) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const { label, contract_types, icon } = contract_types_list[key];\n\n            const filtered_by_contract_types = contract_types.filter(c =>\n                filtered_items_array.includes(c.text.toLowerCase())\n            );\n\n            const filtered_by_contract_category = filtered_items_array.includes(label.toLowerCase());\n\n            if (filtered_by_contract_types.length) {\n                return {\n                    label,\n                    contract_types: filtered_by_contract_types,\n                    icon,\n                };\n            } else if (filtered_by_contract_category) {\n                return {\n                    label,\n                    contract_types,\n                    icon,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n};*/\n\n// const flatten = (arr: any) => [].concat(...arr);\n\n/**\n * Flatten list object into an array of contract category label and contract types names\n * @param {object} list\n */\n// export const getContractsList = (list: any) =>\n//     flatten(\n//         Object.keys(list).map(\n//             k => [\n//                 list[k].label.toLowerCase(), // contract category names\n//                 ...list[k].contract_types.map((c: any) => c.text.toLowerCase()),\n//             ] // contract types names\n//         )\n//     );\n\nexport const findContractCategory = (list: Partial<TList[]>, item: TItem) =>\n    list?.find(list_item => list_item?.contract_types?.some(i => i.value.includes(item.value))) ||\n    ({} as TContractCategory);\n\nexport const getContractCategoryKey = (list: TList[], item: TItem) => findContractCategory(list, item)?.key;\n\nexport const getContractTypes = (list: TList[], item: TItem) => findContractCategory(list, item)?.contract_types;\n\nexport const getCategoriesSortedByKey = (list: TContractCategory[] = []) =>\n    [...list].sort((a, b) => ordered_trade_categories.indexOf(a.key) - ordered_trade_categories.indexOf(b.key));\n","const digitCategoriesMap = ['even_odd', 'match_diff', 'over_under'] as const;\nconst digitTypesMap = ['DIGITDIFF', 'DIGITMATCH', 'DIGITOVER', 'DIGITUNDER', 'DIGITEVEN', 'DIGITODD'] as const;\n\nexport const isDigitTradeType = (trade_type: string) => digitCategoriesMap.some(item => item === trade_type);\nexport const isDigitContractType = (contract_type: string) => digitTypesMap.some(item => item === contract_type);\n","import {\n    WS,\n    getPropertyValue,\n    cloneObject,\n    isTimeValid,\n    minDate,\n    toMoment,\n    getUnitMap,\n    buildBarriersConfig,\n    buildDurationConfig,\n    hasIntradayDurationUnit,\n    buildForwardStartingConfig,\n    unsupported_contract_types_list,\n    getCleanedUpCategories,\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getContractSubtype,\n    getLocalizedBasis,\n    TTradeTypesCategories,\n} from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\nimport { localize } from '@deriv/translations';\nimport { isSessionAvailable } from './start-date';\nimport { ContractsFor, ContractsForSymbolResponse, TradingTimes, TradingTimesResponse } from '@deriv/api-types';\nimport { TTradeStore } from '../../../../Types/common-prop.type';\n\ntype TBarriers = Record<\n    keyof TTradeStore['duration_min_max'],\n    {\n        barrier?: string;\n        high_barrier?: string;\n        low_barrier?: string;\n    }\n> & {\n    count: number;\n};\ntype TConfig = ReturnType<typeof getContractTypesConfig>[string]['config'] & {\n    has_spot?: boolean;\n    durations?: ReturnType<typeof buildDurationConfig>;\n    trade_types?: { [key: string]: string };\n    barriers?: ReturnType<typeof buildBarriersConfig>;\n    forward_starting_dates?: ReturnType<typeof buildForwardStartingConfig>;\n    growth_rate_range?: number[];\n    multiplier_range?: number[];\n    cancellation_range?: string[];\n    barrier_choices?: string[];\n};\ntype TNonAvailableContractsList = Record<'contract_category' | 'contract_display_name' | 'contract_type', string>[];\ntype TTextValueStrings = {\n    text: string;\n    value: string;\n};\ntype TTimes = {\n    open: string[];\n    close: string[];\n};\ntype TEvents =\n    | {\n          dates: string;\n          descrip: string;\n      }[]\n    | [];\n\nexport const ContractType = (() => {\n    type TContractValues = ReturnType<typeof getComponents> &\n        ReturnType<typeof getBasis> &\n        ReturnType<typeof getTradeTypes> &\n        ReturnType<typeof getStartDates> &\n        ReturnType<typeof getStartType> &\n        ReturnType<typeof getBarriers> &\n        ReturnType<typeof getDurationUnit> &\n        ReturnType<typeof getDurationUnitsList> &\n        ReturnType<typeof getDurationMinMax> &\n        ReturnType<typeof getAccumulatorRange> &\n        ReturnType<typeof getMultiplierRange> &\n        ReturnType<typeof getCancellation> &\n        ReturnType<typeof getExpiryType> &\n        ReturnType<typeof getEqualProps>;\n\n    let available_contract_types: ReturnType<typeof getContractTypesConfig> = {};\n    let available_categories: TTradeTypesCategories = {};\n    let contract_types: ReturnType<typeof getContractTypesConfig>;\n    let non_available_categories: TTradeTypesCategories = {};\n    const trading_events: { [key: string]: Record<string, TEvents | undefined> } = {};\n    const trading_times: { [key: string]: Record<string, TTimes> } = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = (symbol: string): Promise<void> =>\n        WS.storage.contractsFor(symbol).then((r: Required<ContractsForSymbolResponse>) => {\n            const has_contracts = getPropertyValue(r, ['contracts_for']);\n            has_only_forward_starting_contracts =\n                has_contracts && !r.contracts_for.available.find(contract => contract.start_type !== 'forward');\n            if (!has_contracts || has_only_forward_starting_contracts) return;\n            const contract_categories = getContractCategoriesConfig();\n            contract_types = getContractTypesConfig(symbol);\n            available_contract_types = {};\n            available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n            r.contracts_for.available.forEach(contract => {\n                const type = Object.keys(contract_types).find(\n                    key =>\n                        contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                        (typeof contract_types[key].barrier_count === 'undefined' ||\n                            Number(contract_types[key].barrier_count) === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n                );\n\n                if (!type) return; // ignore unsupported contract types\n\n                if (!available_contract_types[type]) {\n                    // extend contract_categories to include what is needed to create the contract list\n                    const sub_cats =\n                        available_categories[\n                            Object.keys(available_categories).find(\n                                key => available_categories[key].categories.indexOf(type) !== -1\n                            ) ?? ''\n                        ].categories;\n\n                    if (!sub_cats) return;\n\n                    sub_cats[(sub_cats as string[]).indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                    // populate available contract types\n                    available_contract_types[type] = cloneObject(contract_types[type]);\n                }\n                const config: TConfig = available_contract_types[type].config || {};\n\n                // set config values\n                config.has_spot = config.has_spot || contract.start_type === 'spot';\n                config.durations = config.hide_duration ? undefined : buildDurationConfig(contract, config.durations);\n                config.trade_types = buildTradeTypesConfig(contract, config.trade_types);\n                config.barriers = buildBarriersConfig(contract, config.barriers);\n                config.barrier_choices = contract.barrier_choices as TConfig['barrier_choices'];\n                config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n                config.growth_rate_range = contract.growth_rate_range as TConfig['growth_rate_range'];\n                config.multiplier_range = contract.multiplier_range as TConfig['multiplier_range'];\n                config.cancellation_range = contract.cancellation_range as TConfig['cancellation_range'];\n\n                available_contract_types[type].config = config;\n            });\n            available_categories = getCleanedUpCategories(available_categories);\n\n            non_available_categories = {};\n            const mutable_contracts_config = cloneObject(contract_categories);\n            const getCategories = (key = ''): string[] => mutable_contracts_config[key]?.categories ?? [];\n            const non_available_contracts = r.contracts_for.non_available as TNonAvailableContractsList;\n\n            if (non_available_contracts) {\n                non_available_contracts.forEach(({ contract_type }) => {\n                    const type =\n                        Object.keys(contract_types).find(key =>\n                            contract_types[key].trade_types.includes(contract_type)\n                        ) ?? '';\n                    const key = Object.keys(mutable_contracts_config).find(key => getCategories(key).includes(type));\n                    const categories: Array<string | TTextValueStrings> = getCategories(key);\n                    const title = contract_types[type]?.title;\n                    const is_available = !!available_categories[key as keyof TTradeTypesCategories]?.categories?.find(\n                        el => (el as TTextValueStrings).text === title\n                    );\n                    if (categories.includes(type) && !is_available) {\n                        categories[categories.indexOf(type)] = { value: type, text: title };\n                    }\n                    if (key) {\n                        non_available_categories[key] = mutable_contracts_config[key];\n                    }\n                });\n            }\n            non_available_categories = getCleanedUpCategories(non_available_categories);\n        });\n\n    const buildTradeTypesConfig = (\n        contract: ContractsFor['available'][number],\n        trade_types: { [key: string]: string } = {}\n    ) => {\n        trade_types[contract.contract_type] = contract.contract_display ?? '';\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = <T>(arr_new_values: Array<T>, value: T): T =>\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0];\n\n    const getContractValues = (store: TTradeStore): TContractValues | Record<string, never> => {\n        const {\n            contract_expiry_type,\n            contract_type,\n            basis,\n            duration_unit,\n            expiry_type,\n            multiplier,\n            start_date,\n            cancellation_duration,\n            short_barriers,\n            long_barriers,\n            strike_price_choices,\n        } = store;\n\n        if (!contract_type) return {};\n\n        let stored_barriers_data: TTradeStore['short_barriers' | 'long_barriers' | 'strike_price_choices'];\n        switch (getContractSubtype(contract_type)) {\n            case 'Short':\n                stored_barriers_data = short_barriers;\n                break;\n            case 'Long':\n                stored_barriers_data = long_barriers;\n                break;\n            case 'Call':\n            case 'Put':\n                stored_barriers_data = strike_price_choices;\n                break;\n            default:\n                stored_barriers_data = {};\n        }\n\n        const form_components = getComponents(contract_type);\n        const obj_basis = getBasis(contract_type, basis);\n        const obj_trade_types = getTradeTypes(contract_type);\n        const obj_start_dates = getStartDates(contract_type, start_date);\n        const obj_start_type = getStartType(obj_start_dates.start_date);\n        const obj_barrier = getBarriers(contract_type, contract_expiry_type, stored_barriers_data?.barrier);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n        const obj_accumulator_range_list = getAccumulatorRange(contract_type);\n        const obj_barrier_choices = getBarrierChoices(contract_type, stored_barriers_data?.barrier_choices);\n        const obj_multiplier_range_list = getMultiplierRange(contract_type, multiplier);\n        const obj_cancellation = getCancellation(contract_type, cancellation_duration);\n        const obj_expiry_type = getExpiryType(obj_duration_units_list.duration_units_list, expiry_type);\n        const obj_equal = getEqualProps(contract_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n            ...obj_expiry_type,\n            ...obj_accumulator_range_list,\n            ...obj_barrier_choices,\n            ...obj_multiplier_range_list,\n            ...obj_cancellation,\n            ...obj_equal,\n        };\n    };\n\n    const getContractType = (list: TTradeTypesCategories, contract_type: string) => {\n        const arr_list: string[] = Object.keys(list || {})\n            .reduce<string[]>((k, l) => [...k, ...(list[l].categories as TTextValueStrings[]).map(ct => ct.value)], [])\n            .filter(type => unsupported_contract_types_list.indexOf(type) === -1)\n            .sort((a, b) => (a === 'multiplier' || b === 'multiplier' ? -1 : 0));\n\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type: string) => {\n        const check = ['duration', 'amount', ...contract_types[c_type].components].filter(\n            component =>\n                !(\n                    component === 'duration' &&\n                    contract_types[c_type].config &&\n                    contract_types[c_type].config?.hide_duration\n                )\n        );\n        return (\n            contract_types && {\n                form_components: check,\n            }\n        );\n    };\n\n    const getDurationUnitsList = (contract_type: string, contract_start_type: string) => {\n        return {\n            duration_units_list:\n                (getPropertyValue(available_contract_types, [\n                    contract_type,\n                    'config',\n                    'durations',\n                    'units_display',\n                    contract_start_type,\n                ]) as TTextValueStrings[]) || [],\n        };\n    };\n\n    const getDurationUnit = (duration_unit: string, contract_type: string, contract_start_type: string) => {\n        const duration_units =\n            (getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'units_display',\n                contract_start_type,\n            ]) as TTextValueStrings[]) || [];\n        const arr_units: string[] = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type: string, contract_start_type: string, contract_expiry_type?: string) => {\n        let duration_min_max: TTradeStore['duration_min_max'] =\n            getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'min_max',\n                contract_start_type,\n            ]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max =\n                'contract_expiry_type' in duration_min_max\n                    ? (duration_min_max as unknown as { [key: string]: TTradeStore['duration_min_max'] })[\n                          contract_expiry_type\n                      ]\n                    : {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date: number) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type: string, current_start_date: number) => {\n        const config: TConfig = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config?.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config?.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date)\n            ? current_start_date\n            : start_dates_list[0]?.value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type: string, start_date: number) => {\n        const config: TConfig = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions = config.forward_starting_dates?.find(option => option.value === start_date)?.sessions;\n        return { sessions };\n    };\n\n    const hours = [...Array(24).keys()].map(a => `0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map(a => `0${a * 5}`.slice(-2));\n\n    const getValidTime = (\n        sessions: ReturnType<typeof getSessions>['sessions'],\n        compare_moment: moment.Moment,\n        start_moment?: moment.Moment\n    ) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(\n                Number(\n                    minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(+m))) ||\n                        compare_moment.format('mm')\n                )\n            );\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(\n                    Number(\n                        hours.find(h => isSessionAvailable(sessions, compare_moment.hour(+h), start_moment, true)) ||\n                            compare_moment.format('HH')\n                    )\n                );\n                compare_moment.minute(\n                    Number(\n                        minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(+m))) ||\n                            compare_moment.format('mm')\n                    )\n                );\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date: string | number | null, time?: string | null) => {\n        const [hour, minute] = isTimeValid(time ?? '') ? time?.split(':') ?? [] : [0, 0];\n        return toMoment(date || ServerTime.get())\n            .hour(+hour)\n            .minute(+minute);\n    };\n\n    const getStartTime = (\n        sessions: ReturnType<typeof getSessions>['sessions'],\n        start_date: number,\n        start_time?: string | null\n    ) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingEvents = async (date: string, underlying: string | null = null) => {\n        if (!date) {\n            return [];\n        }\n        if (!(date in trading_events)) {\n            const trading_times_response: TradingTimesResponse = await WS.tradingTimes(date);\n            const trading_times_data = trading_times_response.trading_times as TradingTimes;\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_data.markets.length; i++) {\n                    const submarkets = trading_times_data.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_events[trading_times_response.echo_req.trading_times as string]) {\n                                        trading_events[trading_times_response.echo_req.trading_times as string] = {};\n                                    }\n                                    trading_events[trading_times_response.echo_req.trading_times as string][\n                                        symbol.symbol\n                                    ] = symbol.events as TEvents;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return trading_events[date][underlying as string];\n    };\n\n    const getTradingTimes = async (\n        date: string | null,\n        underlying: string | null = null\n    ): Promise<Record<string, never> | TTimes | Record<string, TTimes>> => {\n        if (!date) {\n            return {};\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response: TradingTimesResponse = await WS.tradingTimes(date);\n            const trading_times_data = trading_times_response.trading_times as TradingTimes;\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_data.markets.length; i++) {\n                    const submarkets = trading_times_data.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times as string]) {\n                                        trading_times[trading_times_response.echo_req.trading_times as string] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times as string][\n                                        symbol.symbol\n                                    ] = {\n                                        open: (symbol.times as TTimes).open,\n                                        close: (symbol.times as TTimes).close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (\n        duration_units_list: ReturnType<typeof getDurationUnitsList>['duration_units_list'],\n        expiry_type: string | null\n    ) => {\n        if (duration_units_list) {\n            if (\n                (!expiry_type && duration_units_list.length > 0) ||\n                (duration_units_list.length === 1 && duration_units_list[0].value === 't')\n            ) {\n                return { expiry_type: 'duration' };\n            }\n            if (duration_units_list.length === 0) {\n                return {\n                    expiry_type: null,\n                };\n            }\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (\n        duration_units_list: ReturnType<typeof getDurationUnitsList>['duration_units_list'],\n        expiry_date: string | null,\n        expiry_type: string | null,\n        start_date: number\n    ) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format(\n                    'YYYY-MM-DD'\n                );\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') ||\n                    (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date: string | null,\n        expiry_time: string | null,\n        expiry_type: string | null,\n        market_close_times: string[] | undefined | TTimes,\n        sessions: TTradeStore['sessions'],\n        start_date: number,\n        start_time?: string | null\n    ) => {\n        let end_time: moment.Moment | string | null = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (Array.isArray(market_close_times) && market_close_times?.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [\n                    {\n                        open: start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                        close: minDate(\n                            start_moment.clone().add(24, 'hour'),\n                            buildMoment(expiry_date, market_close_time)\n                        ),\n                    },\n                ];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session =\n                        sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add(is_end_of_day || is_end_of_session ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time as moment.Moment).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = (moment_obj: moment.Moment) =>\n        moment_obj.minute(Math.ceil(moment_obj.minute() / 5) * 5);\n\n    const getTradeTypes = (contract_type: string) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type: string, expiry_type: string, stored_barrier_value?: string) => {\n        const barriers =\n            (getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) as TBarriers) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1 = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2 = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1: stored_barrier_value || barrier_1.toString(),\n            barrier_2: barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type: string, basis: string) => {\n        const arr_basis: string[] = getPropertyValue(available_contract_types, [contract_type, 'basis']) || [];\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce<TTextValueStrings[]>(\n            (cur, bas) => [...cur, { text: localized_basis[bas as keyof typeof localized_basis], value: bas }],\n            []\n        );\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    const getAccumulatorRange = (contract_type: string) => ({\n        accumulator_range_list:\n            (getPropertyValue(available_contract_types, [contract_type, 'config', 'growth_rate_range']) as number[]) ||\n            [],\n    });\n\n    const getBarrierChoices = (contract_type: string, stored_barrier_choices = [] as string[]) => ({\n        barrier_choices: stored_barrier_choices.length\n            ? stored_barrier_choices\n            : getPropertyValue(available_contract_types, [contract_type, 'config', 'barrier_choices']) || [],\n    });\n\n    const getMultiplierRange = (contract_type: string, multiplier: number) => {\n        const arr_multiplier: number[] =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'multiplier_range']) || [];\n\n        return {\n            multiplier_range_list: arr_multiplier.map(m => ({ text: `x${m}`, value: m })),\n            multiplier: getArrayDefaultValue(arr_multiplier, multiplier),\n        };\n    };\n\n    const getCancellation = (contract_type: string, cancellation_duration: string) => {\n        const arr_cancellation_range: string[] =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'cancellation_range']) || [];\n        const cached_multipliers_cancellation: string[] =\n            getPropertyValue(available_contract_types, ['multiplier', 'config', 'cancellation_range']) || [];\n        const regex = /(^(?:\\d){1,})|((?:[a-zA-Z]){1,}$)/g;\n        const getText = (str: string) => {\n            const [duration, unit] = str.match(regex) ?? [];\n            const unit_map = getUnitMap();\n            const unit_names = unit_map[unit as keyof typeof unit_map];\n            const name = 'name_plural' in unit_names ? unit_names.name_plural : unit_names.name;\n            return `${duration} ${name}`;\n        };\n        const mapCancellationRangeList = (d: string) => ({ text: `${getText(d)}`, value: d });\n\n        const should_show_cancellation = !!arr_cancellation_range.length;\n\n        return {\n            cancellation_duration: getArrayDefaultValue(arr_cancellation_range, cancellation_duration),\n            cancellation_range_list: arr_cancellation_range.map(mapCancellationRangeList),\n            cached_multiplier_cancellation_list: cached_multipliers_cancellation.map(mapCancellationRangeList),\n            ...(should_show_cancellation ? {} : { has_cancellation: false }),\n        };\n    };\n\n    const getEqualProps = (contract_type: string) => {\n        const base_contract_type = /^(.*)_equal$/.exec(contract_type)?.[1];\n\n        if (base_contract_type && !available_contract_types[base_contract_type]) {\n            return {\n                is_equal: 1,\n                has_equals_only: true,\n            };\n        }\n        return {};\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingEvents,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n            non_available_contract_types_list: non_available_categories,\n        }),\n    };\n})();\n","import { PriceProposalResponse, Proposal } from '@deriv/api-types';\nimport {\n    convertToUnix,\n    getDecimalPlaces,\n    getLocalizedBasis,\n    getPropertyValue,\n    isAccumulatorContract,\n    isTurbosContract,\n    toMoment,\n} from '@deriv/shared';\nimport { TError, TTradeStore } from 'Types';\n\ntype TObjContractBasis = {\n    text: string;\n    value: string;\n};\n\ntype TObjMultiplier = {\n    cancellation?: string;\n    limit_order?: {\n        take_profit?: number;\n        stop_loss?: number;\n    };\n    multiplier?: number;\n};\n\ntype TObjAccum = {\n    growth_rate?: number;\n    limit_order?: {\n        take_profit?: number;\n    };\n};\n\ntype TObjExpiry = {\n    date_expiry?: number;\n};\n\nconst isVisible = (elem: HTMLElement) => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\nconst map_error_field: { [key: string]: string } = {\n    barrier: 'barrier_1',\n    barrier2: 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = (response: PriceProposalResponse) => {\n    const error_field: string = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return el_error && isVisible(el_error) ? error_id : null;\n};\n\nexport const getProposalInfo = (\n    store: TTradeStore,\n    response: PriceProposalResponse & TError,\n    obj_prev_contract_basis: TObjContractBasis\n) => {\n    const proposal = response.proposal || ({} as Proposal);\n    const profit = (proposal.payout || 0) - (proposal.ask_price || 0);\n    const returns = (profit * 100) / (proposal.ask_price || 1);\n    const stake = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis: TObjContractBasis | undefined =\n        store.is_vanilla || store.is_turbos\n            ? { text: getLocalizedBasis().payout_per_point, value: 'display_number_of_contracts' }\n            : basis_list.find(o => o.value !== store.basis) || ({} as TObjContractBasis);\n\n    const is_stake = contract_basis?.value === 'stake';\n\n    const price = is_stake ? stake : (proposal[contract_basis?.value as keyof Proposal] as string | number);\n    let has_increased = false;\n\n    if (price !== undefined && price !== null) {\n        has_increased = price > obj_prev_contract_basis.value;\n    }\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = !!null;\n    }\n\n    const obj_contract_basis = {\n        text: contract_basis?.text || '',\n        value: price || '',\n    };\n\n    const commission = proposal.commission;\n    const cancellation = proposal.cancellation;\n    const accumulators_details = {\n        ...proposal.contract_details,\n        growth_rate: store.growth_rate,\n        spot_time: proposal.spot_time,\n    };\n\n    return {\n        commission,\n        cancellation,\n        id: proposal.id || '',\n        has_error: !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        error_code: response?.error?.code,\n        error_field: response?.error?.details?.field,\n        has_increased,\n        limit_order: proposal.limit_order,\n        message: proposal.longcode || response?.error?.message,\n        obj_contract_basis,\n        payout: proposal.payout,\n        profit: profit.toFixed(getDecimalPlaces(store.currency)),\n        returns: `${returns.toFixed(2)}%`,\n        stake,\n        spot: proposal.spot,\n        ...accumulators_details,\n    };\n};\n\nexport const createProposalRequests = (store: TTradeStore) => {\n    const requests = {} as Record<string, ReturnType<typeof createProposalRequestForContract>>;\n\n    Object.keys(store.trade_types).forEach(type => {\n        const new_req = createProposalRequestForContract(store, type);\n        requests[type] = new_req;\n    });\n\n    return requests;\n};\n\nconst setProposalMultiplier = (store: TTradeStore, obj_multiplier: TObjMultiplier) => {\n    obj_multiplier.multiplier = store.multiplier;\n    obj_multiplier.cancellation = store.has_cancellation ? store.cancellation_duration : undefined;\n\n    obj_multiplier.limit_order = store.has_take_profit || store.has_stop_loss ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit && obj_multiplier.limit_order) {\n        obj_multiplier.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n\n    if (store.has_stop_loss && store.stop_loss && obj_multiplier.limit_order) {\n        obj_multiplier.limit_order.stop_loss = +store.stop_loss || 0; // send positive stop_loss to API\n    }\n};\n\nconst setProposalAccumulator = (store: TTradeStore, obj_accumulator: TObjAccum) => {\n    obj_accumulator.growth_rate = store.growth_rate;\n\n    obj_accumulator.limit_order = store.has_take_profit ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit && obj_accumulator.limit_order) {\n        obj_accumulator.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n};\n\nconst createProposalRequestForContract = (store: TTradeStore, type_of_contract: string) => {\n    const obj_accumulator: TObjAccum = {};\n    const obj_expiry: TObjExpiry = {};\n    const obj_multiplier: TObjMultiplier = {};\n    let limit_order;\n\n    if (store.expiry_type === 'endtime' && store.expiry_time) {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    if (store.contract_type === 'multiplier') {\n        setProposalMultiplier(store, obj_multiplier);\n    }\n\n    if (store.contract_type === 'accumulator') {\n        setProposalAccumulator(store, obj_accumulator);\n    }\n\n    if (isTurbosContract(store.contract_type) && store.has_take_profit && store.take_profit) {\n        limit_order = { take_profit: +store.take_profit || 0 };\n    }\n\n    return {\n        proposal: 1,\n        subscribe: 1,\n        amount: parseFloat(store.amount.toString()) || 0,\n        basis: store.basis,\n        contract_type: type_of_contract,\n        currency: store.currency,\n        symbol: store.symbol,\n        ...(store.start_date && store.start_time && { date_start: convertToUnix(store.start_date, store.start_time) }),\n        ...(store.expiry_type === 'duration'\n            ? {\n                  duration: parseInt(store.duration.toString()),\n                  duration_unit: store.duration_unit,\n              }\n            : obj_expiry),\n        ...((store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            !isAccumulatorContract(type_of_contract) && {\n                barrier: store.barrier_1 || store.last_digit,\n            }),\n        ...(store.barrier_count === 2 && !isAccumulatorContract(type_of_contract) && { barrier2: store.barrier_2 }),\n        limit_order,\n        ...obj_accumulator,\n        ...obj_multiplier,\n    };\n};\n","import ServerTime from '_common/base/server_time';\nimport { toMoment } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst isBeforeDate = (compare_moment: moment.Moment, start_moment: moment.Moment, should_only_check_hour: boolean) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions: ReturnType<typeof useTraderStore>['sessions'] = [],\n    compare_moment: moment.Moment = toMoment(ServerTime.get()),\n    start_moment: moment.Moment = toMoment(ServerTime.get()),\n    should_only_check_hour = false\n) =>\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n    (!sessions.length ||\n        !!sessions.find(session =>\n            compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')\n        ));\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport TradeStore from './Modules/Trading/trade-store';\n\nconst TraderStoreContext = React.createContext<TradeStore | null>(null);\n\nexport const TraderStoreProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const { modules } = useStore();\n    // const memoizedValue = useMemo(() => new TraderStore(), []);\n\n    return <TraderStoreContext.Provider value={modules?.trade}>{children}</TraderStoreContext.Provider>;\n};\n\nexport const useTraderStore = () => {\n    const store = React.useContext(TraderStoreContext);\n\n    if (!store) {\n        throw new Error('useTraderStore must be used within TraderStoreProvider');\n    }\n\n    return store;\n};\n","import { getContractConfig, getMarketNamesMap } from '@deriv/shared';\n\ntype TMarketInfo = {\n    category: string;\n    underlying: string;\n};\n\ntype TTradeConfig = {\n    name: JSX.Element;\n    position: string;\n};\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\n\n// TODO: Combine with  extractInfoFromShortcode function in shared, both are currently used\nexport const getMarketInformation = (shortcode: string): TMarketInfo => {\n    const market_info: TMarketInfo = {\n        category: '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp(\n        '^([A-Z]+)_((1HZ[0-9-V]+)|((CRASH|BOOM)[0-9\\\\d]+[A-Z]?)|(OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'\n    );\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = (underlying: string) =>\n    underlying ? getMarketNamesMap()[underlying.toUpperCase() as keyof typeof getMarketNamesMap] : null;\n\nexport const getTradeTypeName = (category: string) =>\n    category\n        ? (getContractConfig()[category.toUpperCase() as keyof typeof getContractConfig] as TTradeConfig)?.name\n        : null;\n","const PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let common_store;\n\n    const init = store => {\n        if (!clock_started) {\n            common_store = store;\n            pending.resolve(common_store.server_time);\n            clock_started = true;\n        }\n    };\n\n    const get = () => (clock_started && common_store.server_time ? common_store.server_time.clone() : undefined);\n\n    return {\n        init,\n        get,\n        timePromise: () => (clock_started ? Promise.resolve(common_store.server_time) : pending.promise),\n    };\n})();\n\nmodule.exports = ServerTime;\n","/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach(attr => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash =\n        static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n"],"names":["createContext","api","useContext","APIContext","send","useCallback","name","payload","response","error","subscribe","queryClient","window","ReactQueryClient","QueryClient","endpoint","app_id","wss","children","standalone","WS","useWS","active_connection","getSocketURL","getAppId","DerivAPI","DerivAPIBasic","connection","WebSocket","value","QueryClientProvider","client","useState","isLoading","setIsLoading","isSubscribed","setSubscribed","setError","data","setData","subscriber","useRef","_subscribe","useAPI","props","prop","undefined","current","e","unsubscribe","useEffect","store","StoreContext","Error","observer","useSubscription","update","useStore","exchange_rates","base_currency","prev","merge","BaseStore","onHydrationDone","makeObservable","this","observable","action","unmount","makePersistable","properties","storage","localStorage","then","Function","stopPersisting","ExchangeRatesStore","FLAGS","wallet","next_wallet","sharkfin","FeatureFlagsStore","Object","keys","length","old","forEach","flag","memoizedValue","useMemo","is_mock","feature_flags","values","BounceUp","animate","y","opacity","initial","transition","type","stiffness","damping","duration","Bounce","className","is_visible","keyname","motion","key","propTypes","PropTypes","SlideInFromTop","SlideInFromBottom","SlideIn","PositionsCardLoader","speed","height","width","backgroundColor","foregroundColor","x","rx","ry","TradeParamsLoader","MobileWrapper","viewBox","DesktopWrapper","addCommaToNumber","num","decimal_places","isNaN","n","String","toFixed","p","indexOf","replace","m","i","getBarrierLabel","contract_info","isDigitType","contract_type","localize","isVanillaContract","getBarrierValue","digitTypeMap","Number","barrier","test","toLowerCase","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","filterByContractType","trade_contract_type","shortcode","is_call_put","isCallPut","is_high_low","isHighLow","is_vanilla","trade_types","getContractTypesConfig","match","includes","data_testid","is_invisible","theme","id","classNames","invisible","Array","from","map","_x","inx","is_dark","findRouteByPath","path","routes_config","result","some","route_info","match_path","matchPath","message","routes","Text","color","size","Icon","icon","align","PositionsDrawerCardItem","portfolio_position","row","measure","onHoverPosition","symbol","is_new_row","in_prop","useNewRowTransition","React","is_sold","CSSTransition","in","timeout","appear","enter","enterDone","exit","onEntered","unmountOnExit","PositionsDrawerCard","onMouseEnter","onMouseLeave","onFooterEntered","should_show_transition","PositionsDrawer","useTraderStore","common","contract_trade","portfolio","ui","currency","server_time","getContractById","all_positions","onMount","onClickCancel","onClickSell","onClickRemove","removePositionById","is_mobile","is_positions_drawer_on","toggleDrawer","togglePositionsDrawer","addToast","current_focus","removeToast","setCurrentFocus","should_show_cancellation_warning","toggleCancellationWarning","toggleUnsupportedContractModal","drawer_ref","list_ref","scrollbar_ref","scrollTo","top","scrollTop","positions","filter","underlying","isTurbosContract","TURBOS","VANILLALONG","body_content","DataList","data_source","rowRenderer","args","keyMapper","row_gap","weight","onClick","ref","NavLink","to","getTradingTimes","target_time","api_initial_load_error","getSymbol","target_symbol","trading_times","markets","submarkets","j","symbols","find","item","calculateTimeLeft","remaining_time_to_open","difference","Date","now","days","Math","floor","hours","minutes","seconds","is_main_page","setIsTimerLoading","onMarketOpen","active_symbols","isMounted","useIsMounted","when_market_opens","setWhenMarketOpens","time_left","setTimeLeft","is_loading","setLoading","isMarketClosed","whenMarketOpens","days_offset","target_date","moment","add","format","api_response","returned_symbol","open","times","close","date_str","toISOString","substring","getUTCDate","hour","opening_time","timer","setTimeout","clearTimeout","timer_components","toString","padStart","opening_time_banner","formatted_opening_time","convertTimeFormat","opening_date","opening_day","as","line_height","Localize","i18n_default_text","components","is_eu","is_synthetics_trading_market_available","is_timer_loading","btn_lbl","Button","text","primary","styles","container","fontSize","lineHeight","position","zIndex","background","padding","marginTop","display","overflowY","prop_name","tabs","textAlign","marginBottom","tab","border","Test","stores","trade_store","test_stores","trade","entries","setIsVisible","setStore","document","addEventListener","stateVisibility","removeEventListener","ctrlKey","keyCode","style","fontWeight","sort","k","v","JSON","stringify","toJS","symbolChange","onSymbolChange","target","DigitsWidget","digits","tick","onDigitChange","onChange","trade_type","selected_digit","last_digit","last_contract","digits_info","display_status","is_digit_contract","is_ended","Digits","digits_array","is_trade_page","ChartTopWidgets","yAxiswidth","charts_ref","open_market","is_digits_widget_active","is_beta_chart","is_dark_mode_on","chart","isMobile","y_axis_width","ChartBottomWidgets","show_accumulators_stats","Widget","AccumulatorsStats","Screen","Loadable","loader","loading","render","loaded","Component","FormLayout","is_market_closed","is_trade_enabled","current_language","ACTIONS","AccumulatorsProfitLossText","current_spot","current_spot_time","profit","is_fading_in","setIsFadingIn","is_sliding","setIsSliding","formatted_profit","formatMoney","prev_profit_tenth","split","current_profit_tenth","setCurrentProfitTenth","profit_tenth_ref","interval_id_ref","fading_in_timeout_id","sliding_timeout_id","profit_portions_array","profit_whole_number","profit_tenth","profit_hundredths","slice","won","sign","runThroughTenthDigit","interval_ms","start","end","clearInterval","interval_id","setInterval","abs","delta","FastMarkerComponent","FastMarkerBeta","FastMarker","markerRef","setPosition","epoch","price","overlap_y_axis","getCurrencyDisplayCode","AccumulatorsProfitLossTooltip","alignment","exit_tick","exit_tick_time","high_barrier","should_show_profit_text","is_tooltip_open","setIsTooltipOpen","tooltip_timeout","onCloseDelayed","onHoverOrTapHandler","opposite_arrow_position","horizontal","el","onTouchStart","onTouchEnd","Money","amount","has_sign","show_currency","AccumulatorsChartElements","has_crossed_accu_barriers","accumulators_positions","ChartMarkerComponent","ChartMarkerBeta","ChartMarker","contract_id","marker_config","ContentComponent","marker_content_props","ToolbarWidgets","updateChartType","updateGranularity","portalNodeId","onChartType","onGranularity","isDesktop","searchInputClassName","ToolbarWidgetsBeta","BottomWidgetsMobile","setTick","setDigits","Trade","form_components","getFirstOpenMarket","has_barrier","is_accumulator","is_chart_loading","is_synthetics_available","is_turbos","onUnmount","prepareTradeStore","setContractTypes","setIsDigitsWidgetActive","setMobileDigitView","should_show_active_symbols_loading","show_digits_stats","NotificationMessages","notification_messages_ui","is_market_unavailable_visible","has_only_forward_starting_contracts","should_show_multipliers_onboarding","is_dark_theme","network_status","try_synthetic_indices","setTrySyntheticIndices","try_open_markets","setTryOpenMarkets","category","setCategory","subcategory","setSubcategory","swipe_index","setSwipeIndex","setMarket","markets_to_search","market_cat","market_subcat","selectMultipliers","bottomWidgets","d","t","onTryOtherMarkets","topWidgets","params","form_wrapper_class","chart_height_offset","Div100vhContainer","is_disabled","height_offset","fallback","ChartTrade","SwipeableWrapper","index","is_swipe_disabled","SmartChartWithRef","innerRef","ChartMarkers","config","markers_array","granularity","marker","Marker","AllMarkers","end_epoch","accumulator_barriers_data","accumulator_contract_barriers_data","chart_type","is_chart_layout_default","is_chart_countdown_visible","is_socket_opened","should_show_eu_content","chartStateChange","main_barrier","main_barrier_flattened","extra_barriers","barriers_flattened","exportLayout","setChartStatus","chart_layout","wsForget","wsForgetStream","wsSendRequest","wsSubscribe","has_alternative_source","settings","assetInformation","countdown","isHighestLowestMarkerEnabled","language","whitespace","minimumLeftBars","barriers","max_ticks","contracts_array","crosshair","crosshairTooltipLeftAllow","showLastDigitStats","chartControlsWidgets","chartStatusListener","chartType","initialData","activeSymbols","parse","chartData","feedCall","enabledNavigationWidget","enabledChartFooter","maxTick","requestAPI","requestForget","requestForgetStream","requestSubscribe","allowTickChartTypeOnly","stateChangeListener","isConnectionOpened","clearChart","toolbarWidget","importedLayout","onExportLayout","shouldFetchTradingTimes","hasAlternativeSource","getMarketsOrder","synthetic_index","has_synthetic_index","s","market","a","b","display_name","reduce","arr","push","should_zoom_out_on_yaxis","yAxisMargin","isLive","leftMargin","is_beta","accumulators_high_barrier","getDecimalPlaces","routesConfig","ContractDetails","moduleLoader","route_default","component","getTitle","is_authenticated","exact","BinaryLink","active_class","normalizePath","route","getRoutesConfig","activeClassName","Route","pathname","removeBranchName","location","is_valid_route","lastIndexOf","r","validateRoute","Redirect","is_logging_in","is_logged_in","redirectToLogin","getLanguage","default_subroute","has_default_subroute","isEmptyObject","title","default_title","alternateLinkTagChange","canonicalLinkTagChange","Switch","idx","checkRoutingMatch","route_list","tradePageMountingMiddleware","path_from","path_to","match_patterns","callback","pattern","UILoader","Routes","history","passthrough","setTradeMountingPolicy","setSkipPrePostLifecycle","has_error","onUnmountPortfolio","setPromptHandler","route_to","flatMap","subroute","has_match","withRouter","is_contract_won","getCardLabels","CLOSED","PositionsModalCard","contract_update","current_tick","indicative","is_sell_requested","is_unsupported","profit_loss","sell_price","status","togglePositions","loader_el","is_multiplier","isMultiplierContract","isAccumulatorContract","is_crypto","isCryptoContract","has_progress_slider","has_ended","getEndTime","fallback_result","total_profit","getTotalProfit","should_show_sell","hasContractEntered","isOpen","getSymbolDisplayName","getMarketInformation","contract_options_el","ContractCard","getContractTypeDisplay","multiplier","CurrencyBadge","isCryptocurrency","buy_price","payout","ProgressSliderMobile","start_time","date_start","expiry_time","date_expiry","ticks_count","tick_count","contract_vanilla_el","bid_price","entry_spot","TOTAL_PROFIT_LOSS","custom_card_header","custom_card_body","is_positions","custom_card_footer","custom_contract_el","should_show_result_overlay","contract_el","getContractPath","positions_count","is_open","positions_toggle_class","active_positions_count","filtered_positions","is_empty","hidden_positions_ids","setHiddenPositionsIds","displayed_positions","every","hidden_position_id","closed_positions_ids","closeModal","Set","TransitionGroup","Modal","toggleModal","is_vertical_top","has_close_icon","positions_currency","positions_error","onPositionsSell","onPositionsCancel","modules","populateHeaderExtensions","onMountPositions","is_populating_account_list","cashier","general_store","onMountCashier","onMountCommon","setAccountSwitchListener","show_positions_toggle","show_component","populateHeaderfunction","header_items","waitForLogin","when","TradeFooterExtensions","populateFooterExtensions","populateFooter","TogglePositionsIcon","ChartSettingContainer","populateSettingsExtensions","populateSettings","menu_items","label","renderItemValue","onChangeSymbolAsync","ContractType","getValidationRules","rules","min","barrier_1","condition","barrier_count","func","options","inputs","barrier_2","input","trigger","start_date","expiry_date","contract_start_type","isTimeValid","isHourValid","isMinuteValid","start_moment","toMoment","start_moment_clone","clone","h","isSessionAvailable","sessions","minute","getMultiplierValidationRules","stop_loss","has_stop_loss","take_profit","has_take_profit","processPurchase","proposal_id","onChangeContractTypeList","contract_types_list","onChangeContractType","onChangeExpiry","contract_expiry_type","getExpiryType","duration_min_max","duration_unit","assertDuration","getDurationMinMaxValues","max","onChangeStartDate","root_store","expiry_type","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_duration_min_max","obj_market_open_times","market_open_times","obj_market_close_times","market_close_times","obj_expiry_time","processInSequence","functions","snapshot","getSnapshot","assign","updateStore","processTradeParams","new_state","getMethodsList","duration_functions","getExpiryMethodsList","filtered_keys","ContractTypeHelper","StartDate","Duration","getHoveredColor","BARRIER_COLORS","errors","error_count","Errors","rule","is_rule_string","rule_object_name","rule_object_options","validator","getPreBuildDVRs","attribute","error_message","template","name1","name2","prototype","hasOwnProperty","call","ruleObject","Validator","getRuleObject","is_valid","is_ok","addFailure","check","clientInitDisposer","client_init_listener","logoutDisposer","logout_listener","local_storage_properties","networkStatusChangeDisposer","network_status_change_listener","partial_fetch_time","preSwitchAccountDisposer","pre_switch_account_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","session_storage_properties","store_name","switchAccountDisposer","switch_account_listener","themeChangeDisposer","theme_change_listener","validation_errors","validation_rules","retrieveFromStorage","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","assertHasValidCache","defineProperty","enumerable","writable","setupReactionForLocalStorage","setupReactionForSessionStorage","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","Symbol","setItem","sessionStorage","local_storage_snapshot","getItem","session_storage_snapshot","propertyName","messages","concat","property","intercept","change","newValue","validation_rules_for_property","validation_rules_for_trigger","isPassed","get","listener","switch_broadcast","switchEndSignal","isProduction","console","pre_switch_broadcast","setPreSwitchAccount","has_logged_out","setLogout","initialized_broadcast","setInitialized","is_network_online","is_online","has_real_account_signup_ended","setRealAccountSignupEnd","loginid","reactions","act","freeze","removeBarrier","findIndex","splice","ChartBarrierStore","low_barrier","onChartBarrierChange","line_style","not_draggable","lineStyle","shade","shadeColor","high","low","relative","draggable","hidePriceLines","hideBarrierLine","hideOffscreenLine","updateBarriers","updateBarrierShade","onBarrierChange","computed","default_shade","BARRIER_LINE_STYLES","bind","should_display","CONTRACT_SHADES","is_relative","barriers_list","barriersToString","DEFAULT_SHADES","LIMIT_ORDER_TYPES","STOP_OUT","TAKE_PROFIT","STOP_LOSS","setLimitOrderBarriers","is_over","limit_order","isLimitOrderBarrierSupported","limit_orders","obj_limit_order","obj_barrier","showOffscreenArrows","isSingleBarrier","opacityOnOverlap","l","ACTION","STATE_TYPES","SUBFORM_NAME","getChartAnalyticsData","state","option","indicator_type_form_events","market_type_form_events","chart_type_name","time_interval_name","event_type","open_close_action","getChartTypeFormAnalyticsData","indicator_type_name","indicators_category_name","is_info_open","search_string","indicators_subform","info_open_close_action","subform_name","getIndicatorTypeFormAnalyticsData","is_favorite","symbol_category","tab_market_name","market_type_name","favorites_action","getMarketTypeFormAnalyticsData","g_subscribers_map","TradeStore","is_trade_component_mounted","is_purchase_enabled","is_equal","has_equals_only","previous_symbol","non_available_contract_types_list","basis","basis_list","stake_boundary","expiry_epoch","hovered_barrier","barrier_choices","start_dates_list","is_mobile_digit_view_selected","proposal_info","purchase_info","accumulator_range_list","growth_rate","maximum_payout","maximum_ticks","ticks_history_stats","tick_size_barrier","multiplier_range_list","has_cancellation","commission","cancellation_price","stop_out","expiration","hovered_contract_type","cancellation_duration","cancellation_range_list","cached_multiplier_cancellation_list","long_barriers","short_barriers","strike_price_choices","is_trade_params_expanded","contract_purchase_toast_box","debouncedProposal","debounce","requestProposal","proposal_requests","is_purchasing_contract","initial_barriers","is_initial_barrier_applied","should_skip_prepost_lifecycle","clearContracts","contracts","setMainBarrier","barrier2","isBarrierSupported","onPurchase","disablePurchaseButtons","el_purchase_value","getElementsByClassName","el_purchase_buttons","classList","prev_chart_layout","req","current_spot_data","quote","prices","echo_req","ticks_history","prev_spot_time","updateAccumulatorBarriersData","stream_id","ServerTime","msg_type","time","unix","has_open_accu_contract","setHoveredBarrier","setDefaultGrowthRate","accountSwitcherListener","barrier_pipsize","changeDurationValidationRules","clearContractPurchaseToastBox","clearLimitOrderBarriers","clearPurchaseInfo","clientInitListener","enablePurchase","forgetAllProposal","initAccountCurrency","is_symbol_in_active_symbols","is_vanilla_fx","loadActiveSymbols","logoutListener","networkStatusChangeListener","onAllowEqualsChange","onChangeMultiple","onHoverPurchase","onProposalResponse","override","preSwitchAccountListener","pushPurchaseDataToGtm","refresh","resetAccumulatorData","resetErrorServices","resetPreviousSymbol","setActiveSymbols","setBarrierChoices","setContractPurchaseToastbox","setDefaultSymbol","setIsTradeParamsExpanded","setMarketStatus","setPreviousSymbol","setStakeBoundary","setTradeStatus","updateSymbol","date","resetEndTimeOnVolatilityIndices","setContractType","symbol_info","exchange_is_open","open_accu_contract","active_positions","clearAccumulatorBarriersData","should_skip","should_set_default_symbol","should_show_loading","code","pickDefaultSymbol","symbol_to_update","processNewValuesAsync","runInAction","is_on_mf_account","landing_company_shortcode","clients_country","showError","showUnavailableLocationError","showDigitalOptionsUnavailableError","platform_name_trader","getPlatformSettings","link","platform_name_mt5","contract_categories","setSelectedContractType","default_currency","selectCurrency","hovered_value","getBarrierPipSize","isDigitTradeType","is_tick_contract","setServicesError","services_error","buy","contract_data","longcode","extractInfoFromShortcode","isDigitContractType","toUpperCase","addContract","onBuyResponse","openPositionsDrawer","is_unwelcome","cloneObject","parseInt","is_changed_by_user","obj_old_values","should_forget_first","obj_new_values","prev_chart_type","prev_granularity","savePreviousChartMode","prev_currency","has_currency_changed","should_reset_stake","getMinPayout","setHasOnlyForwardingContracts","is_advanced_duration","bool","event","bom_ui","contract","barrier1","positions_drawer","toolbar_position","chart_asset_info","is_chart_asset_info_visible","gtm","pushDataLayer","requests","createProposalRequests","resetPurchaseStates","prev_proposal_info","getPropertyValue","obj_prev_contract_basis","proposal","is_crypto_multiplier","getProposalInfo","MULTUP","cancellation","ask_price","order_amount","ACCU","barrier_spot_distance","ticks_stayed_in","last_tick_epoch","spot_time","previous_ticks_history_stats","new_ticks_history_stats","previous_history","previous_epoch","reverse","getUpdatedTicksHistoryStats","accumulators_low_barrier","error_id","getProposalErrorField","details","commission_match","field","max_stake","min_stake","limits","duration_options","convertDurationLimit","is_language_changing","Promise","resolve","toggleServicesErrorModal","notifications","setShouldShowPopups","new_currency","is_notifications_visible","toggleNotificationsModal","is_used","layout","startsWith","previousMaxTicks","isDone","isClosed","Analytics","device_type","form_name","hasBarrier","isVanillaFxContract","list","getAvailableContractTypes","unsupported_contract_types_list","findFirstOpenMarket","stored_barriers_data","getContractSubtype","is_active","ModulesStore","core_store","RootStore","contract_replay","chart_barrier_store","configure","enforceActions","websocket","setWebsocket","TradeModals","initStore","TicksHistoryCounter","has_progress_dots","progress_dots_testid","should_emphasize_last_counter","ticks_history_counter_testid","should_highlight_last_counter","dot","ExpandedTicksHistory","history_text_size","rows","counter","AccumulatorsStatsManualModal","icon_classname","is_manual_open","toggleManual","getVideoSource","extension","getUrlBase","mp4_src","webm_src","should_header_stick_body","Loading","is_fullscreen","autoPlay","loop","onLoadedData","playsInline","preload","src","ROW_SIZES","is_expandable","is_collapsed","setIsCollapsed","setIsManualOpen","widget_title","acc","_el","desktop_row_size","mobile_row_size","row_size","MobileDialog","onClose","portal_element_id","visible","wrapper_classname","is_latest","is_lost","is_selected","is_won","percentage","display_percentage","parseFloat","is_selected_winning","is_max","is_min","w","cx","cy","fill","stroke","strokeWidth","strokeOpacity","strokeDasharray","join","strokeDashoffset","has_entry_spot","onSelect","latest_digit","stats","onLastDigitSpot","digit","spot","is_digit_selectable","is_digit_selected","transform","left","custom_color","display_array","dimension","digit_offset","digit_offset_mobile","handleSelect","digit_value","isSelectableDigitType","getOffset","last_contract_digit","latest_tick_pip_size","pip_size","latest_tick_ask_price","ask","latest_tick_digit","pop","barrier_map","val","Boolean","DigitsWrapper","onChangeStatus","has_contract","is_tick_ready","is_contract_elapsed","isContractElapsed","tick_stream","bid","tick_display_value","entry_tick","underlying_name","setStatus","setCurrentTick","setSpot","setIsSelectedWinning","setIsWon","setIsLost","Popover","classNameBubble","margin","getMarketNamesMap","displayName","PageError","header","error_code","redirect_urls","redirect_labels","classNameImage","image_url","is_bottom_widget_visible","marker_props","getMemoizedComponent","div","parse_svg","markup","DOMParser","svg","parseFromString","attributes","paths","points","with_color","bg_color","START","END","is_firefox","navigator","userAgent","search","RawMarkerMaker","draw_callback","epoch_array","price_array","rest","dark_theme","accu_contract_shade","accu_shade","accu_shade_crossed","bg","fg","grey_border","lost","sold","light_theme","getColor","colors","calc_scale","zoom","sqrt","hex_map","calc_opacity","draw_path","ctx","save","scale","translate","prev_x","prev_y","fillStyle","strokeStyle","beginPath","cx1","cx2","cy1","cy2","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","start_a","end_a","arc","closePath","restore","drawAccuBarrierRange","coordinates","labels","has_persistent_borders","previous_tick","shade_color","stroke_color","bottom","start_left","end_left","canvas","offsetWidth","parentElement","stx","panels","yaxisTotalWidthRight","end_top","offsetHeight","xaxisHeight","is_top_visible","is_bottom_visible","displayed_top","displayed_bottom","is_start_left_visible","middle_top","lineWidth","setLineDash","font","fillText","draw_line_without_tick_marker","radius","prev_tick_stroke_color","globalCompositeOperation","PI","fillRect","render_label","line","ceil","measureText","shadowed_text","shadowColor","shadowBlur","TickContract","context","canvas_fixed_height","canvas_height","ticks","is_last_contract","is_in_contract_details","accu_barriers_difference","is_accumulator_trade_without_contract","is_expired","is_accumulator_contract","contract_status","getContractStatus","is_accu_contract_ended","draw_start_line","devicePixelRatio","entry","contract_details_start_left","clr","ICONS","currency_symbols","AUD","EUR","GBP","JPY","USD","BTC","BCH","ETH","ETC","LTC","UST","NonTickContract","expiry","entry_tick_top","exit_tick_top","show_profit","DigitContract","BottomWidgets","portal","getElementById","active_trade_type","trade_type_name","findContractCategory","contract_types","ReactDOM","Toast","shouldUnescape","RecentTradeInfo","filtered_contracts","latest_tick_contract","isEnded","isDigitContract","TopWidgets","InfoBox","is_title_enabled","ChartTitleComponent","ChartTitleBeta","ChartTitle","ChartTitleLocal","enabled","isNestedList","module","load","component_name","setSmartChartsPublicPath","default","SmartChart","ChartMode","DrawTools","Share","StudyLegend","Views","ToolbarWidget","RawMarker","SmartChartBeta","ChartModeBeta","DrawToolsBeta","ShareBeta","StudyLegendBeta","ViewsBeta","ToolbarWidgetBeta","Chart","ToastPopup","portal_id","new_portal_id","NetworkStatusToastError","setIsOpen","NetworkStatusToastErrorPopup","tooltip","isMajorPairsSymbol","checked_symbol","submarket","contract_category_icon","ordered_trade_categories","getContractTypeCategoryIcons","All","Accumulators","Options","Multipliers","Turbos","showLabelForMultipliers","unsupported_list","categories","contract_name","available_contract_types","list_item","getContractCategoryKey","getContractTypes","getCategoriesSortedByKey","digitCategoriesMap","digitTypesMap","available_categories","non_available_categories","trading_events","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getDurationUnitsList","getDurationUnit","getDurationMinMax","getStartType","getStartDates","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBarriers","getBasis","getAccumulatorRange","getBarrierChoices","getMultiplierRange","getCancellation","getEqualProps","contract_display","arr_new_values","c_type","hide_duration","duration_units","arr_units","obj","current_start_date","has_spot","forward_starting_dates","compare_moment","moment_obj","arr_basis","localized_basis","getLocalizedBasis","cur","bas","stored_barrier_choices","arr_multiplier","arr_cancellation_range","cached_multipliers_cancellation","regex","mapCancellationRangeList","str","unit","unit_names","getUnitMap","name_plural","should_show_cancellation","base_contract_type","exec","buildContractTypesConfig","has_contracts","contracts_for","available","start_type","getContractCategoriesConfig","sub_cats","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","growth_rate_range","multiplier_range","cancellation_range","getCleanedUpCategories","mutable_contracts_config","getCategories","non_available_contracts","non_available","is_available","stored_barrier_value","barrier_values","count","getContractType","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_duration_units_min_max","obj_accumulator_range_list","obj_barrier_choices","obj_multiplier_range_list","obj_cancellation","obj_equal","getFullContractTypes","getExpiryDate","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","isSameOrBefore","getExpiryTime","end_time","market_close_time","isArray","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","getSessions","getStartTime","getTradingEvents","trading_times_response","trading_times_data","events","getContractCategories","map_error_field","error_field","elem","el_error","getElementsByName","returns","stake","display_value","contract_basis","payout_per_point","o","has_increased","obj_contract_basis","accumulators_details","contract_details","has_error_details","new_req","createProposalRequestForContract","type_of_contract","obj_accumulator","obj_expiry","obj_multiplier","convertToUnix","setProposalMultiplier","setProposalAccumulator","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","TraderStoreContext","TraderStoreProvider","Provider","market_info","extracted","RegExp","common_store","clock_started","pending","PromiseClass","require","init","timePromise","promise","exports","static_hash","reject","createElement","tag_name","attr","textContent","html","setAttribute","getStaticHash","querySelector","getAttribute"],"sourceRoot":""}